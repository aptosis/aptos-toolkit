(function() {var implementors = {};
implementors["addr2line"] = [{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"addr2line/struct.Context.html\" title=\"struct addr2line::Context\">Context</a>&lt;R&gt;","synthetic":true,"types":["addr2line::Context"]},{"text":"impl&lt;'ctx, R&gt; Freeze for <a class=\"struct\" href=\"addr2line/struct.LocationRangeIter.html\" title=\"struct addr2line::LocationRangeIter\">LocationRangeIter</a>&lt;'ctx, R&gt;","synthetic":true,"types":["addr2line::LocationRangeIter"]},{"text":"impl&lt;'ctx, R&gt; Freeze for <a class=\"struct\" href=\"addr2line/struct.FrameIter.html\" title=\"struct addr2line::FrameIter\">FrameIter</a>&lt;'ctx, R&gt;","synthetic":true,"types":["addr2line::FrameIter"]},{"text":"impl&lt;'ctx, R&gt; Freeze for <a class=\"struct\" href=\"addr2line/struct.Frame.html\" title=\"struct addr2line::Frame\">Frame</a>&lt;'ctx, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"gimli/read/reader/trait.Reader.html\" title=\"trait gimli::read::reader::Reader\">Reader</a>&gt;::<a class=\"associatedtype\" href=\"gimli/read/reader/trait.Reader.html#associatedtype.Offset\" title=\"type gimli::read::reader::Reader::Offset\">Offset</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["addr2line::Frame"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"addr2line/struct.FunctionName.html\" title=\"struct addr2line::FunctionName\">FunctionName</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["addr2line::FunctionName"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"addr2line/struct.Location.html\" title=\"struct addr2line::Location\">Location</a>&lt;'a&gt;","synthetic":true,"types":["addr2line::Location"]}];
implementors["adler"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"adler/struct.Adler32.html\" title=\"struct adler::Adler32\">Adler32</a>","synthetic":true,"types":["adler::Adler32"]}];
implementors["aead"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"aead/struct.Error.html\" title=\"struct aead::Error\">Error</a>","synthetic":true,"types":["aead::Error"]},{"text":"impl&lt;'msg, 'aad&gt; Freeze for <a class=\"struct\" href=\"aead/struct.Payload.html\" title=\"struct aead::Payload\">Payload</a>&lt;'msg, 'aad&gt;","synthetic":true,"types":["aead::Payload"]}];
implementors["aes"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"aes/struct.Aes128.html\" title=\"struct aes::Aes128\">Aes128</a>","synthetic":true,"types":["aes::autodetect::Aes128"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aes/struct.Aes192.html\" title=\"struct aes::Aes192\">Aes192</a>","synthetic":true,"types":["aes::autodetect::Aes192"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aes/struct.Aes256.html\" title=\"struct aes::Aes256\">Aes256</a>","synthetic":true,"types":["aes::autodetect::Aes256"]}];
implementors["aes_gcm"] = [{"text":"impl&lt;Aes, NonceSize&gt; Freeze for <a class=\"struct\" href=\"aes_gcm/struct.AesGcm.html\" title=\"struct aes_gcm::AesGcm\">AesGcm</a>&lt;Aes, NonceSize&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Aes: Freeze,&nbsp;</span>","synthetic":true,"types":["aes_gcm::AesGcm"]}];
implementors["ahash"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"ahash/struct.AHasher.html\" title=\"struct ahash::AHasher\">AHasher</a>","synthetic":true,"types":["ahash::fallback_hash::AHasher"]},{"text":"impl&lt;K, V, S&gt; Freeze for <a class=\"struct\" href=\"ahash/struct.AHashMap.html\" title=\"struct ahash::AHashMap\">AHashMap</a>&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["ahash::hash_map::AHashMap"]},{"text":"impl&lt;T, S&gt; Freeze for <a class=\"struct\" href=\"ahash/struct.AHashSet.html\" title=\"struct ahash::AHashSet\">AHashSet</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["ahash::hash_set::AHashSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ahash/struct.RandomState.html\" title=\"struct ahash::RandomState\">RandomState</a>","synthetic":true,"types":["ahash::random_state::RandomState"]}];
implementors["aho_corasick"] = [{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"aho_corasick/struct.AhoCorasick.html\" title=\"struct aho_corasick::AhoCorasick\">AhoCorasick</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["aho_corasick::ahocorasick::AhoCorasick"]},{"text":"impl&lt;'a, 'b, S&gt; Freeze for <a class=\"struct\" href=\"aho_corasick/struct.FindIter.html\" title=\"struct aho_corasick::FindIter\">FindIter</a>&lt;'a, 'b, S&gt;","synthetic":true,"types":["aho_corasick::ahocorasick::FindIter"]},{"text":"impl&lt;'a, 'b, S&gt; Freeze for <a class=\"struct\" href=\"aho_corasick/struct.FindOverlappingIter.html\" title=\"struct aho_corasick::FindOverlappingIter\">FindOverlappingIter</a>&lt;'a, 'b, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["aho_corasick::ahocorasick::FindOverlappingIter"]},{"text":"impl&lt;'a, R, S&gt; Freeze for <a class=\"struct\" href=\"aho_corasick/struct.StreamFindIter.html\" title=\"struct aho_corasick::StreamFindIter\">StreamFindIter</a>&lt;'a, R, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["aho_corasick::ahocorasick::StreamFindIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/struct.AhoCorasickBuilder.html\" title=\"struct aho_corasick::AhoCorasickBuilder\">AhoCorasickBuilder</a>","synthetic":true,"types":["aho_corasick::ahocorasick::AhoCorasickBuilder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aho_corasick/enum.MatchKind.html\" title=\"enum aho_corasick::MatchKind\">MatchKind</a>","synthetic":true,"types":["aho_corasick::ahocorasick::MatchKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/struct.Error.html\" title=\"struct aho_corasick::Error\">Error</a>","synthetic":true,"types":["aho_corasick::error::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aho_corasick/enum.ErrorKind.html\" title=\"enum aho_corasick::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["aho_corasick::error::ErrorKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aho_corasick/packed/enum.MatchKind.html\" title=\"enum aho_corasick::packed::MatchKind\">MatchKind</a>","synthetic":true,"types":["aho_corasick::packed::api::MatchKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/packed/struct.Config.html\" title=\"struct aho_corasick::packed::Config\">Config</a>","synthetic":true,"types":["aho_corasick::packed::api::Config"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/packed/struct.Builder.html\" title=\"struct aho_corasick::packed::Builder\">Builder</a>","synthetic":true,"types":["aho_corasick::packed::api::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/packed/struct.Searcher.html\" title=\"struct aho_corasick::packed::Searcher\">Searcher</a>","synthetic":true,"types":["aho_corasick::packed::api::Searcher"]},{"text":"impl&lt;'s, 'h&gt; Freeze for <a class=\"struct\" href=\"aho_corasick/packed/struct.FindIter.html\" title=\"struct aho_corasick::packed::FindIter\">FindIter</a>&lt;'s, 'h&gt;","synthetic":true,"types":["aho_corasick::packed::api::FindIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/struct.Match.html\" title=\"struct aho_corasick::Match\">Match</a>","synthetic":true,"types":["aho_corasick::Match"]}];
implementors["ansi_term"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"ansi_term/struct.Prefix.html\" title=\"struct ansi_term::Prefix\">Prefix</a>","synthetic":true,"types":["ansi_term::ansi::Prefix"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ansi_term/struct.Infix.html\" title=\"struct ansi_term::Infix\">Infix</a>","synthetic":true,"types":["ansi_term::ansi::Infix"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ansi_term/struct.Suffix.html\" title=\"struct ansi_term::Suffix\">Suffix</a>","synthetic":true,"types":["ansi_term::ansi::Suffix"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ansi_term/struct.Style.html\" title=\"struct ansi_term::Style\">Style</a>","synthetic":true,"types":["ansi_term::style::Style"]},{"text":"impl Freeze for <a class=\"enum\" href=\"ansi_term/enum.Colour.html\" title=\"enum ansi_term::Colour\">Colour</a>","synthetic":true,"types":["ansi_term::style::Colour"]},{"text":"impl&lt;'a, S:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"ansi_term/struct.ANSIGenericString.html\" title=\"struct ansi_term::ANSIGenericString\">ANSIGenericString</a>&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/alloc/borrow/trait.ToOwned.html\" title=\"trait alloc::borrow::ToOwned\">ToOwned</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.61.0/alloc/borrow/trait.ToOwned.html#associatedtype.Owned\" title=\"type alloc::borrow::ToOwned::Owned\">Owned</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["ansi_term::display::ANSIGenericString"]},{"text":"impl&lt;'a, S:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"ansi_term/struct.ANSIGenericStrings.html\" title=\"struct ansi_term::ANSIGenericStrings\">ANSIGenericStrings</a>&lt;'a, S&gt;","synthetic":true,"types":["ansi_term::display::ANSIGenericStrings"]}];
implementors["anyhow"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>","synthetic":true,"types":["anyhow::Error"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"anyhow/struct.Chain.html\" title=\"struct anyhow::Chain\">Chain</a>&lt;'a&gt;","synthetic":true,"types":["anyhow::Chain"]}];
implementors["aptos_api_types"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.AccountData.html\" title=\"struct aptos_api_types::AccountData\">AccountData</a>","synthetic":true,"types":["aptos_api_types::account::AccountData"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.Address.html\" title=\"struct aptos_api_types::Address\">Address</a>","synthetic":true,"types":["aptos_api_types::address::Address"]},{"text":"impl&lt;'a, R&gt; !Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.MoveConverter.html\" title=\"struct aptos_api_types::MoveConverter\">MoveConverter</a>&lt;'a, R&gt;","synthetic":true,"types":["aptos_api_types::convert::MoveConverter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.Error.html\" title=\"struct aptos_api_types::Error\">Error</a>","synthetic":true,"types":["aptos_api_types::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.EventKey.html\" title=\"struct aptos_api_types::EventKey\">EventKey</a>","synthetic":true,"types":["aptos_api_types::event_key::EventKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.HashValue.html\" title=\"struct aptos_api_types::HashValue\">HashValue</a>","synthetic":true,"types":["aptos_api_types::hash::HashValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.LedgerInfo.html\" title=\"struct aptos_api_types::LedgerInfo\">LedgerInfo</a>","synthetic":true,"types":["aptos_api_types::ledger_info::LedgerInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.MoveResource.html\" title=\"struct aptos_api_types::MoveResource\">MoveResource</a>","synthetic":true,"types":["aptos_api_types::move_types::MoveResource"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.U64.html\" title=\"struct aptos_api_types::U64\">U64</a>","synthetic":true,"types":["aptos_api_types::move_types::U64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.U128.html\" title=\"struct aptos_api_types::U128\">U128</a>","synthetic":true,"types":["aptos_api_types::move_types::U128"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.HexEncodedBytes.html\" title=\"struct aptos_api_types::HexEncodedBytes\">HexEncodedBytes</a>","synthetic":true,"types":["aptos_api_types::move_types::HexEncodedBytes"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.MoveStructValue.html\" title=\"struct aptos_api_types::MoveStructValue\">MoveStructValue</a>","synthetic":true,"types":["aptos_api_types::move_types::MoveStructValue"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_api_types/enum.MoveValue.html\" title=\"enum aptos_api_types::MoveValue\">MoveValue</a>","synthetic":true,"types":["aptos_api_types::move_types::MoveValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.MoveStructTag.html\" title=\"struct aptos_api_types::MoveStructTag\">MoveStructTag</a>","synthetic":true,"types":["aptos_api_types::move_types::MoveStructTag"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_api_types/enum.MoveType.html\" title=\"enum aptos_api_types::MoveType\">MoveType</a>","synthetic":true,"types":["aptos_api_types::move_types::MoveType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.MoveModule.html\" title=\"struct aptos_api_types::MoveModule\">MoveModule</a>","synthetic":true,"types":["aptos_api_types::move_types::MoveModule"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.MoveModuleId.html\" title=\"struct aptos_api_types::MoveModuleId\">MoveModuleId</a>","synthetic":true,"types":["aptos_api_types::move_types::MoveModuleId"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.MoveFunction.html\" title=\"struct aptos_api_types::MoveFunction\">MoveFunction</a>","synthetic":true,"types":["aptos_api_types::move_types::MoveFunction"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.MoveModuleBytecode.html\" title=\"struct aptos_api_types::MoveModuleBytecode\">MoveModuleBytecode</a>","synthetic":true,"types":["aptos_api_types::move_types::MoveModuleBytecode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.MoveScriptBytecode.html\" title=\"struct aptos_api_types::MoveScriptBytecode\">MoveScriptBytecode</a>","synthetic":true,"types":["aptos_api_types::move_types::MoveScriptBytecode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.ScriptFunctionId.html\" title=\"struct aptos_api_types::ScriptFunctionId\">ScriptFunctionId</a>","synthetic":true,"types":["aptos_api_types::move_types::ScriptFunctionId"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.Response.html\" title=\"struct aptos_api_types::Response\">Response</a>","synthetic":true,"types":["aptos_api_types::response::Response"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.TableItemRequest.html\" title=\"struct aptos_api_types::TableItemRequest\">TableItemRequest</a>","synthetic":true,"types":["aptos_api_types::table::TableItemRequest"]},{"text":"impl !Freeze for <a class=\"enum\" href=\"aptos_api_types/enum.TransactionData.html\" title=\"enum aptos_api_types::TransactionData\">TransactionData</a>","synthetic":true,"types":["aptos_api_types::transaction::TransactionData"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.TransactionOnChainData.html\" title=\"struct aptos_api_types::TransactionOnChainData\">TransactionOnChainData</a>","synthetic":true,"types":["aptos_api_types::transaction::TransactionOnChainData"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_api_types/enum.Transaction.html\" title=\"enum aptos_api_types::Transaction\">Transaction</a>","synthetic":true,"types":["aptos_api_types::transaction::Transaction"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.TransactionInfo.html\" title=\"struct aptos_api_types::TransactionInfo\">TransactionInfo</a>","synthetic":true,"types":["aptos_api_types::transaction::TransactionInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.PendingTransaction.html\" title=\"struct aptos_api_types::PendingTransaction\">PendingTransaction</a>","synthetic":true,"types":["aptos_api_types::transaction::PendingTransaction"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.UserTransaction.html\" title=\"struct aptos_api_types::UserTransaction\">UserTransaction</a>","synthetic":true,"types":["aptos_api_types::transaction::UserTransaction"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.UserTransactionRequest.html\" title=\"struct aptos_api_types::UserTransactionRequest\">UserTransactionRequest</a>","synthetic":true,"types":["aptos_api_types::transaction::UserTransactionRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.UserCreateSigningMessageRequest.html\" title=\"struct aptos_api_types::UserCreateSigningMessageRequest\">UserCreateSigningMessageRequest</a>","synthetic":true,"types":["aptos_api_types::transaction::UserCreateSigningMessageRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.GenesisTransaction.html\" title=\"struct aptos_api_types::GenesisTransaction\">GenesisTransaction</a>","synthetic":true,"types":["aptos_api_types::transaction::GenesisTransaction"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.BlockMetadataTransaction.html\" title=\"struct aptos_api_types::BlockMetadataTransaction\">BlockMetadataTransaction</a>","synthetic":true,"types":["aptos_api_types::transaction::BlockMetadataTransaction"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.Event.html\" title=\"struct aptos_api_types::Event\">Event</a>","synthetic":true,"types":["aptos_api_types::transaction::Event"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_api_types/enum.TransactionPayload.html\" title=\"enum aptos_api_types::TransactionPayload\">TransactionPayload</a>","synthetic":true,"types":["aptos_api_types::transaction::TransactionPayload"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.ScriptFunctionPayload.html\" title=\"struct aptos_api_types::ScriptFunctionPayload\">ScriptFunctionPayload</a>","synthetic":true,"types":["aptos_api_types::transaction::ScriptFunctionPayload"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.ScriptPayload.html\" title=\"struct aptos_api_types::ScriptPayload\">ScriptPayload</a>","synthetic":true,"types":["aptos_api_types::transaction::ScriptPayload"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.WriteSetPayload.html\" title=\"struct aptos_api_types::WriteSetPayload\">WriteSetPayload</a>","synthetic":true,"types":["aptos_api_types::transaction::WriteSetPayload"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_api_types/enum.WriteSet.html\" title=\"enum aptos_api_types::WriteSet\">WriteSet</a>","synthetic":true,"types":["aptos_api_types::transaction::WriteSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.ScriptWriteSet.html\" title=\"struct aptos_api_types::ScriptWriteSet\">ScriptWriteSet</a>","synthetic":true,"types":["aptos_api_types::transaction::ScriptWriteSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.DirectWriteSet.html\" title=\"struct aptos_api_types::DirectWriteSet\">DirectWriteSet</a>","synthetic":true,"types":["aptos_api_types::transaction::DirectWriteSet"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_api_types/enum.WriteSetChange.html\" title=\"enum aptos_api_types::WriteSetChange\">WriteSetChange</a>","synthetic":true,"types":["aptos_api_types::transaction::WriteSetChange"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_api_types/enum.TransactionId.html\" title=\"enum aptos_api_types::TransactionId\">TransactionId</a>","synthetic":true,"types":["aptos_api_types::transaction::TransactionId"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_api_types/struct.TransactionSigningMessage.html\" title=\"struct aptos_api_types::TransactionSigningMessage\">TransactionSigningMessage</a>","synthetic":true,"types":["aptos_api_types::transaction::TransactionSigningMessage"]}];
implementors["aptos_cli_common"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_cli_common/struct.TransactionSummary.html\" title=\"struct aptos_cli_common::TransactionSummary\">TransactionSummary</a>","synthetic":true,"types":["aptos_cli_common::summary::TransactionSummary"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_cli_common/struct.ChangeSummary.html\" title=\"struct aptos_cli_common::ChangeSummary\">ChangeSummary</a>","synthetic":true,"types":["aptos_cli_common::summary::ChangeSummary"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_cli_common/enum.KeyType.html\" title=\"enum aptos_cli_common::KeyType\">KeyType</a>","synthetic":true,"types":["aptos_cli_common::KeyType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_cli_common/struct.ProfileOptions.html\" title=\"struct aptos_cli_common::ProfileOptions\">ProfileOptions</a>","synthetic":true,"types":["aptos_cli_common::ProfileOptions"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_cli_common/enum.EncodingType.html\" title=\"enum aptos_cli_common::EncodingType\">EncodingType</a>","synthetic":true,"types":["aptos_cli_common::EncodingType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_cli_common/struct.PromptOptions.html\" title=\"struct aptos_cli_common::PromptOptions\">PromptOptions</a>","synthetic":true,"types":["aptos_cli_common::PromptOptions"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_cli_common/struct.EncodingOptions.html\" title=\"struct aptos_cli_common::EncodingOptions\">EncodingOptions</a>","synthetic":true,"types":["aptos_cli_common::EncodingOptions"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_cli_common/struct.PublicKeyInputOptions.html\" title=\"struct aptos_cli_common::PublicKeyInputOptions\">PublicKeyInputOptions</a>","synthetic":true,"types":["aptos_cli_common::PublicKeyInputOptions"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_cli_common/struct.PrivateKeyInputOptions.html\" title=\"struct aptos_cli_common::PrivateKeyInputOptions\">PrivateKeyInputOptions</a>","synthetic":true,"types":["aptos_cli_common::PrivateKeyInputOptions"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_cli_common/struct.RestOptions.html\" title=\"struct aptos_cli_common::RestOptions\">RestOptions</a>","synthetic":true,"types":["aptos_cli_common::RestOptions"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_cli_common/struct.AccountAddressWrapper.html\" title=\"struct aptos_cli_common::AccountAddressWrapper\">AccountAddressWrapper</a>","synthetic":true,"types":["aptos_cli_common::AccountAddressWrapper"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_cli_common/struct.WriteTransactionOptions.html\" title=\"struct aptos_cli_common::WriteTransactionOptions\">WriteTransactionOptions</a>","synthetic":true,"types":["aptos_cli_common::WriteTransactionOptions"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_cli_common/struct.GasOptions.html\" title=\"struct aptos_cli_common::GasOptions\">GasOptions</a>","synthetic":true,"types":["aptos_cli_common::GasOptions"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_cli_common/struct.FaucetOptions.html\" title=\"struct aptos_cli_common::FaucetOptions\">FaucetOptions</a>","synthetic":true,"types":["aptos_cli_common::FaucetOptions"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_cli_common/struct.TransactionOptions.html\" title=\"struct aptos_cli_common::TransactionOptions\">TransactionOptions</a>","synthetic":true,"types":["aptos_cli_common::TransactionOptions"]}];
implementors["aptos_cli_config"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_cli_config/error/enum.CliError.html\" title=\"enum aptos_cli_config::error::CliError\">CliError</a>","synthetic":true,"types":["aptos_cli_config::error::CliError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_cli_config/struct.CliConfig.html\" title=\"struct aptos_cli_config::CliConfig\">CliConfig</a>","synthetic":true,"types":["aptos_cli_config::CliConfig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_cli_config/struct.ProfileConfig.html\" title=\"struct aptos_cli_config::ProfileConfig\">ProfileConfig</a>","synthetic":true,"types":["aptos_cli_config::ProfileConfig"]}];
implementors["aptos_create_resource_account"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_create_resource_account/struct.AptosCreateResourceAccountTool.html\" title=\"struct aptos_create_resource_account::AptosCreateResourceAccountTool\">AptosCreateResourceAccountTool</a>","synthetic":true,"types":["aptos_create_resource_account::AptosCreateResourceAccountTool"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_create_resource_account/struct.AptosCreateResourceAccountResult.html\" title=\"struct aptos_create_resource_account::AptosCreateResourceAccountResult\">AptosCreateResourceAccountResult</a>","synthetic":true,"types":["aptos_create_resource_account::AptosCreateResourceAccountResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_create_resource_account/struct.ProfileInfo.html\" title=\"struct aptos_create_resource_account::ProfileInfo\">ProfileInfo</a>","synthetic":true,"types":["aptos_create_resource_account::ProfileInfo"]}];
implementors["aptos_crypto"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_crypto/bls12381/bls12381_keys/struct.PublicKey.html\" title=\"struct aptos_crypto::bls12381::bls12381_keys::PublicKey\">PublicKey</a>","synthetic":true,"types":["aptos_crypto::bls12381::bls12381_keys::PublicKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_crypto/bls12381/bls12381_keys/struct.PrivateKey.html\" title=\"struct aptos_crypto::bls12381::bls12381_keys::PrivateKey\">PrivateKey</a>","synthetic":true,"types":["aptos_crypto::bls12381::bls12381_keys::PrivateKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_crypto/bls12381/bls12381_pop/struct.ProofOfPossession.html\" title=\"struct aptos_crypto::bls12381::bls12381_pop::ProofOfPossession\">ProofOfPossession</a>","synthetic":true,"types":["aptos_crypto::bls12381::bls12381_pop::ProofOfPossession"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_crypto/bls12381/bls12381_sigs/struct.Signature.html\" title=\"struct aptos_crypto::bls12381::bls12381_sigs::Signature\">Signature</a>","synthetic":true,"types":["aptos_crypto::bls12381::bls12381_sigs::Signature"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_crypto/compat/struct.Sha3_256.html\" title=\"struct aptos_crypto::compat::Sha3_256\">Sha3_256</a>","synthetic":true,"types":["aptos_crypto::compat::Sha3_256"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_crypto/ed25519/struct.Ed25519PrivateKey.html\" title=\"struct aptos_crypto::ed25519::Ed25519PrivateKey\">Ed25519PrivateKey</a>","synthetic":true,"types":["aptos_crypto::ed25519::Ed25519PrivateKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_crypto/ed25519/struct.Ed25519PublicKey.html\" title=\"struct aptos_crypto::ed25519::Ed25519PublicKey\">Ed25519PublicKey</a>","synthetic":true,"types":["aptos_crypto::ed25519::Ed25519PublicKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_crypto/ed25519/struct.Ed25519Signature.html\" title=\"struct aptos_crypto::ed25519::Ed25519Signature\">Ed25519Signature</a>","synthetic":true,"types":["aptos_crypto::ed25519::Ed25519Signature"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_crypto/hash/struct.HashValue.html\" title=\"struct aptos_crypto::hash::HashValue\">HashValue</a>","synthetic":true,"types":["aptos_crypto::hash::HashValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_crypto/hash/struct.HashValueParseError.html\" title=\"struct aptos_crypto::hash::HashValueParseError\">HashValueParseError</a>","synthetic":true,"types":["aptos_crypto::hash::HashValueParseError"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"aptos_crypto/hash/struct.HashValueBitIterator.html\" title=\"struct aptos_crypto::hash::HashValueBitIterator\">HashValueBitIterator</a>&lt;'a&gt;","synthetic":true,"types":["aptos_crypto::hash::HashValueBitIterator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_crypto/hash/struct.TransactionAccumulatorHasher.html\" title=\"struct aptos_crypto::hash::TransactionAccumulatorHasher\">TransactionAccumulatorHasher</a>","synthetic":true,"types":["aptos_crypto::hash::TransactionAccumulatorHasher"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_crypto/hash/struct.EventAccumulatorHasher.html\" title=\"struct aptos_crypto::hash::EventAccumulatorHasher\">EventAccumulatorHasher</a>","synthetic":true,"types":["aptos_crypto::hash::EventAccumulatorHasher"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_crypto/hash/struct.SparseMerkleInternalHasher.html\" title=\"struct aptos_crypto::hash::SparseMerkleInternalHasher\">SparseMerkleInternalHasher</a>","synthetic":true,"types":["aptos_crypto::hash::SparseMerkleInternalHasher"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_crypto/hash/struct.VoteProposalHasher.html\" title=\"struct aptos_crypto::hash::VoteProposalHasher\">VoteProposalHasher</a>","synthetic":true,"types":["aptos_crypto::hash::VoteProposalHasher"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_crypto/hash/struct.TestOnlyHasher.html\" title=\"struct aptos_crypto::hash::TestOnlyHasher\">TestOnlyHasher</a>","synthetic":true,"types":["aptos_crypto::hash::TestOnlyHasher"]},{"text":"impl&lt;D&gt; Freeze for <a class=\"struct\" href=\"aptos_crypto/hkdf/struct.Hkdf.html\" title=\"struct aptos_crypto::hkdf::Hkdf\">Hkdf</a>&lt;D&gt;","synthetic":true,"types":["aptos_crypto::hkdf::Hkdf"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_crypto/hkdf/enum.HkdfError.html\" title=\"enum aptos_crypto::hkdf::HkdfError\">HkdfError</a>","synthetic":true,"types":["aptos_crypto::hkdf::HkdfError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_crypto/multi_ed25519/struct.MultiEd25519PrivateKey.html\" title=\"struct aptos_crypto::multi_ed25519::MultiEd25519PrivateKey\">MultiEd25519PrivateKey</a>","synthetic":true,"types":["aptos_crypto::multi_ed25519::MultiEd25519PrivateKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_crypto/multi_ed25519/struct.MultiEd25519PublicKey.html\" title=\"struct aptos_crypto::multi_ed25519::MultiEd25519PublicKey\">MultiEd25519PublicKey</a>","synthetic":true,"types":["aptos_crypto::multi_ed25519::MultiEd25519PublicKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_crypto/multi_ed25519/struct.MultiEd25519Signature.html\" title=\"struct aptos_crypto::multi_ed25519::MultiEd25519Signature\">MultiEd25519Signature</a>","synthetic":true,"types":["aptos_crypto::multi_ed25519::MultiEd25519Signature"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_crypto/noise/enum.NoiseError.html\" title=\"enum aptos_crypto::noise::NoiseError\">NoiseError</a>","synthetic":true,"types":["aptos_crypto::noise::NoiseError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_crypto/noise/struct.NoiseConfig.html\" title=\"struct aptos_crypto::noise::NoiseConfig\">NoiseConfig</a>","synthetic":true,"types":["aptos_crypto::noise::NoiseConfig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_crypto/noise/struct.InitiatorHandshakeState.html\" title=\"struct aptos_crypto::noise::InitiatorHandshakeState\">InitiatorHandshakeState</a>","synthetic":true,"types":["aptos_crypto::noise::InitiatorHandshakeState"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_crypto/noise/struct.ResponderHandshakeState.html\" title=\"struct aptos_crypto::noise::ResponderHandshakeState\">ResponderHandshakeState</a>","synthetic":true,"types":["aptos_crypto::noise::ResponderHandshakeState"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_crypto/noise/struct.NoiseSession.html\" title=\"struct aptos_crypto::noise::NoiseSession\">NoiseSession</a>","synthetic":true,"types":["aptos_crypto::noise::NoiseSession"]},{"text":"impl&lt;S, P&gt; Freeze for <a class=\"struct\" href=\"aptos_crypto/test_utils/struct.KeyPair.html\" title=\"struct aptos_crypto::test_utils::KeyPair\">KeyPair</a>&lt;S, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["aptos_crypto::test_utils::KeyPair"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_crypto/traits/enum.CryptoMaterialError.html\" title=\"enum aptos_crypto::traits::CryptoMaterialError\">CryptoMaterialError</a>","synthetic":true,"types":["aptos_crypto::traits::CryptoMaterialError"]},{"text":"impl&lt;V&gt; !Freeze for <a class=\"struct\" href=\"aptos_crypto/validatable/struct.Validatable.html\" title=\"struct aptos_crypto::validatable::Validatable\">Validatable</a>&lt;V&gt;","synthetic":true,"types":["aptos_crypto::validatable::Validatable"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_crypto/validatable/struct.UnvalidatedEd25519PublicKey.html\" title=\"struct aptos_crypto::validatable::UnvalidatedEd25519PublicKey\">UnvalidatedEd25519PublicKey</a>","synthetic":true,"types":["aptos_crypto::validatable::UnvalidatedEd25519PublicKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_crypto/x25519/struct.PrivateKey.html\" title=\"struct aptos_crypto::x25519::PrivateKey\">PrivateKey</a>","synthetic":true,"types":["aptos_crypto::x25519::PrivateKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_crypto/x25519/struct.PublicKey.html\" title=\"struct aptos_crypto::x25519::PublicKey\">PublicKey</a>","synthetic":true,"types":["aptos_crypto::x25519::PublicKey"]}];
implementors["aptos_infallible"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_infallible/struct.ArithmeticError.html\" title=\"struct aptos_infallible::ArithmeticError\">ArithmeticError</a>","synthetic":true,"types":["aptos_infallible::math::ArithmeticError"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"aptos_infallible/struct.Mutex.html\" title=\"struct aptos_infallible::Mutex\">Mutex</a>&lt;T&gt;","synthetic":true,"types":["aptos_infallible::mutex::Mutex"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"aptos_infallible/struct.RwLock.html\" title=\"struct aptos_infallible::RwLock\">RwLock</a>&lt;T&gt;","synthetic":true,"types":["aptos_infallible::rwlock::RwLock"]}];
implementors["aptos_keygen"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_keygen/struct.KeyGen.html\" title=\"struct aptos_keygen::KeyGen\">KeyGen</a>","synthetic":true,"types":["aptos_keygen::KeyGen"]}];
implementors["aptos_logger"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_logger/prelude/enum.SecurityEvent.html\" title=\"enum aptos_logger::prelude::SecurityEvent\">SecurityEvent</a>","synthetic":true,"types":["aptos_logger::security::SecurityEvent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_logger/aptos_logger/struct.LogEntry.html\" title=\"struct aptos_logger::aptos_logger::LogEntry\">LogEntry</a>","synthetic":true,"types":["aptos_logger::aptos_logger::LogEntry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_logger/aptos_logger/struct.AptosDataBuilder.html\" title=\"struct aptos_logger::aptos_logger::AptosDataBuilder\">AptosDataBuilder</a>","synthetic":true,"types":["aptos_logger::aptos_logger::AptosDataBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"aptos_logger/aptos_logger/struct.AptosData.html\" title=\"struct aptos_logger::aptos_logger::AptosData\">AptosData</a>","synthetic":true,"types":["aptos_logger::aptos_logger::AptosData"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"aptos_logger/aptos_logger/struct.FileWriter.html\" title=\"struct aptos_logger::aptos_logger::FileWriter\">FileWriter</a>","synthetic":true,"types":["aptos_logger::aptos_logger::FileWriter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"aptos_logger/struct.Event.html\" title=\"struct aptos_logger::Event\">Event</a>&lt;'a&gt;","synthetic":true,"types":["aptos_logger::event::Event"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_logger/enum.LevelFilter.html\" title=\"enum aptos_logger::LevelFilter\">LevelFilter</a>","synthetic":true,"types":["aptos_logger::filter::LevelFilter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_logger/struct.Filter.html\" title=\"struct aptos_logger::Filter\">Filter</a>","synthetic":true,"types":["aptos_logger::filter::Filter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_logger/struct.Key.html\" title=\"struct aptos_logger::Key\">Key</a>","synthetic":true,"types":["aptos_logger::kv::Key"]},{"text":"impl&lt;'v&gt; Freeze for <a class=\"enum\" href=\"aptos_logger/enum.Value.html\" title=\"enum aptos_logger::Value\">Value</a>&lt;'v&gt;","synthetic":true,"types":["aptos_logger::kv::Value"]},{"text":"impl&lt;'v&gt; Freeze for <a class=\"struct\" href=\"aptos_logger/struct.KeyValue.html\" title=\"struct aptos_logger::KeyValue\">KeyValue</a>&lt;'v&gt;","synthetic":true,"types":["aptos_logger::kv::KeyValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_logger/struct.Metadata.html\" title=\"struct aptos_logger::Metadata\">Metadata</a>","synthetic":true,"types":["aptos_logger::metadata::Metadata"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_logger/enum.Level.html\" title=\"enum aptos_logger::Level\">Level</a>","synthetic":true,"types":["aptos_logger::metadata::Level"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_logger/sample/enum.SampleRate.html\" title=\"enum aptos_logger::sample::SampleRate\">SampleRate</a>","synthetic":true,"types":["aptos_logger::sample::SampleRate"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"aptos_logger/sample/struct.Sampling.html\" title=\"struct aptos_logger::sample::Sampling\">Sampling</a>","synthetic":true,"types":["aptos_logger::sample::Sampling"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_logger/tracing_adapter/struct.TracingToAptosDataLayer.html\" title=\"struct aptos_logger::tracing_adapter::TracingToAptosDataLayer\">TracingToAptosDataLayer</a>","synthetic":true,"types":["aptos_logger::tracing_adapter::TracingToAptosDataLayer"]}];
implementors["aptos_metrics_core"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_metrics_core/op_counters/struct.DurationHistogram.html\" title=\"struct aptos_metrics_core::op_counters::DurationHistogram\">DurationHistogram</a>","synthetic":true,"types":["aptos_metrics_core::op_counters::DurationHistogram"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_metrics_core/op_counters/struct.OpMetrics.html\" title=\"struct aptos_metrics_core::op_counters::OpMetrics\">OpMetrics</a>","synthetic":true,"types":["aptos_metrics_core::op_counters::OpMetrics"]}];
implementors["aptos_parallel_executor"] = [{"text":"impl&lt;E&gt; Freeze for <a class=\"enum\" href=\"aptos_parallel_executor/errors/enum.Error.html\" title=\"enum aptos_parallel_executor::errors::Error\">Error</a>&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":["aptos_parallel_executor::errors::Error"]},{"text":"impl&lt;'a, K, V&gt; !Freeze for <a class=\"struct\" href=\"aptos_parallel_executor/executor/struct.MVHashMapView.html\" title=\"struct aptos_parallel_executor::executor::MVHashMapView\">MVHashMapView</a>&lt;'a, K, V&gt;","synthetic":true,"types":["aptos_parallel_executor::executor::MVHashMapView"]},{"text":"impl&lt;T, E&gt; Freeze for <a class=\"struct\" href=\"aptos_parallel_executor/executor/struct.ParallelTransactionExecutor.html\" title=\"struct aptos_parallel_executor::executor::ParallelTransactionExecutor\">ParallelTransactionExecutor</a>&lt;T, E&gt;","synthetic":true,"types":["aptos_parallel_executor::executor::ParallelTransactionExecutor"]},{"text":"impl&lt;T, E&gt; Freeze for <a class=\"enum\" href=\"aptos_parallel_executor/task/enum.ExecutionStatus.html\" title=\"enum aptos_parallel_executor::task::ExecutionStatus\">ExecutionStatus</a>&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["aptos_parallel_executor::task::ExecutionStatus"]},{"text":"impl&lt;K&gt; Freeze for <a class=\"struct\" href=\"aptos_parallel_executor/task/struct.Accesses.html\" title=\"struct aptos_parallel_executor::task::Accesses\">Accesses</a>&lt;K&gt;","synthetic":true,"types":["aptos_parallel_executor::task::Accesses"]}];
implementors["aptos_rest_client"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_rest_client/error/struct.Error.html\" title=\"struct aptos_rest_client::error::Error\">Error</a>","synthetic":true,"types":["aptos_rest_client::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_rest_client/faucet/struct.FaucetClient.html\" title=\"struct aptos_rest_client::faucet::FaucetClient\">FaucetClient</a>","synthetic":true,"types":["aptos_rest_client::faucet::FaucetClient"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"aptos_rest_client/response/struct.Response.html\" title=\"struct aptos_rest_client::response::Response\">Response</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["aptos_rest_client::response::Response"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_rest_client/types/struct.RestError.html\" title=\"struct aptos_rest_client::types::RestError\">RestError</a>","synthetic":true,"types":["aptos_rest_client::types::RestError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_rest_client/types/struct.Resource.html\" title=\"struct aptos_rest_client::types::Resource\">Resource</a>","synthetic":true,"types":["aptos_rest_client::types::Resource"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_rest_client/types/struct.Account.html\" title=\"struct aptos_rest_client::types::Account\">Account</a>","synthetic":true,"types":["aptos_rest_client::types::Account"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_rest_client/types/struct.EventHandle.html\" title=\"struct aptos_rest_client::types::EventHandle\">EventHandle</a>","synthetic":true,"types":["aptos_rest_client::types::EventHandle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_rest_client/types/struct.EventHandleGUID.html\" title=\"struct aptos_rest_client::types::EventHandleGUID\">EventHandleGUID</a>","synthetic":true,"types":["aptos_rest_client::types::EventHandleGUID"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_rest_client/types/struct.GUID.html\" title=\"struct aptos_rest_client::types::GUID\">GUID</a>","synthetic":true,"types":["aptos_rest_client::types::GUID"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_rest_client/types/struct.ID.html\" title=\"struct aptos_rest_client::types::ID\">ID</a>","synthetic":true,"types":["aptos_rest_client::types::ID"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_rest_client/aptos/struct.TestCoin.html\" title=\"struct aptos_rest_client::aptos::TestCoin\">TestCoin</a>","synthetic":true,"types":["aptos_rest_client::aptos::TestCoin"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_rest_client/aptos/struct.Balance.html\" title=\"struct aptos_rest_client::aptos::Balance\">Balance</a>","synthetic":true,"types":["aptos_rest_client::aptos::Balance"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_rest_client/aptos/struct.AptosVersion.html\" title=\"struct aptos_rest_client::aptos::AptosVersion\">AptosVersion</a>","synthetic":true,"types":["aptos_rest_client::aptos::AptosVersion"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_rest_client/struct.Client.html\" title=\"struct aptos_rest_client::Client\">Client</a>","synthetic":true,"types":["aptos_rest_client::Client"]}];
implementors["aptos_sdk"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_sdk/transaction_builder/struct.TransactionBuilder.html\" title=\"struct aptos_sdk::transaction_builder::TransactionBuilder\">TransactionBuilder</a>","synthetic":true,"types":["aptos_sdk::transaction_builder::TransactionBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_sdk/transaction_builder/struct.TransactionFactory.html\" title=\"struct aptos_sdk::transaction_builder::TransactionFactory\">TransactionFactory</a>","synthetic":true,"types":["aptos_sdk::transaction_builder::TransactionFactory"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_sdk/transaction_builder/struct.DualAttestationMessage.html\" title=\"struct aptos_sdk::transaction_builder::DualAttestationMessage\">DualAttestationMessage</a>","synthetic":true,"types":["aptos_sdk::transaction_builder::DualAttestationMessage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_sdk/types/struct.LocalAccount.html\" title=\"struct aptos_sdk::types::LocalAccount\">LocalAccount</a>","synthetic":true,"types":["aptos_sdk::types::LocalAccount"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_sdk/types/struct.AccountKey.html\" title=\"struct aptos_sdk::types::AccountKey\">AccountKey</a>","synthetic":true,"types":["aptos_sdk::types::AccountKey"]}];
implementors["aptos_state_view"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"aptos_state_view/account_with_state_cache/struct.AccountWithStateCache.html\" title=\"struct aptos_state_view::account_with_state_cache::AccountWithStateCache\">AccountWithStateCache</a>&lt;'a&gt;","synthetic":true,"types":["aptos_state_view::account_with_state_cache::AccountWithStateCache"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"aptos_state_view/account_with_state_view/struct.AccountWithStateView.html\" title=\"struct aptos_state_view::account_with_state_view::AccountWithStateView\">AccountWithStateView</a>&lt;'a&gt;","synthetic":true,"types":["aptos_state_view::account_with_state_view::AccountWithStateView"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_state_view/enum.StateViewId.html\" title=\"enum aptos_state_view::StateViewId\">StateViewId</a>","synthetic":true,"types":["aptos_state_view::StateViewId"]}];
implementors["aptos_types"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/access_path/struct.AccessPath.html\" title=\"struct aptos_types::access_path::AccessPath\">AccessPath</a>","synthetic":true,"types":["aptos_types::access_path::AccessPath"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_types/access_path/enum.Path.html\" title=\"enum aptos_types::access_path::Path\">Path</a>","synthetic":true,"types":["aptos_types::access_path::Path"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/account_config/events/deposit/struct.DepositEvent.html\" title=\"struct aptos_types::account_config::events::deposit::DepositEvent\">DepositEvent</a>","synthetic":true,"types":["aptos_types::account_config::events::deposit::DepositEvent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/account_config/events/new_block/struct.NewBlockEvent.html\" title=\"struct aptos_types::account_config::events::new_block::NewBlockEvent\">NewBlockEvent</a>","synthetic":true,"types":["aptos_types::account_config::events::new_block::NewBlockEvent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/account_config/events/new_epoch/struct.NewEpochEvent.html\" title=\"struct aptos_types::account_config::events::new_epoch::NewEpochEvent\">NewEpochEvent</a>","synthetic":true,"types":["aptos_types::account_config::events::new_epoch::NewEpochEvent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/account_config/events/withdraw/struct.WithdrawEvent.html\" title=\"struct aptos_types::account_config::events::withdraw::WithdrawEvent\">WithdrawEvent</a>","synthetic":true,"types":["aptos_types::account_config::events::withdraw::WithdrawEvent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/account_config/resources/chain_account_info/struct.ChainSpecificAccountInfo.html\" title=\"struct aptos_types::account_config::resources::chain_account_info::ChainSpecificAccountInfo\">ChainSpecificAccountInfo</a>","synthetic":true,"types":["aptos_types::account_config::resources::chain_account_info::ChainSpecificAccountInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/account_config/resources/chain_id/struct.ChainIdResource.html\" title=\"struct aptos_types::account_config::resources::chain_id::ChainIdResource\">ChainIdResource</a>","synthetic":true,"types":["aptos_types::account_config::resources::chain_id::ChainIdResource"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/account_config/resources/coin_store/struct.CoinStoreResource.html\" title=\"struct aptos_types::account_config::resources::coin_store::CoinStoreResource\">CoinStoreResource</a>","synthetic":true,"types":["aptos_types::account_config::resources::coin_store::CoinStoreResource"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/account_config/resources/core_account/struct.AccountResource.html\" title=\"struct aptos_types::account_config::resources::core_account::AccountResource\">AccountResource</a>","synthetic":true,"types":["aptos_types::account_config::resources::core_account::AccountResource"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_types/account_config/resources/crsn/enum.AccountSequenceInfo.html\" title=\"enum aptos_types::account_config::resources::crsn::AccountSequenceInfo\">AccountSequenceInfo</a>","synthetic":true,"types":["aptos_types::account_config::resources::crsn::AccountSequenceInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/account_config/resources/crsn/struct.CRSNResource.html\" title=\"struct aptos_types::account_config::resources::crsn::CRSNResource\">CRSNResource</a>","synthetic":true,"types":["aptos_types::account_config::resources::crsn::CRSNResource"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/account_state/struct.AccountState.html\" title=\"struct aptos_types::account_state::AccountState\">AccountState</a>","synthetic":true,"types":["aptos_types::account_state::AccountState"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/block_info/struct.BlockInfo.html\" title=\"struct aptos_types::block_info::BlockInfo\">BlockInfo</a>","synthetic":true,"types":["aptos_types::block_info::BlockInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/block_metadata/struct.BlockMetadata.html\" title=\"struct aptos_types::block_metadata::BlockMetadata\">BlockMetadata</a>","synthetic":true,"types":["aptos_types::block_metadata::BlockMetadata"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/block_metadata/struct.BlockResource.html\" title=\"struct aptos_types::block_metadata::BlockResource\">BlockResource</a>","synthetic":true,"types":["aptos_types::block_metadata::BlockResource"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/block_metadata/struct.NewBlockEvent.html\" title=\"struct aptos_types::block_metadata::NewBlockEvent\">NewBlockEvent</a>","synthetic":true,"types":["aptos_types::block_metadata::NewBlockEvent"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_types/chain_id/enum.NamedChain.html\" title=\"enum aptos_types::chain_id::NamedChain\">NamedChain</a>","synthetic":true,"types":["aptos_types::chain_id::NamedChain"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/chain_id/struct.ChainId.html\" title=\"struct aptos_types::chain_id::ChainId\">ChainId</a>","synthetic":true,"types":["aptos_types::chain_id::ChainId"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_types/contract_event/enum.ContractEvent.html\" title=\"enum aptos_types::contract_event::ContractEvent\">ContractEvent</a>","synthetic":true,"types":["aptos_types::contract_event::ContractEvent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/contract_event/struct.ContractEventHasher.html\" title=\"struct aptos_types::contract_event::ContractEventHasher\">ContractEventHasher</a>","synthetic":true,"types":["aptos_types::contract_event::ContractEventHasher"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/contract_event/struct.ContractEventV0.html\" title=\"struct aptos_types::contract_event::ContractEventV0\">ContractEventV0</a>","synthetic":true,"types":["aptos_types::contract_event::ContractEventV0"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/contract_event/struct.ContractEventV0Hasher.html\" title=\"struct aptos_types::contract_event::ContractEventV0Hasher\">ContractEventV0Hasher</a>","synthetic":true,"types":["aptos_types::contract_event::ContractEventV0Hasher"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/contract_event/struct.EventWithVersion.html\" title=\"struct aptos_types::contract_event::EventWithVersion\">EventWithVersion</a>","synthetic":true,"types":["aptos_types::contract_event::EventWithVersion"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/epoch_change/struct.EpochChangeProof.html\" title=\"struct aptos_types::epoch_change::EpochChangeProof\">EpochChangeProof</a>","synthetic":true,"types":["aptos_types::epoch_change::EpochChangeProof"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/epoch_state/struct.EpochState.html\" title=\"struct aptos_types::epoch_state::EpochState\">EpochState</a>","synthetic":true,"types":["aptos_types::epoch_state::EpochState"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/event/struct.EventKey.html\" title=\"struct aptos_types::event::EventKey\">EventKey</a>","synthetic":true,"types":["aptos_types::event::EventKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/event/struct.EventKeyParseError.html\" title=\"struct aptos_types::event::EventKeyParseError\">EventKeyParseError</a>","synthetic":true,"types":["aptos_types::event::EventKeyParseError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/event/struct.EventHandle.html\" title=\"struct aptos_types::event::EventHandle\">EventHandle</a>","synthetic":true,"types":["aptos_types::event::EventHandle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/ledger_info/struct.LedgerInfo.html\" title=\"struct aptos_types::ledger_info::LedgerInfo\">LedgerInfo</a>","synthetic":true,"types":["aptos_types::ledger_info::LedgerInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/ledger_info/struct.LedgerInfoHasher.html\" title=\"struct aptos_types::ledger_info::LedgerInfoHasher\">LedgerInfoHasher</a>","synthetic":true,"types":["aptos_types::ledger_info::LedgerInfoHasher"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_types/ledger_info/enum.LedgerInfoWithSignatures.html\" title=\"enum aptos_types::ledger_info::LedgerInfoWithSignatures\">LedgerInfoWithSignatures</a>","synthetic":true,"types":["aptos_types::ledger_info::LedgerInfoWithSignatures"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/ledger_info/struct.LedgerInfoWithV0.html\" title=\"struct aptos_types::ledger_info::LedgerInfoWithV0\">LedgerInfoWithV0</a>","synthetic":true,"types":["aptos_types::ledger_info::LedgerInfoWithV0"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/mempool_status/struct.MempoolStatus.html\" title=\"struct aptos_types::mempool_status::MempoolStatus\">MempoolStatus</a>","synthetic":true,"types":["aptos_types::mempool_status::MempoolStatus"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_types/mempool_status/enum.MempoolStatusCode.html\" title=\"enum aptos_types::mempool_status::MempoolStatusCode\">MempoolStatusCode</a>","synthetic":true,"types":["aptos_types::mempool_status::MempoolStatusCode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/network_address/struct.NetworkAddress.html\" title=\"struct aptos_types::network_address::NetworkAddress\">NetworkAddress</a>","synthetic":true,"types":["aptos_types::network_address::NetworkAddress"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_types/network_address/enum.Protocol.html\" title=\"enum aptos_types::network_address::Protocol\">Protocol</a>","synthetic":true,"types":["aptos_types::network_address::Protocol"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/network_address/struct.DnsName.html\" title=\"struct aptos_types::network_address::DnsName\">DnsName</a>","synthetic":true,"types":["aptos_types::network_address::DnsName"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_types/network_address/enum.ParseError.html\" title=\"enum aptos_types::network_address::ParseError\">ParseError</a>","synthetic":true,"types":["aptos_types::network_address::ParseError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/network_address/struct.EmptyError.html\" title=\"struct aptos_types::network_address::EmptyError\">EmptyError</a>","synthetic":true,"types":["aptos_types::network_address::EmptyError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_types/network_address/enum.IpFilter.html\" title=\"enum aptos_types::network_address::IpFilter\">IpFilter</a>","synthetic":true,"types":["aptos_types::network_address::IpFilter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/nibble/nibble_path/struct.NibblePath.html\" title=\"struct aptos_types::nibble::nibble_path::NibblePath\">NibblePath</a>","synthetic":true,"types":["aptos_types::nibble::nibble_path::NibblePath"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"aptos_types/nibble/nibble_path/struct.BitIterator.html\" title=\"struct aptos_types::nibble::nibble_path::BitIterator\">BitIterator</a>&lt;'a&gt;","synthetic":true,"types":["aptos_types::nibble::nibble_path::BitIterator"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"aptos_types/nibble/nibble_path/struct.NibbleIterator.html\" title=\"struct aptos_types::nibble::nibble_path::NibbleIterator\">NibbleIterator</a>&lt;'a&gt;","synthetic":true,"types":["aptos_types::nibble::nibble_path::NibbleIterator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/nibble/struct.Nibble.html\" title=\"struct aptos_types::nibble::Nibble\">Nibble</a>","synthetic":true,"types":["aptos_types::nibble::Nibble"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/on_chain_config/struct.Version.html\" title=\"struct aptos_types::on_chain_config::Version\">Version</a>","synthetic":true,"types":["aptos_types::on_chain_config::aptos_version::Version"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_types/on_chain_config/enum.OnChainConsensusConfig.html\" title=\"enum aptos_types::on_chain_config::OnChainConsensusConfig\">OnChainConsensusConfig</a>","synthetic":true,"types":["aptos_types::on_chain_config::consensus_config::OnChainConsensusConfig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/on_chain_config/struct.ConsensusConfigV1.html\" title=\"struct aptos_types::on_chain_config::ConsensusConfigV1\">ConsensusConfigV1</a>","synthetic":true,"types":["aptos_types::on_chain_config::consensus_config::ConsensusConfigV1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/on_chain_config/struct.RegisteredCurrencies.html\" title=\"struct aptos_types::on_chain_config::RegisteredCurrencies\">RegisteredCurrencies</a>","synthetic":true,"types":["aptos_types::on_chain_config::registered_currencies::RegisteredCurrencies"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/on_chain_config/struct.ValidatorSet.html\" title=\"struct aptos_types::on_chain_config::ValidatorSet\">ValidatorSet</a>","synthetic":true,"types":["aptos_types::on_chain_config::validator_set::ValidatorSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/on_chain_config/struct.VMConfig.html\" title=\"struct aptos_types::on_chain_config::VMConfig\">VMConfig</a>","synthetic":true,"types":["aptos_types::on_chain_config::vm_config::VMConfig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/on_chain_config/struct.VMPublishingOption.html\" title=\"struct aptos_types::on_chain_config::VMPublishingOption\">VMPublishingOption</a>","synthetic":true,"types":["aptos_types::on_chain_config::vm_publishing_option::VMPublishingOption"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/on_chain_config/struct.ConfigID.html\" title=\"struct aptos_types::on_chain_config::ConfigID\">ConfigID</a>","synthetic":true,"types":["aptos_types::on_chain_config::ConfigID"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/on_chain_config/struct.OnChainConfigPayload.html\" title=\"struct aptos_types::on_chain_config::OnChainConfigPayload\">OnChainConfigPayload</a>","synthetic":true,"types":["aptos_types::on_chain_config::OnChainConfigPayload"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/on_chain_config/struct.ConfigurationResource.html\" title=\"struct aptos_types::on_chain_config::ConfigurationResource\">ConfigurationResource</a>","synthetic":true,"types":["aptos_types::on_chain_config::ConfigurationResource"]},{"text":"impl&lt;H&gt; Freeze for <a class=\"struct\" href=\"aptos_types/proof/accumulator/struct.InMemoryAccumulator.html\" title=\"struct aptos_types::proof::accumulator::InMemoryAccumulator\">InMemoryAccumulator</a>&lt;H&gt;","synthetic":true,"types":["aptos_types::proof::accumulator::InMemoryAccumulator"]},{"text":"impl&lt;H&gt; Freeze for <a class=\"struct\" href=\"aptos_types/proof/definition/struct.AccumulatorProof.html\" title=\"struct aptos_types::proof::definition::AccumulatorProof\">AccumulatorProof</a>&lt;H&gt;","synthetic":true,"types":["aptos_types::proof::definition::AccumulatorProof"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/proof/definition/struct.SparseMerkleProof.html\" title=\"struct aptos_types::proof::definition::SparseMerkleProof\">SparseMerkleProof</a>","synthetic":true,"types":["aptos_types::proof::definition::SparseMerkleProof"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/proof/definition/struct.TransactionAccumulatorSummary.html\" title=\"struct aptos_types::proof::definition::TransactionAccumulatorSummary\">TransactionAccumulatorSummary</a>","synthetic":true,"types":["aptos_types::proof::definition::TransactionAccumulatorSummary"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/proof/definition/struct.AccumulatorConsistencyProof.html\" title=\"struct aptos_types::proof::definition::AccumulatorConsistencyProof\">AccumulatorConsistencyProof</a>","synthetic":true,"types":["aptos_types::proof::definition::AccumulatorConsistencyProof"]},{"text":"impl&lt;H&gt; Freeze for <a class=\"struct\" href=\"aptos_types/proof/definition/struct.AccumulatorRangeProof.html\" title=\"struct aptos_types::proof::definition::AccumulatorRangeProof\">AccumulatorRangeProof</a>&lt;H&gt;","synthetic":true,"types":["aptos_types::proof::definition::AccumulatorRangeProof"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/proof/definition/struct.SparseMerkleRangeProof.html\" title=\"struct aptos_types::proof::definition::SparseMerkleRangeProof\">SparseMerkleRangeProof</a>","synthetic":true,"types":["aptos_types::proof::definition::SparseMerkleRangeProof"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/proof/definition/struct.TransactionInfoWithProof.html\" title=\"struct aptos_types::proof::definition::TransactionInfoWithProof\">TransactionInfoWithProof</a>","synthetic":true,"types":["aptos_types::proof::definition::TransactionInfoWithProof"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/proof/definition/struct.TransactionInfoListWithProof.html\" title=\"struct aptos_types::proof::definition::TransactionInfoListWithProof\">TransactionInfoListWithProof</a>","synthetic":true,"types":["aptos_types::proof::definition::TransactionInfoListWithProof"]},{"text":"impl&lt;H&gt; Freeze for <a class=\"struct\" href=\"aptos_types/proof/definition/struct.AccumulatorExtensionProof.html\" title=\"struct aptos_types::proof::definition::AccumulatorExtensionProof\">AccumulatorExtensionProof</a>&lt;H&gt;","synthetic":true,"types":["aptos_types::proof::definition::AccumulatorExtensionProof"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/proof/position/struct.Position.html\" title=\"struct aptos_types::proof::position::Position\">Position</a>","synthetic":true,"types":["aptos_types::proof::position::Position"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_types/proof/position/enum.NodeDirection.html\" title=\"enum aptos_types::proof::position::NodeDirection\">NodeDirection</a>","synthetic":true,"types":["aptos_types::proof::position::NodeDirection"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/proof/position/struct.AncestorSiblingIterator.html\" title=\"struct aptos_types::proof::position::AncestorSiblingIterator\">AncestorSiblingIterator</a>","synthetic":true,"types":["aptos_types::proof::position::AncestorSiblingIterator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/proof/position/struct.AncestorIterator.html\" title=\"struct aptos_types::proof::position::AncestorIterator\">AncestorIterator</a>","synthetic":true,"types":["aptos_types::proof::position::AncestorIterator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/proof/position/struct.FrozenSubTreeIterator.html\" title=\"struct aptos_types::proof::position::FrozenSubTreeIterator\">FrozenSubTreeIterator</a>","synthetic":true,"types":["aptos_types::proof::position::FrozenSubTreeIterator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/proof/position/struct.FrozenSubtreeSiblingIterator.html\" title=\"struct aptos_types::proof::position::FrozenSubtreeSiblingIterator\">FrozenSubtreeSiblingIterator</a>","synthetic":true,"types":["aptos_types::proof::position::FrozenSubtreeSiblingIterator"]},{"text":"impl&lt;H&gt; Freeze for <a class=\"struct\" href=\"aptos_types/proof/struct.MerkleTreeInternalNode.html\" title=\"struct aptos_types::proof::MerkleTreeInternalNode\">MerkleTreeInternalNode</a>&lt;H&gt;","synthetic":true,"types":["aptos_types::proof::MerkleTreeInternalNode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/proof/struct.SparseMerkleLeafNode.html\" title=\"struct aptos_types::proof::SparseMerkleLeafNode\">SparseMerkleLeafNode</a>","synthetic":true,"types":["aptos_types::proof::SparseMerkleLeafNode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/proof/struct.SparseMerkleLeafNodeHasher.html\" title=\"struct aptos_types::proof::SparseMerkleLeafNodeHasher\">SparseMerkleLeafNodeHasher</a>","synthetic":true,"types":["aptos_types::proof::SparseMerkleLeafNodeHasher"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/state_proof/struct.StateProof.html\" title=\"struct aptos_types::state_proof::StateProof\">StateProof</a>","synthetic":true,"types":["aptos_types::state_proof::StateProof"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/timestamp/struct.TimestampResource.html\" title=\"struct aptos_types::timestamp::TimestampResource\">TimestampResource</a>","synthetic":true,"types":["aptos_types::timestamp::TimestampResource"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/timestamp/struct.Timestamp.html\" title=\"struct aptos_types::timestamp::Timestamp\">Timestamp</a>","synthetic":true,"types":["aptos_types::timestamp::Timestamp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_types/transaction/authenticator/enum.AuthenticationError.html\" title=\"enum aptos_types::transaction::authenticator::AuthenticationError\">AuthenticationError</a>","synthetic":true,"types":["aptos_types::transaction::authenticator::AuthenticationError"]},{"text":"impl !Freeze for <a class=\"enum\" href=\"aptos_types/transaction/authenticator/enum.TransactionAuthenticator.html\" title=\"enum aptos_types::transaction::authenticator::TransactionAuthenticator\">TransactionAuthenticator</a>","synthetic":true,"types":["aptos_types::transaction::authenticator::TransactionAuthenticator"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_types/transaction/authenticator/enum.Scheme.html\" title=\"enum aptos_types::transaction::authenticator::Scheme\">Scheme</a>","synthetic":true,"types":["aptos_types::transaction::authenticator::Scheme"]},{"text":"impl !Freeze for <a class=\"enum\" href=\"aptos_types/transaction/authenticator/enum.AccountAuthenticator.html\" title=\"enum aptos_types::transaction::authenticator::AccountAuthenticator\">AccountAuthenticator</a>","synthetic":true,"types":["aptos_types::transaction::authenticator::AccountAuthenticator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/transaction/authenticator/struct.AuthenticationKey.html\" title=\"struct aptos_types::transaction::authenticator::AuthenticationKey\">AuthenticationKey</a>","synthetic":true,"types":["aptos_types::transaction::authenticator::AuthenticationKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/transaction/authenticator/struct.AuthenticationKeyHasher.html\" title=\"struct aptos_types::transaction::authenticator::AuthenticationKeyHasher\">AuthenticationKeyHasher</a>","synthetic":true,"types":["aptos_types::transaction::authenticator::AuthenticationKeyHasher"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/transaction/authenticator/struct.AuthenticationKeyPreimage.html\" title=\"struct aptos_types::transaction::authenticator::AuthenticationKeyPreimage\">AuthenticationKeyPreimage</a>","synthetic":true,"types":["aptos_types::transaction::authenticator::AuthenticationKeyPreimage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/transaction/struct.ChangeSet.html\" title=\"struct aptos_types::transaction::ChangeSet\">ChangeSet</a>","synthetic":true,"types":["aptos_types::transaction::change_set::ChangeSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/transaction/struct.Module.html\" title=\"struct aptos_types::transaction::Module\">Module</a>","synthetic":true,"types":["aptos_types::transaction::module::Module"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/transaction/struct.ModuleBundle.html\" title=\"struct aptos_types::transaction::ModuleBundle\">ModuleBundle</a>","synthetic":true,"types":["aptos_types::transaction::module::ModuleBundle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/transaction/struct.Script.html\" title=\"struct aptos_types::transaction::Script\">Script</a>","synthetic":true,"types":["aptos_types::transaction::script::Script"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/transaction/struct.ScriptFunction.html\" title=\"struct aptos_types::transaction::ScriptFunction\">ScriptFunction</a>","synthetic":true,"types":["aptos_types::transaction::script::ScriptFunction"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/transaction/struct.RawTransaction.html\" title=\"struct aptos_types::transaction::RawTransaction\">RawTransaction</a>","synthetic":true,"types":["aptos_types::transaction::RawTransaction"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/transaction/struct.RawTransactionHasher.html\" title=\"struct aptos_types::transaction::RawTransactionHasher\">RawTransactionHasher</a>","synthetic":true,"types":["aptos_types::transaction::RawTransactionHasher"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_types/transaction/enum.RawTransactionWithData.html\" title=\"enum aptos_types::transaction::RawTransactionWithData\">RawTransactionWithData</a>","synthetic":true,"types":["aptos_types::transaction::RawTransactionWithData"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/transaction/struct.RawTransactionWithDataHasher.html\" title=\"struct aptos_types::transaction::RawTransactionWithDataHasher\">RawTransactionWithDataHasher</a>","synthetic":true,"types":["aptos_types::transaction::RawTransactionWithDataHasher"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_types/transaction/enum.TransactionPayload.html\" title=\"enum aptos_types::transaction::TransactionPayload\">TransactionPayload</a>","synthetic":true,"types":["aptos_types::transaction::TransactionPayload"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_types/transaction/enum.WriteSetPayload.html\" title=\"enum aptos_types::transaction::WriteSetPayload\">WriteSetPayload</a>","synthetic":true,"types":["aptos_types::transaction::WriteSetPayload"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"aptos_types/transaction/struct.SignedTransaction.html\" title=\"struct aptos_types::transaction::SignedTransaction\">SignedTransaction</a>","synthetic":true,"types":["aptos_types::transaction::SignedTransaction"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"aptos_types/transaction/struct.SignatureCheckedTransaction.html\" title=\"struct aptos_types::transaction::SignatureCheckedTransaction\">SignatureCheckedTransaction</a>","synthetic":true,"types":["aptos_types::transaction::SignatureCheckedTransaction"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"aptos_types/transaction/struct.TransactionWithProof.html\" title=\"struct aptos_types::transaction::TransactionWithProof\">TransactionWithProof</a>","synthetic":true,"types":["aptos_types::transaction::TransactionWithProof"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_types/transaction/enum.ExecutionStatus.html\" title=\"enum aptos_types::transaction::ExecutionStatus\">ExecutionStatus</a>","synthetic":true,"types":["aptos_types::transaction::ExecutionStatus"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_types/transaction/enum.TransactionStatus.html\" title=\"enum aptos_types::transaction::TransactionStatus\">TransactionStatus</a>","synthetic":true,"types":["aptos_types::transaction::TransactionStatus"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/transaction/struct.VMValidatorResult.html\" title=\"struct aptos_types::transaction::VMValidatorResult\">VMValidatorResult</a>","synthetic":true,"types":["aptos_types::transaction::VMValidatorResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/transaction/struct.TransactionOutput.html\" title=\"struct aptos_types::transaction::TransactionOutput\">TransactionOutput</a>","synthetic":true,"types":["aptos_types::transaction::TransactionOutput"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_types/transaction/enum.TransactionInfo.html\" title=\"enum aptos_types::transaction::TransactionInfo\">TransactionInfo</a>","synthetic":true,"types":["aptos_types::transaction::TransactionInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/transaction/struct.TransactionInfoHasher.html\" title=\"struct aptos_types::transaction::TransactionInfoHasher\">TransactionInfoHasher</a>","synthetic":true,"types":["aptos_types::transaction::TransactionInfoHasher"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/transaction/struct.TransactionInfoV0.html\" title=\"struct aptos_types::transaction::TransactionInfoV0\">TransactionInfoV0</a>","synthetic":true,"types":["aptos_types::transaction::TransactionInfoV0"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/transaction/struct.TransactionInfoV0Hasher.html\" title=\"struct aptos_types::transaction::TransactionInfoV0Hasher\">TransactionInfoV0Hasher</a>","synthetic":true,"types":["aptos_types::transaction::TransactionInfoV0Hasher"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"aptos_types/transaction/struct.TransactionToCommit.html\" title=\"struct aptos_types::transaction::TransactionToCommit\">TransactionToCommit</a>","synthetic":true,"types":["aptos_types::transaction::TransactionToCommit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/transaction/struct.TransactionListWithProof.html\" title=\"struct aptos_types::transaction::TransactionListWithProof\">TransactionListWithProof</a>","synthetic":true,"types":["aptos_types::transaction::TransactionListWithProof"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/transaction/struct.TransactionOutputListWithProof.html\" title=\"struct aptos_types::transaction::TransactionOutputListWithProof\">TransactionOutputListWithProof</a>","synthetic":true,"types":["aptos_types::transaction::TransactionOutputListWithProof"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/transaction/struct.AccountTransactionsWithProof.html\" title=\"struct aptos_types::transaction::AccountTransactionsWithProof\">AccountTransactionsWithProof</a>","synthetic":true,"types":["aptos_types::transaction::AccountTransactionsWithProof"]},{"text":"impl !Freeze for <a class=\"enum\" href=\"aptos_types/transaction/enum.Transaction.html\" title=\"enum aptos_types::transaction::Transaction\">Transaction</a>","synthetic":true,"types":["aptos_types::transaction::Transaction"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/transaction/struct.TransactionHasher.html\" title=\"struct aptos_types::transaction::TransactionHasher\">TransactionHasher</a>","synthetic":true,"types":["aptos_types::transaction::TransactionHasher"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_types/trusted_state/enum.TrustedState.html\" title=\"enum aptos_types::trusted_state::TrustedState\">TrustedState</a>","synthetic":true,"types":["aptos_types::trusted_state::TrustedState"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/trusted_state/struct.TrustedStateHasher.html\" title=\"struct aptos_types::trusted_state::TrustedStateHasher\">TrustedStateHasher</a>","synthetic":true,"types":["aptos_types::trusted_state::TrustedStateHasher"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"aptos_types/trusted_state/enum.TrustedStateChange.html\" title=\"enum aptos_types::trusted_state::TrustedStateChange\">TrustedStateChange</a>&lt;'a&gt;","synthetic":true,"types":["aptos_types::trusted_state::TrustedStateChange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/validator_config/struct.ValidatorOperatorConfigResource.html\" title=\"struct aptos_types::validator_config::ValidatorOperatorConfigResource\">ValidatorOperatorConfigResource</a>","synthetic":true,"types":["aptos_types::validator_config::ValidatorOperatorConfigResource"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/validator_config/struct.ValidatorConfig.html\" title=\"struct aptos_types::validator_config::ValidatorConfig\">ValidatorConfig</a>","synthetic":true,"types":["aptos_types::validator_config::ValidatorConfig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/validator_info/struct.ValidatorInfo.html\" title=\"struct aptos_types::validator_info::ValidatorInfo\">ValidatorInfo</a>","synthetic":true,"types":["aptos_types::validator_info::ValidatorInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/validator_signer/struct.ValidatorSigner.html\" title=\"struct aptos_types::validator_signer::ValidatorSigner\">ValidatorSigner</a>","synthetic":true,"types":["aptos_types::validator_signer::ValidatorSigner"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_types/validator_verifier/enum.VerifyError.html\" title=\"enum aptos_types::validator_verifier::VerifyError\">VerifyError</a>","synthetic":true,"types":["aptos_types::validator_verifier::VerifyError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/validator_verifier/struct.ValidatorConsensusInfo.html\" title=\"struct aptos_types::validator_verifier::ValidatorConsensusInfo\">ValidatorConsensusInfo</a>","synthetic":true,"types":["aptos_types::validator_verifier::ValidatorConsensusInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/validator_verifier/struct.ValidatorVerifier.html\" title=\"struct aptos_types::validator_verifier::ValidatorVerifier\">ValidatorVerifier</a>","synthetic":true,"types":["aptos_types::validator_verifier::ValidatorVerifier"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/waypoint/struct.Waypoint.html\" title=\"struct aptos_types::waypoint::Waypoint\">Waypoint</a>","synthetic":true,"types":["aptos_types::waypoint::Waypoint"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/waypoint/struct.Ledger2WaypointConverterHasher.html\" title=\"struct aptos_types::waypoint::Ledger2WaypointConverterHasher\">Ledger2WaypointConverterHasher</a>","synthetic":true,"types":["aptos_types::waypoint::Ledger2WaypointConverterHasher"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_types/write_set/enum.WriteOp.html\" title=\"enum aptos_types::write_set::WriteOp\">WriteOp</a>","synthetic":true,"types":["aptos_types::write_set::WriteOp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/write_set/struct.WriteSet.html\" title=\"struct aptos_types::write_set::WriteSet\">WriteSet</a>","synthetic":true,"types":["aptos_types::write_set::WriteSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/write_set/struct.WriteSetHasher.html\" title=\"struct aptos_types::write_set::WriteSetHasher\">WriteSetHasher</a>","synthetic":true,"types":["aptos_types::write_set::WriteSetHasher"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/write_set/struct.WriteSetMut.html\" title=\"struct aptos_types::write_set::WriteSetMut\">WriteSetMut</a>","synthetic":true,"types":["aptos_types::write_set::WriteSetMut"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_types/state_store/state_key/enum.StateKey.html\" title=\"enum aptos_types::state_store::state_key::StateKey\">StateKey</a>","synthetic":true,"types":["aptos_types::state_store::state_key::StateKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/state_store/state_key/struct.StateKeyHasher.html\" title=\"struct aptos_types::state_store::state_key::StateKeyHasher\">StateKeyHasher</a>","synthetic":true,"types":["aptos_types::state_store::state_key::StateKeyHasher"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_types/state_store/state_key/enum.StateKeyTag.html\" title=\"enum aptos_types::state_store::state_key::StateKeyTag\">StateKeyTag</a>","synthetic":true,"types":["aptos_types::state_store::state_key::StateKeyTag"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_types/state_store/state_key/enum.StateKeyDecodeErr.html\" title=\"enum aptos_types::state_store::state_key::StateKeyDecodeErr\">StateKeyDecodeErr</a>","synthetic":true,"types":["aptos_types::state_store::state_key::StateKeyDecodeErr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/state_store/state_key_prefix/struct.StateKeyPrefix.html\" title=\"struct aptos_types::state_store::state_key_prefix::StateKeyPrefix\">StateKeyPrefix</a>","synthetic":true,"types":["aptos_types::state_store::state_key_prefix::StateKeyPrefix"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/state_store/state_value/struct.StateValue.html\" title=\"struct aptos_types::state_store::state_value::StateValue\">StateValue</a>","synthetic":true,"types":["aptos_types::state_store::state_value::StateValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/state_store/state_value/struct.StateValueHasher.html\" title=\"struct aptos_types::state_store::state_value::StateValueHasher\">StateValueHasher</a>","synthetic":true,"types":["aptos_types::state_store::state_value::StateValueHasher"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_types/state_store/state_value/struct.StateValueChunkWithProof.html\" title=\"struct aptos_types::state_store::state_value::StateValueChunkWithProof\">StateValueChunkWithProof</a>","synthetic":true,"types":["aptos_types::state_store::state_value::StateValueChunkWithProof"]}];
implementors["aptos_vm"] = [{"text":"impl&lt;'a, S&gt; Freeze for <a class=\"struct\" href=\"aptos_vm/data_cache/struct.StateViewCache.html\" title=\"struct aptos_vm::data_cache::StateViewCache\">StateViewCache</a>&lt;'a, S&gt;","synthetic":true,"types":["aptos_vm::data_cache::StateViewCache"]},{"text":"impl&lt;'a, S&gt; Freeze for <a class=\"struct\" href=\"aptos_vm/data_cache/struct.RemoteStorage.html\" title=\"struct aptos_vm::data_cache::RemoteStorage\">RemoteStorage</a>&lt;'a, S&gt;","synthetic":true,"types":["aptos_vm::data_cache::RemoteStorage"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"aptos_vm/data_cache/struct.RemoteStorageOwned.html\" title=\"struct aptos_vm::data_cache::RemoteStorageOwned\">RemoteStorageOwned</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["aptos_vm::data_cache::RemoteStorageOwned"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_vm/aptos_vm/struct.AptosVM.html\" title=\"struct aptos_vm::aptos_vm::AptosVM\">AptosVM</a>","synthetic":true,"types":["aptos_vm::aptos_vm::AptosVM"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_vm/logging/struct.AdapterLogSchema.html\" title=\"struct aptos_vm::logging::AdapterLogSchema\">AdapterLogSchema</a>","synthetic":true,"types":["aptos_vm::logging::AdapterLogSchema"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_vm/logging/enum.LogEntry.html\" title=\"enum aptos_vm::logging::LogEntry\">LogEntry</a>","synthetic":true,"types":["aptos_vm::logging::LogEntry"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aptos_vm/move_vm_ext/enum.SessionId.html\" title=\"enum aptos_vm::move_vm_ext::SessionId\">SessionId</a>","synthetic":true,"types":["aptos_vm::move_vm_ext::session::SessionId"]},{"text":"impl&lt;'r, 'l, S&gt; Freeze for <a class=\"struct\" href=\"aptos_vm/move_vm_ext/struct.SessionExt.html\" title=\"struct aptos_vm::move_vm_ext::SessionExt\">SessionExt</a>&lt;'r, 'l, S&gt;","synthetic":true,"types":["aptos_vm::move_vm_ext::session::SessionExt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_vm/move_vm_ext/struct.SessionOutput.html\" title=\"struct aptos_vm::move_vm_ext::SessionOutput\">SessionOutput</a>","synthetic":true,"types":["aptos_vm::move_vm_ext::session::SessionOutput"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"aptos_vm/move_vm_ext/struct.MoveVmExt.html\" title=\"struct aptos_vm::move_vm_ext::MoveVmExt\">MoveVmExt</a>","synthetic":true,"types":["aptos_vm::move_vm_ext::vm::MoveVmExt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_vm/parallel_executor/struct.ParallelAptosVM.html\" title=\"struct aptos_vm::parallel_executor::ParallelAptosVM\">ParallelAptosVM</a>","synthetic":true,"types":["aptos_vm::parallel_executor::ParallelAptosVM"]},{"text":"impl&lt;'a, R&gt; !Freeze for <a class=\"struct\" href=\"aptos_vm/read_write_set_analysis/struct.ReadWriteSetAnalysis.html\" title=\"struct aptos_vm::read_write_set_analysis::ReadWriteSetAnalysis\">ReadWriteSetAnalysis</a>&lt;'a, R&gt;","synthetic":true,"types":["aptos_vm::read_write_set_analysis::ReadWriteSetAnalysis"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aptos_vm/transaction_metadata/struct.TransactionMetadata.html\" title=\"struct aptos_vm::transaction_metadata::TransactionMetadata\">TransactionMetadata</a>","synthetic":true,"types":["aptos_vm::transaction_metadata::TransactionMetadata"]}];
implementors["arc_swap"] = [{"text":"impl&lt;D&gt; Freeze for <a class=\"struct\" href=\"arc_swap/access/struct.AccessConvert.html\" title=\"struct arc_swap::access::AccessConvert\">AccessConvert</a>&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["arc_swap::access::AccessConvert"]},{"text":"impl&lt;A, T, F&gt; Freeze for <a class=\"struct\" href=\"arc_swap/access/struct.Map.html\" title=\"struct arc_swap::access::Map\">Map</a>&lt;A, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["arc_swap::access::Map"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"arc_swap/access/struct.Constant.html\" title=\"struct arc_swap::access::Constant\">Constant</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["arc_swap::access::Constant"]},{"text":"impl&lt;A, T&gt; Freeze for <a class=\"struct\" href=\"arc_swap/cache/struct.Cache.html\" title=\"struct arc_swap::cache::Cache\">Cache</a>&lt;A, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["arc_swap::cache::Cache"]},{"text":"impl&lt;A, T, F&gt; Freeze for <a class=\"struct\" href=\"arc_swap/cache/struct.MapCache.html\" title=\"struct arc_swap::cache::MapCache\">MapCache</a>&lt;A, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["arc_swap::cache::MapCache"]},{"text":"impl&lt;T, S&gt; Freeze for <a class=\"struct\" href=\"arc_swap/struct.Guard.html\" title=\"struct arc_swap::Guard\">Guard</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as InnerStrategy&lt;T&gt;&gt;::Protected: Freeze,&nbsp;</span>","synthetic":true,"types":["arc_swap::Guard"]},{"text":"impl&lt;T, S&nbsp;=&nbsp;HybridStrategy&lt;DefaultConfig&gt;&gt; !Freeze for <a class=\"struct\" href=\"arc_swap/struct.ArcSwapAny.html\" title=\"struct arc_swap::ArcSwapAny\">ArcSwapAny</a>&lt;T, S&gt;","synthetic":true,"types":["arc_swap::ArcSwapAny"]}];
implementors["arrayvec"] = [{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"arrayvec/struct.ArrayString.html\" title=\"struct arrayvec::ArrayString\">ArrayString</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as <a class=\"trait\" href=\"arrayvec/trait.Array.html\" title=\"trait arrayvec::Array\">Array</a>&gt;::<a class=\"associatedtype\" href=\"arrayvec/trait.Array.html#associatedtype.Index\" title=\"type arrayvec::Array::Index\">Index</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["arrayvec::array_string::ArrayString"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"arrayvec/struct.CapacityError.html\" title=\"struct arrayvec::CapacityError\">CapacityError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["arrayvec::errors::CapacityError"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"arrayvec/struct.ArrayVec.html\" title=\"struct arrayvec::ArrayVec\">ArrayVec</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as <a class=\"trait\" href=\"arrayvec/trait.Array.html\" title=\"trait arrayvec::Array\">Array</a>&gt;::<a class=\"associatedtype\" href=\"arrayvec/trait.Array.html#associatedtype.Index\" title=\"type arrayvec::Array::Index\">Index</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["arrayvec::ArrayVec"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"arrayvec/struct.IntoIter.html\" title=\"struct arrayvec::IntoIter\">IntoIter</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as <a class=\"trait\" href=\"arrayvec/trait.Array.html\" title=\"trait arrayvec::Array\">Array</a>&gt;::<a class=\"associatedtype\" href=\"arrayvec/trait.Array.html#associatedtype.Index\" title=\"type arrayvec::Array::Index\">Index</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["arrayvec::IntoIter"]},{"text":"impl&lt;'a, A&gt; Freeze for <a class=\"struct\" href=\"arrayvec/struct.Drain.html\" title=\"struct arrayvec::Drain\">Drain</a>&lt;'a, A&gt;","synthetic":true,"types":["arrayvec::Drain"]}];
implementors["atty"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"atty/enum.Stream.html\" title=\"enum atty::Stream\">Stream</a>","synthetic":true,"types":["atty::Stream"]}];
implementors["backtrace"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"backtrace/struct.Frame.html\" title=\"struct backtrace::Frame\">Frame</a>","synthetic":true,"types":["backtrace::backtrace::Frame"]},{"text":"impl Freeze for <a class=\"struct\" href=\"backtrace/struct.Symbol.html\" title=\"struct backtrace::Symbol\">Symbol</a>","synthetic":true,"types":["backtrace::symbolize::Symbol"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"backtrace/struct.SymbolName.html\" title=\"struct backtrace::SymbolName\">SymbolName</a>&lt;'a&gt;","synthetic":true,"types":["backtrace::symbolize::SymbolName"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"backtrace/enum.BytesOrWideString.html\" title=\"enum backtrace::BytesOrWideString\">BytesOrWideString</a>&lt;'a&gt;","synthetic":true,"types":["backtrace::types::BytesOrWideString"]},{"text":"impl&lt;'a, 'b&gt; Freeze for <a class=\"struct\" href=\"backtrace/struct.BacktraceFmt.html\" title=\"struct backtrace::BacktraceFmt\">BacktraceFmt</a>&lt;'a, 'b&gt;","synthetic":true,"types":["backtrace::print::BacktraceFmt"]},{"text":"impl Freeze for <a class=\"enum\" href=\"backtrace/enum.PrintFmt.html\" title=\"enum backtrace::PrintFmt\">PrintFmt</a>","synthetic":true,"types":["backtrace::print::PrintFmt"]},{"text":"impl&lt;'fmt, 'a, 'b&gt; Freeze for <a class=\"struct\" href=\"backtrace/struct.BacktraceFrameFmt.html\" title=\"struct backtrace::BacktraceFrameFmt\">BacktraceFrameFmt</a>&lt;'fmt, 'a, 'b&gt;","synthetic":true,"types":["backtrace::print::BacktraceFrameFmt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"backtrace/struct.Backtrace.html\" title=\"struct backtrace::Backtrace\">Backtrace</a>","synthetic":true,"types":["backtrace::capture::Backtrace"]},{"text":"impl Freeze for <a class=\"struct\" href=\"backtrace/struct.BacktraceFrame.html\" title=\"struct backtrace::BacktraceFrame\">BacktraceFrame</a>","synthetic":true,"types":["backtrace::capture::BacktraceFrame"]},{"text":"impl Freeze for <a class=\"struct\" href=\"backtrace/struct.BacktraceSymbol.html\" title=\"struct backtrace::BacktraceSymbol\">BacktraceSymbol</a>","synthetic":true,"types":["backtrace::capture::BacktraceSymbol"]}];
implementors["base64"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"base64/display/struct.Base64Display.html\" title=\"struct base64::display::Base64Display\">Base64Display</a>&lt;'a&gt;","synthetic":true,"types":["base64::display::Base64Display"]},{"text":"impl&lt;'a, R&gt; Freeze for <a class=\"struct\" href=\"base64/read/struct.DecoderReader.html\" title=\"struct base64::read::DecoderReader\">DecoderReader</a>&lt;'a, R&gt;","synthetic":true,"types":["base64::read::decoder::DecoderReader"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"base64/write/struct.EncoderWriter.html\" title=\"struct base64::write::EncoderWriter\">EncoderWriter</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["base64::write::encoder::EncoderWriter"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"base64/write/struct.EncoderStringWriter.html\" title=\"struct base64::write::EncoderStringWriter\">EncoderStringWriter</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["base64::write::encoder_string_writer::EncoderStringWriter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"base64/enum.DecodeError.html\" title=\"enum base64::DecodeError\">DecodeError</a>","synthetic":true,"types":["base64::decode::DecodeError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"base64/enum.CharacterSet.html\" title=\"enum base64::CharacterSet\">CharacterSet</a>","synthetic":true,"types":["base64::CharacterSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"base64/struct.Config.html\" title=\"struct base64::Config\">Config</a>","synthetic":true,"types":["base64::Config"]}];
implementors["bcs"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"bcs/enum.Error.html\" title=\"enum bcs::Error\">Error</a>","synthetic":true,"types":["bcs::error::Error"]}];
implementors["bincode"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"bincode/config/struct.LittleEndian.html\" title=\"struct bincode::config::LittleEndian\">LittleEndian</a>","synthetic":true,"types":["bincode::config::endian::LittleEndian"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bincode/config/struct.BigEndian.html\" title=\"struct bincode::config::BigEndian\">BigEndian</a>","synthetic":true,"types":["bincode::config::endian::BigEndian"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bincode/config/struct.NativeEndian.html\" title=\"struct bincode::config::NativeEndian\">NativeEndian</a>","synthetic":true,"types":["bincode::config::endian::NativeEndian"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bincode/config/struct.FixintEncoding.html\" title=\"struct bincode::config::FixintEncoding\">FixintEncoding</a>","synthetic":true,"types":["bincode::config::int::FixintEncoding"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bincode/config/struct.VarintEncoding.html\" title=\"struct bincode::config::VarintEncoding\">VarintEncoding</a>","synthetic":true,"types":["bincode::config::int::VarintEncoding"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bincode/config/struct.Config.html\" title=\"struct bincode::config::Config\">Config</a>","synthetic":true,"types":["bincode::config::legacy::Config"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bincode/config/struct.Bounded.html\" title=\"struct bincode::config::Bounded\">Bounded</a>","synthetic":true,"types":["bincode::config::limit::Bounded"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bincode/config/struct.Infinite.html\" title=\"struct bincode::config::Infinite\">Infinite</a>","synthetic":true,"types":["bincode::config::limit::Infinite"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bincode/config/struct.AllowTrailing.html\" title=\"struct bincode::config::AllowTrailing\">AllowTrailing</a>","synthetic":true,"types":["bincode::config::trailing::AllowTrailing"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bincode/config/struct.RejectTrailing.html\" title=\"struct bincode::config::RejectTrailing\">RejectTrailing</a>","synthetic":true,"types":["bincode::config::trailing::RejectTrailing"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bincode/config/struct.DefaultOptions.html\" title=\"struct bincode::config::DefaultOptions\">DefaultOptions</a>","synthetic":true,"types":["bincode::config::DefaultOptions"]},{"text":"impl&lt;O, L&gt; Freeze for <a class=\"struct\" href=\"bincode/config/struct.WithOtherLimit.html\" title=\"struct bincode::config::WithOtherLimit\">WithOtherLimit</a>&lt;O, L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Freeze,&nbsp;</span>","synthetic":true,"types":["bincode::config::WithOtherLimit"]},{"text":"impl&lt;O, E&gt; Freeze for <a class=\"struct\" href=\"bincode/config/struct.WithOtherEndian.html\" title=\"struct bincode::config::WithOtherEndian\">WithOtherEndian</a>&lt;O, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Freeze,&nbsp;</span>","synthetic":true,"types":["bincode::config::WithOtherEndian"]},{"text":"impl&lt;O, I&gt; Freeze for <a class=\"struct\" href=\"bincode/config/struct.WithOtherIntEncoding.html\" title=\"struct bincode::config::WithOtherIntEncoding\">WithOtherIntEncoding</a>&lt;O, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Freeze,&nbsp;</span>","synthetic":true,"types":["bincode::config::WithOtherIntEncoding"]},{"text":"impl&lt;O, T&gt; Freeze for <a class=\"struct\" href=\"bincode/config/struct.WithOtherTrailing.html\" title=\"struct bincode::config::WithOtherTrailing\">WithOtherTrailing</a>&lt;O, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Freeze,&nbsp;</span>","synthetic":true,"types":["bincode::config::WithOtherTrailing"]},{"text":"impl&lt;'storage&gt; Freeze for <a class=\"struct\" href=\"bincode/de/read/struct.SliceReader.html\" title=\"struct bincode::de::read::SliceReader\">SliceReader</a>&lt;'storage&gt;","synthetic":true,"types":["bincode::de::read::SliceReader"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"bincode/de/read/struct.IoReader.html\" title=\"struct bincode::de::read::IoReader\">IoReader</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["bincode::de::read::IoReader"]},{"text":"impl&lt;R, O&gt; Freeze for <a class=\"struct\" href=\"bincode/de/struct.Deserializer.html\" title=\"struct bincode::de::Deserializer\">Deserializer</a>&lt;R, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["bincode::de::Deserializer"]},{"text":"impl Freeze for <a class=\"enum\" href=\"bincode/enum.ErrorKind.html\" title=\"enum bincode::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["bincode::error::ErrorKind"]},{"text":"impl&lt;W, O&gt; Freeze for <a class=\"struct\" href=\"bincode/struct.Serializer.html\" title=\"struct bincode::Serializer\">Serializer</a>&lt;W, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["bincode::ser::Serializer"]}];
implementors["bitmaps"] = [{"text":"impl&lt;Size&gt; Freeze for <a class=\"struct\" href=\"bitmaps/struct.Bitmap.html\" title=\"struct bitmaps::Bitmap\">Bitmap</a>&lt;Size&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Size as <a class=\"trait\" href=\"bitmaps/trait.Bits.html\" title=\"trait bitmaps::Bits\">Bits</a>&gt;::<a class=\"associatedtype\" href=\"bitmaps/trait.Bits.html#associatedtype.Store\" title=\"type bitmaps::Bits::Store\">Store</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["bitmaps::bitmap::Bitmap"]},{"text":"impl&lt;'a, Size&gt; Freeze for <a class=\"struct\" href=\"bitmaps/struct.Iter.html\" title=\"struct bitmaps::Iter\">Iter</a>&lt;'a, Size&gt;","synthetic":true,"types":["bitmaps::bitmap::Iter"]}];
implementors["block_buffer"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"block_buffer/struct.Eager.html\" title=\"struct block_buffer::Eager\">Eager</a>","synthetic":true,"types":["block_buffer::Eager"]},{"text":"impl Freeze for <a class=\"struct\" href=\"block_buffer/struct.Lazy.html\" title=\"struct block_buffer::Lazy\">Lazy</a>","synthetic":true,"types":["block_buffer::Lazy"]},{"text":"impl&lt;BlockSize, Kind&gt; Freeze for <a class=\"struct\" href=\"block_buffer/struct.BlockBuffer.html\" title=\"struct block_buffer::BlockBuffer\">BlockBuffer</a>&lt;BlockSize, Kind&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;BlockSize as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.61.0/core/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["block_buffer::BlockBuffer"]}];
implementors["blst"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"blst/min_pk/struct.SecretKey.html\" title=\"struct blst::min_pk::SecretKey\">SecretKey</a>","synthetic":true,"types":["blst::min_pk::SecretKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"blst/min_pk/struct.PublicKey.html\" title=\"struct blst::min_pk::PublicKey\">PublicKey</a>","synthetic":true,"types":["blst::min_pk::PublicKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"blst/min_pk/struct.AggregatePublicKey.html\" title=\"struct blst::min_pk::AggregatePublicKey\">AggregatePublicKey</a>","synthetic":true,"types":["blst::min_pk::AggregatePublicKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"blst/min_pk/struct.Signature.html\" title=\"struct blst::min_pk::Signature\">Signature</a>","synthetic":true,"types":["blst::min_pk::Signature"]},{"text":"impl Freeze for <a class=\"struct\" href=\"blst/min_pk/struct.AggregateSignature.html\" title=\"struct blst::min_pk::AggregateSignature\">AggregateSignature</a>","synthetic":true,"types":["blst::min_pk::AggregateSignature"]},{"text":"impl Freeze for <a class=\"struct\" href=\"blst/min_sig/struct.SecretKey.html\" title=\"struct blst::min_sig::SecretKey\">SecretKey</a>","synthetic":true,"types":["blst::min_sig::SecretKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"blst/min_sig/struct.PublicKey.html\" title=\"struct blst::min_sig::PublicKey\">PublicKey</a>","synthetic":true,"types":["blst::min_sig::PublicKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"blst/min_sig/struct.AggregatePublicKey.html\" title=\"struct blst::min_sig::AggregatePublicKey\">AggregatePublicKey</a>","synthetic":true,"types":["blst::min_sig::AggregatePublicKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"blst/min_sig/struct.Signature.html\" title=\"struct blst::min_sig::Signature\">Signature</a>","synthetic":true,"types":["blst::min_sig::Signature"]},{"text":"impl Freeze for <a class=\"struct\" href=\"blst/min_sig/struct.AggregateSignature.html\" title=\"struct blst::min_sig::AggregateSignature\">AggregateSignature</a>","synthetic":true,"types":["blst::min_sig::AggregateSignature"]},{"text":"impl Freeze for <a class=\"enum\" href=\"blst/enum.BLST_ERROR.html\" title=\"enum blst::BLST_ERROR\">BLST_ERROR</a>","synthetic":true,"types":["blst::BLST_ERROR"]},{"text":"impl Freeze for <a class=\"struct\" href=\"blst/struct.blst_scalar.html\" title=\"struct blst::blst_scalar\">blst_scalar</a>","synthetic":true,"types":["blst::blst_scalar"]},{"text":"impl Freeze for <a class=\"struct\" href=\"blst/struct.blst_fr.html\" title=\"struct blst::blst_fr\">blst_fr</a>","synthetic":true,"types":["blst::blst_fr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"blst/struct.blst_fp.html\" title=\"struct blst::blst_fp\">blst_fp</a>","synthetic":true,"types":["blst::blst_fp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"blst/struct.blst_fp2.html\" title=\"struct blst::blst_fp2\">blst_fp2</a>","synthetic":true,"types":["blst::blst_fp2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"blst/struct.blst_fp6.html\" title=\"struct blst::blst_fp6\">blst_fp6</a>","synthetic":true,"types":["blst::blst_fp6"]},{"text":"impl Freeze for <a class=\"struct\" href=\"blst/struct.blst_fp12.html\" title=\"struct blst::blst_fp12\">blst_fp12</a>","synthetic":true,"types":["blst::blst_fp12"]},{"text":"impl Freeze for <a class=\"struct\" href=\"blst/struct.blst_p1.html\" title=\"struct blst::blst_p1\">blst_p1</a>","synthetic":true,"types":["blst::blst_p1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"blst/struct.blst_p1_affine.html\" title=\"struct blst::blst_p1_affine\">blst_p1_affine</a>","synthetic":true,"types":["blst::blst_p1_affine"]},{"text":"impl Freeze for <a class=\"struct\" href=\"blst/struct.blst_p2.html\" title=\"struct blst::blst_p2\">blst_p2</a>","synthetic":true,"types":["blst::blst_p2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"blst/struct.blst_p2_affine.html\" title=\"struct blst::blst_p2_affine\">blst_p2_affine</a>","synthetic":true,"types":["blst::blst_p2_affine"]},{"text":"impl Freeze for <a class=\"struct\" href=\"blst/struct.blst_pairing.html\" title=\"struct blst::blst_pairing\">blst_pairing</a>","synthetic":true,"types":["blst::blst_pairing"]},{"text":"impl Freeze for <a class=\"struct\" href=\"blst/struct.blst_uniq.html\" title=\"struct blst::blst_uniq\">blst_uniq</a>","synthetic":true,"types":["blst::blst_uniq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"blst/struct.Pairing.html\" title=\"struct blst::Pairing\">Pairing</a>","synthetic":true,"types":["blst::Pairing"]},{"text":"impl Freeze for <a class=\"struct\" href=\"blst/struct.p1_affines.html\" title=\"struct blst::p1_affines\">p1_affines</a>","synthetic":true,"types":["blst::p1_affines"]},{"text":"impl Freeze for <a class=\"struct\" href=\"blst/struct.p2_affines.html\" title=\"struct blst::p2_affines\">p2_affines</a>","synthetic":true,"types":["blst::p2_affines"]}];
implementors["bstr"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"bstr/struct.BStr.html\" title=\"struct bstr::BStr\">BStr</a>","synthetic":true,"types":["bstr::bstr::BStr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bstr/struct.BString.html\" title=\"struct bstr::BString\">BString</a>","synthetic":true,"types":["bstr::bstring::BString"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.Finder.html\" title=\"struct bstr::Finder\">Finder</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::Finder"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.FinderReverse.html\" title=\"struct bstr::FinderReverse\">FinderReverse</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::FinderReverse"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.Find.html\" title=\"struct bstr::Find\">Find</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::Find"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.FindReverse.html\" title=\"struct bstr::FindReverse\">FindReverse</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::FindReverse"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.Bytes.html\" title=\"struct bstr::Bytes\">Bytes</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::Bytes"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.Fields.html\" title=\"struct bstr::Fields\">Fields</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::Fields"]},{"text":"impl&lt;'a, F&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.FieldsWith.html\" title=\"struct bstr::FieldsWith\">FieldsWith</a>&lt;'a, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["bstr::ext_slice::FieldsWith"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.Split.html\" title=\"struct bstr::Split\">Split</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::Split"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.SplitReverse.html\" title=\"struct bstr::SplitReverse\">SplitReverse</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::SplitReverse"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.SplitN.html\" title=\"struct bstr::SplitN\">SplitN</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::SplitN"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.SplitNReverse.html\" title=\"struct bstr::SplitNReverse\">SplitNReverse</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::SplitNReverse"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.Lines.html\" title=\"struct bstr::Lines\">Lines</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::Lines"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.LinesWithTerminator.html\" title=\"struct bstr::LinesWithTerminator\">LinesWithTerminator</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::LinesWithTerminator"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.DrainBytes.html\" title=\"struct bstr::DrainBytes\">DrainBytes</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_vec::DrainBytes"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bstr/struct.FromUtf8Error.html\" title=\"struct bstr::FromUtf8Error\">FromUtf8Error</a>","synthetic":true,"types":["bstr::ext_vec::FromUtf8Error"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"bstr/io/struct.ByteLines.html\" title=\"struct bstr::io::ByteLines\">ByteLines</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["bstr::io::ByteLines"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"bstr/io/struct.ByteRecords.html\" title=\"struct bstr::io::ByteRecords\">ByteRecords</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["bstr::io::ByteRecords"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.Chars.html\" title=\"struct bstr::Chars\">Chars</a>&lt;'a&gt;","synthetic":true,"types":["bstr::utf8::Chars"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.CharIndices.html\" title=\"struct bstr::CharIndices\">CharIndices</a>&lt;'a&gt;","synthetic":true,"types":["bstr::utf8::CharIndices"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.Utf8Chunks.html\" title=\"struct bstr::Utf8Chunks\">Utf8Chunks</a>&lt;'a&gt;","synthetic":true,"types":["bstr::utf8::Utf8Chunks"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.Utf8Chunk.html\" title=\"struct bstr::Utf8Chunk\">Utf8Chunk</a>&lt;'a&gt;","synthetic":true,"types":["bstr::utf8::Utf8Chunk"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bstr/struct.Utf8Error.html\" title=\"struct bstr::Utf8Error\">Utf8Error</a>","synthetic":true,"types":["bstr::utf8::Utf8Error"]}];
implementors["buf_redux"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"buf_redux/policy/struct.DoRead.html\" title=\"struct buf_redux::policy::DoRead\">DoRead</a>","synthetic":true,"types":["buf_redux::policy::DoRead"]},{"text":"impl Freeze for <a class=\"struct\" href=\"buf_redux/policy/struct.StdPolicy.html\" title=\"struct buf_redux::policy::StdPolicy\">StdPolicy</a>","synthetic":true,"types":["buf_redux::policy::StdPolicy"]},{"text":"impl Freeze for <a class=\"struct\" href=\"buf_redux/policy/struct.MinBuffered.html\" title=\"struct buf_redux::policy::MinBuffered\">MinBuffered</a>","synthetic":true,"types":["buf_redux::policy::MinBuffered"]},{"text":"impl Freeze for <a class=\"struct\" href=\"buf_redux/policy/struct.FlushAmt.html\" title=\"struct buf_redux::policy::FlushAmt\">FlushAmt</a>","synthetic":true,"types":["buf_redux::policy::FlushAmt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"buf_redux/policy/struct.FlushAtLeast.html\" title=\"struct buf_redux::policy::FlushAtLeast\">FlushAtLeast</a>","synthetic":true,"types":["buf_redux::policy::FlushAtLeast"]},{"text":"impl Freeze for <a class=\"struct\" href=\"buf_redux/policy/struct.FlushExact.html\" title=\"struct buf_redux::policy::FlushExact\">FlushExact</a>","synthetic":true,"types":["buf_redux::policy::FlushExact"]},{"text":"impl Freeze for <a class=\"struct\" href=\"buf_redux/policy/struct.FlushOn.html\" title=\"struct buf_redux::policy::FlushOn\">FlushOn</a>","synthetic":true,"types":["buf_redux::policy::FlushOn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"buf_redux/policy/struct.FlushOnNewline.html\" title=\"struct buf_redux::policy::FlushOnNewline\">FlushOnNewline</a>","synthetic":true,"types":["buf_redux::policy::FlushOnNewline"]},{"text":"impl&lt;R, P&gt; Freeze for <a class=\"struct\" href=\"buf_redux/struct.BufReader.html\" title=\"struct buf_redux::BufReader\">BufReader</a>&lt;R, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["buf_redux::BufReader"]},{"text":"impl&lt;W, P&gt; Freeze for <a class=\"struct\" href=\"buf_redux/struct.BufWriter.html\" title=\"struct buf_redux::BufWriter\">BufWriter</a>&lt;W, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["buf_redux::BufWriter"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"buf_redux/struct.LineWriter.html\" title=\"struct buf_redux::LineWriter\">LineWriter</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["buf_redux::LineWriter"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"buf_redux/struct.IntoInnerError.html\" title=\"struct buf_redux::IntoInnerError\">IntoInnerError</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["buf_redux::IntoInnerError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"buf_redux/struct.Buffer.html\" title=\"struct buf_redux::Buffer\">Buffer</a>","synthetic":true,"types":["buf_redux::Buffer"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"buf_redux/struct.Unbuffer.html\" title=\"struct buf_redux::Unbuffer\">Unbuffer</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["buf_redux::Unbuffer"]}];
implementors["byteorder"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"byteorder/enum.BigEndian.html\" title=\"enum byteorder::BigEndian\">BigEndian</a>","synthetic":true,"types":["byteorder::BigEndian"]},{"text":"impl Freeze for <a class=\"enum\" href=\"byteorder/enum.LittleEndian.html\" title=\"enum byteorder::LittleEndian\">LittleEndian</a>","synthetic":true,"types":["byteorder::LittleEndian"]}];
implementors["bytes"] = [{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.Chain.html\" title=\"struct bytes::buf::Chain\">Chain</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::chain::Chain"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.IntoIter.html\" title=\"struct bytes::buf::IntoIter\">IntoIter</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::iter::IntoIter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.Limit.html\" title=\"struct bytes::buf::Limit\">Limit</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::limit::Limit"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.Reader.html\" title=\"struct bytes::buf::Reader\">Reader</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::reader::Reader"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.Take.html\" title=\"struct bytes::buf::Take\">Take</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::take::Take"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bytes/buf/struct.UninitSlice.html\" title=\"struct bytes::buf::UninitSlice\">UninitSlice</a>","synthetic":true,"types":["bytes::buf::uninit_slice::UninitSlice"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.Writer.html\" title=\"struct bytes::buf::Writer\">Writer</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::writer::Writer"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"bytes/struct.Bytes.html\" title=\"struct bytes::Bytes\">Bytes</a>","synthetic":true,"types":["bytes::bytes::Bytes"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bytes/struct.BytesMut.html\" title=\"struct bytes::BytesMut\">BytesMut</a>","synthetic":true,"types":["bytes::bytes_mut::BytesMut"]}];
implementors["cached_framework_packages"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"cached_framework_packages/aptos_stdlib/enum.ScriptFunctionCall.html\" title=\"enum cached_framework_packages::aptos_stdlib::ScriptFunctionCall\">ScriptFunctionCall</a>","synthetic":true,"types":["cached_framework_packages::aptos_stdlib::ScriptFunctionCall"]}];
implementors["cassowary"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"cassowary/struct.Solver.html\" title=\"struct cassowary::Solver\">Solver</a>","synthetic":true,"types":["cassowary::solver_impl::Solver"]},{"text":"impl Freeze for <a class=\"struct\" href=\"cassowary/struct.Variable.html\" title=\"struct cassowary::Variable\">Variable</a>","synthetic":true,"types":["cassowary::Variable"]},{"text":"impl Freeze for <a class=\"struct\" href=\"cassowary/struct.Term.html\" title=\"struct cassowary::Term\">Term</a>","synthetic":true,"types":["cassowary::Term"]},{"text":"impl Freeze for <a class=\"struct\" href=\"cassowary/struct.Expression.html\" title=\"struct cassowary::Expression\">Expression</a>","synthetic":true,"types":["cassowary::Expression"]},{"text":"impl Freeze for <a class=\"enum\" href=\"cassowary/enum.RelationalOperator.html\" title=\"enum cassowary::RelationalOperator\">RelationalOperator</a>","synthetic":true,"types":["cassowary::RelationalOperator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"cassowary/struct.Constraint.html\" title=\"struct cassowary::Constraint\">Constraint</a>","synthetic":true,"types":["cassowary::Constraint"]},{"text":"impl Freeze for <a class=\"enum\" href=\"cassowary/enum.WeightedRelation.html\" title=\"enum cassowary::WeightedRelation\">WeightedRelation</a>","synthetic":true,"types":["cassowary::WeightedRelation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"cassowary/struct.PartialConstraint.html\" title=\"struct cassowary::PartialConstraint\">PartialConstraint</a>","synthetic":true,"types":["cassowary::PartialConstraint"]},{"text":"impl Freeze for <a class=\"enum\" href=\"cassowary/enum.AddConstraintError.html\" title=\"enum cassowary::AddConstraintError\">AddConstraintError</a>","synthetic":true,"types":["cassowary::AddConstraintError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"cassowary/enum.RemoveConstraintError.html\" title=\"enum cassowary::RemoveConstraintError\">RemoveConstraintError</a>","synthetic":true,"types":["cassowary::RemoveConstraintError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"cassowary/enum.AddEditVariableError.html\" title=\"enum cassowary::AddEditVariableError\">AddEditVariableError</a>","synthetic":true,"types":["cassowary::AddEditVariableError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"cassowary/enum.RemoveEditVariableError.html\" title=\"enum cassowary::RemoveEditVariableError\">RemoveEditVariableError</a>","synthetic":true,"types":["cassowary::RemoveEditVariableError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"cassowary/enum.SuggestValueError.html\" title=\"enum cassowary::SuggestValueError\">SuggestValueError</a>","synthetic":true,"types":["cassowary::SuggestValueError"]}];
implementors["chrono"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/offset/struct.FixedOffset.html\" title=\"struct chrono::offset::FixedOffset\">FixedOffset</a>","synthetic":true,"types":["chrono::offset::fixed::FixedOffset"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/offset/struct.Local.html\" title=\"struct chrono::offset::Local\">Local</a>","synthetic":true,"types":["chrono::offset::local::Local"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/offset/struct.Utc.html\" title=\"struct chrono::offset::Utc\">Utc</a>","synthetic":true,"types":["chrono::offset::utc::Utc"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"chrono/offset/enum.LocalResult.html\" title=\"enum chrono::offset::LocalResult\">LocalResult</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["chrono::offset::LocalResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/naive/struct.NaiveDate.html\" title=\"struct chrono::naive::NaiveDate\">NaiveDate</a>","synthetic":true,"types":["chrono::naive::date::NaiveDate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/naive/struct.NaiveDateTime.html\" title=\"struct chrono::naive::NaiveDateTime\">NaiveDateTime</a>","synthetic":true,"types":["chrono::naive::datetime::NaiveDateTime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/naive/struct.IsoWeek.html\" title=\"struct chrono::naive::IsoWeek\">IsoWeek</a>","synthetic":true,"types":["chrono::naive::isoweek::IsoWeek"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/naive/struct.NaiveTime.html\" title=\"struct chrono::naive::NaiveTime\">NaiveTime</a>","synthetic":true,"types":["chrono::naive::time::NaiveTime"]},{"text":"impl&lt;Tz&gt; Freeze for <a class=\"struct\" href=\"chrono/struct.Date.html\" title=\"struct chrono::Date\">Date</a>&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>&gt;::<a class=\"associatedtype\" href=\"chrono/offset/trait.TimeZone.html#associatedtype.Offset\" title=\"type chrono::offset::TimeZone::Offset\">Offset</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["chrono::date::Date"]},{"text":"impl Freeze for <a class=\"enum\" href=\"chrono/enum.SecondsFormat.html\" title=\"enum chrono::SecondsFormat\">SecondsFormat</a>","synthetic":true,"types":["chrono::datetime::SecondsFormat"]},{"text":"impl&lt;Tz&gt; Freeze for <a class=\"struct\" href=\"chrono/struct.DateTime.html\" title=\"struct chrono::DateTime\">DateTime</a>&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>&gt;::<a class=\"associatedtype\" href=\"chrono/offset/trait.TimeZone.html#associatedtype.Offset\" title=\"type chrono::offset::TimeZone::Offset\">Offset</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["chrono::datetime::DateTime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/format/struct.Parsed.html\" title=\"struct chrono::format::Parsed\">Parsed</a>","synthetic":true,"types":["chrono::format::parsed::Parsed"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"chrono/format/strftime/struct.StrftimeItems.html\" title=\"struct chrono::format::strftime::StrftimeItems\">StrftimeItems</a>&lt;'a&gt;","synthetic":true,"types":["chrono::format::strftime::StrftimeItems"]},{"text":"impl Freeze for <a class=\"enum\" href=\"chrono/format/enum.Pad.html\" title=\"enum chrono::format::Pad\">Pad</a>","synthetic":true,"types":["chrono::format::Pad"]},{"text":"impl Freeze for <a class=\"enum\" href=\"chrono/format/enum.Numeric.html\" title=\"enum chrono::format::Numeric\">Numeric</a>","synthetic":true,"types":["chrono::format::Numeric"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/format/struct.InternalNumeric.html\" title=\"struct chrono::format::InternalNumeric\">InternalNumeric</a>","synthetic":true,"types":["chrono::format::InternalNumeric"]},{"text":"impl Freeze for <a class=\"enum\" href=\"chrono/format/enum.Fixed.html\" title=\"enum chrono::format::Fixed\">Fixed</a>","synthetic":true,"types":["chrono::format::Fixed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/format/struct.InternalFixed.html\" title=\"struct chrono::format::InternalFixed\">InternalFixed</a>","synthetic":true,"types":["chrono::format::InternalFixed"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"chrono/format/enum.Item.html\" title=\"enum chrono::format::Item\">Item</a>&lt;'a&gt;","synthetic":true,"types":["chrono::format::Item"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/format/struct.ParseError.html\" title=\"struct chrono::format::ParseError\">ParseError</a>","synthetic":true,"types":["chrono::format::ParseError"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"chrono/format/struct.DelayedFormat.html\" title=\"struct chrono::format::DelayedFormat\">DelayedFormat</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["chrono::format::DelayedFormat"]},{"text":"impl Freeze for <a class=\"enum\" href=\"chrono/enum.RoundingError.html\" title=\"enum chrono::RoundingError\">RoundingError</a>","synthetic":true,"types":["chrono::round::RoundingError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"chrono/enum.Weekday.html\" title=\"enum chrono::Weekday\">Weekday</a>","synthetic":true,"types":["chrono::Weekday"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/struct.ParseWeekdayError.html\" title=\"struct chrono::ParseWeekdayError\">ParseWeekdayError</a>","synthetic":true,"types":["chrono::ParseWeekdayError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"chrono/enum.Month.html\" title=\"enum chrono::Month\">Month</a>","synthetic":true,"types":["chrono::Month"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/struct.ParseMonthError.html\" title=\"struct chrono::ParseMonthError\">ParseMonthError</a>","synthetic":true,"types":["chrono::ParseMonthError"]}];
implementors["chrono_tz"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"chrono_tz/enum.Tz.html\" title=\"enum chrono_tz::Tz\">Tz</a>","synthetic":true,"types":["chrono_tz::timezones::Tz"]}];
implementors["cipher"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"cipher/errors/struct.LoopError.html\" title=\"struct cipher::errors::LoopError\">LoopError</a>","synthetic":true,"types":["cipher::errors::LoopError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"cipher/errors/struct.InvalidLength.html\" title=\"struct cipher::errors::InvalidLength\">InvalidLength</a>","synthetic":true,"types":["cipher::errors::InvalidLength"]},{"text":"impl Freeze for <a class=\"struct\" href=\"cipher/errors/struct.OverflowError.html\" title=\"struct cipher::errors::OverflowError\">OverflowError</a>","synthetic":true,"types":["cipher::errors::OverflowError"]}];
implementors["clap"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"clap/builder/enum.ArgAction.html\" title=\"enum clap::builder::ArgAction\">ArgAction</a>","synthetic":true,"types":["clap::builder::action::ArgAction"]},{"text":"impl Freeze for <a class=\"enum\" href=\"clap/builder/enum.AppSettings.html\" title=\"enum clap::builder::AppSettings\">AppSettings</a>","synthetic":true,"types":["clap::builder::app_settings::AppSettings"]},{"text":"impl&lt;'help&gt; Freeze for <a class=\"struct\" href=\"clap/builder/struct.Arg.html\" title=\"struct clap::builder::Arg\">Arg</a>&lt;'help&gt;","synthetic":true,"types":["clap::builder::arg::Arg"]},{"text":"impl&lt;'help&gt; Freeze for <a class=\"struct\" href=\"clap/builder/struct.ArgGroup.html\" title=\"struct clap::builder::ArgGroup\">ArgGroup</a>&lt;'help&gt;","synthetic":true,"types":["clap::builder::arg_group::ArgGroup"]},{"text":"impl Freeze for <a class=\"enum\" href=\"clap/builder/enum.ArgSettings.html\" title=\"enum clap::builder::ArgSettings\">ArgSettings</a>","synthetic":true,"types":["clap::builder::arg_settings::ArgSettings"]},{"text":"impl&lt;'help&gt; Freeze for <a class=\"struct\" href=\"clap/builder/struct.App.html\" title=\"struct clap::builder::App\">App</a>&lt;'help&gt;","synthetic":true,"types":["clap::builder::command::App"]},{"text":"impl&lt;'help&gt; Freeze for <a class=\"struct\" href=\"clap/builder/struct.PossibleValue.html\" title=\"struct clap::builder::PossibleValue\">PossibleValue</a>&lt;'help&gt;","synthetic":true,"types":["clap::builder::possible_value::PossibleValue"]},{"text":"impl Freeze for <a class=\"enum\" href=\"clap/builder/enum.ValueHint.html\" title=\"enum clap::builder::ValueHint\">ValueHint</a>","synthetic":true,"types":["clap::builder::value_hint::ValueHint"]},{"text":"impl Freeze for <a class=\"struct\" href=\"clap/builder/struct.ValueParser.html\" title=\"struct clap::builder::ValueParser\">ValueParser</a>","synthetic":true,"types":["clap::builder::value_parser::ValueParser"]},{"text":"impl Freeze for <a class=\"struct\" href=\"clap/builder/struct.StringValueParser.html\" title=\"struct clap::builder::StringValueParser\">StringValueParser</a>","synthetic":true,"types":["clap::builder::value_parser::StringValueParser"]},{"text":"impl Freeze for <a class=\"struct\" href=\"clap/builder/struct.OsStringValueParser.html\" title=\"struct clap::builder::OsStringValueParser\">OsStringValueParser</a>","synthetic":true,"types":["clap::builder::value_parser::OsStringValueParser"]},{"text":"impl Freeze for <a class=\"struct\" href=\"clap/builder/struct.PathBufValueParser.html\" title=\"struct clap::builder::PathBufValueParser\">PathBufValueParser</a>","synthetic":true,"types":["clap::builder::value_parser::PathBufValueParser"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"clap/builder/struct.EnumValueParser.html\" title=\"struct clap::builder::EnumValueParser\">EnumValueParser</a>&lt;E&gt;","synthetic":true,"types":["clap::builder::value_parser::EnumValueParser"]},{"text":"impl Freeze for <a class=\"struct\" href=\"clap/builder/struct.PossibleValuesParser.html\" title=\"struct clap::builder::PossibleValuesParser\">PossibleValuesParser</a>","synthetic":true,"types":["clap::builder::value_parser::PossibleValuesParser"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"clap/builder/struct.RangedI64ValueParser.html\" title=\"struct clap::builder::RangedI64ValueParser\">RangedI64ValueParser</a>&lt;T&gt;","synthetic":true,"types":["clap::builder::value_parser::RangedI64ValueParser"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"clap/builder/struct.RangedU64ValueParser.html\" title=\"struct clap::builder::RangedU64ValueParser\">RangedU64ValueParser</a>&lt;T&gt;","synthetic":true,"types":["clap::builder::value_parser::RangedU64ValueParser"]},{"text":"impl Freeze for <a class=\"struct\" href=\"clap/builder/struct.BoolValueParser.html\" title=\"struct clap::builder::BoolValueParser\">BoolValueParser</a>","synthetic":true,"types":["clap::builder::value_parser::BoolValueParser"]},{"text":"impl Freeze for <a class=\"struct\" href=\"clap/builder/struct.FalseyValueParser.html\" title=\"struct clap::builder::FalseyValueParser\">FalseyValueParser</a>","synthetic":true,"types":["clap::builder::value_parser::FalseyValueParser"]},{"text":"impl Freeze for <a class=\"struct\" href=\"clap/builder/struct.BoolishValueParser.html\" title=\"struct clap::builder::BoolishValueParser\">BoolishValueParser</a>","synthetic":true,"types":["clap::builder::value_parser::BoolishValueParser"]},{"text":"impl Freeze for <a class=\"struct\" href=\"clap/builder/struct.NonEmptyStringValueParser.html\" title=\"struct clap::builder::NonEmptyStringValueParser\">NonEmptyStringValueParser</a>","synthetic":true,"types":["clap::builder::value_parser::NonEmptyStringValueParser"]},{"text":"impl Freeze for <a class=\"enum\" href=\"clap/error/enum.ContextKind.html\" title=\"enum clap::error::ContextKind\">ContextKind</a>","synthetic":true,"types":["clap::error::context::ContextKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"clap/error/enum.ContextValue.html\" title=\"enum clap::error::ContextValue\">ContextValue</a>","synthetic":true,"types":["clap::error::context::ContextValue"]},{"text":"impl Freeze for <a class=\"enum\" href=\"clap/error/enum.ErrorKind.html\" title=\"enum clap::error::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["clap::error::kind::ErrorKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"clap/error/struct.Error.html\" title=\"struct clap::error::Error\">Error</a>","synthetic":true,"types":["clap::error::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"clap/parser/enum.MatchesError.html\" title=\"enum clap::parser::MatchesError\">MatchesError</a>","synthetic":true,"types":["clap::parser::error::MatchesError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"clap/parser/struct.ArgMatches.html\" title=\"struct clap::parser::ArgMatches\">ArgMatches</a>","synthetic":true,"types":["clap::parser::matches::arg_matches::ArgMatches"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"clap/parser/struct.ValuesRef.html\" title=\"struct clap::parser::ValuesRef\">ValuesRef</a>&lt;'a, T&gt;","synthetic":true,"types":["clap::parser::matches::arg_matches::ValuesRef"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"clap/parser/struct.RawValues.html\" title=\"struct clap::parser::RawValues\">RawValues</a>&lt;'a&gt;","synthetic":true,"types":["clap::parser::matches::arg_matches::RawValues"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"clap/parser/struct.Values.html\" title=\"struct clap::parser::Values\">Values</a>&lt;'a&gt;","synthetic":true,"types":["clap::parser::matches::arg_matches::Values"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"clap/parser/struct.OsValues.html\" title=\"struct clap::parser::OsValues\">OsValues</a>&lt;'a&gt;","synthetic":true,"types":["clap::parser::matches::arg_matches::OsValues"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"clap/parser/struct.Indices.html\" title=\"struct clap::parser::Indices\">Indices</a>&lt;'a&gt;","synthetic":true,"types":["clap::parser::matches::arg_matches::Indices"]},{"text":"impl Freeze for <a class=\"enum\" href=\"clap/parser/enum.ValueSource.html\" title=\"enum clap::parser::ValueSource\">ValueSource</a>","synthetic":true,"types":["clap::parser::matches::value_source::ValueSource"]},{"text":"impl Freeze for <a class=\"enum\" href=\"clap/enum.ColorChoice.html\" title=\"enum clap::ColorChoice\">ColorChoice</a>","synthetic":true,"types":["clap::util::color::ColorChoice"]}];
implementors["clap_lex"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"clap_lex/struct.RawArgs.html\" title=\"struct clap_lex::RawArgs\">RawArgs</a>","synthetic":true,"types":["clap_lex::RawArgs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"clap_lex/struct.ArgCursor.html\" title=\"struct clap_lex::ArgCursor\">ArgCursor</a>","synthetic":true,"types":["clap_lex::ArgCursor"]},{"text":"impl&lt;'s&gt; Freeze for <a class=\"struct\" href=\"clap_lex/struct.ParsedArg.html\" title=\"struct clap_lex::ParsedArg\">ParsedArg</a>&lt;'s&gt;","synthetic":true,"types":["clap_lex::ParsedArg"]},{"text":"impl&lt;'s&gt; Freeze for <a class=\"struct\" href=\"clap_lex/struct.ShortFlags.html\" title=\"struct clap_lex::ShortFlags\">ShortFlags</a>&lt;'s&gt;","synthetic":true,"types":["clap_lex::ShortFlags"]}];
implementors["codespan"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"codespan/struct.FileId.html\" title=\"struct codespan::FileId\">FileId</a>","synthetic":true,"types":["codespan::file::FileId"]},{"text":"impl&lt;Source&gt; Freeze for <a class=\"struct\" href=\"codespan/struct.Files.html\" title=\"struct codespan::Files\">Files</a>&lt;Source&gt;","synthetic":true,"types":["codespan::file::Files"]},{"text":"impl Freeze for <a class=\"struct\" href=\"codespan/struct.LineIndex.html\" title=\"struct codespan::LineIndex\">LineIndex</a>","synthetic":true,"types":["codespan::index::LineIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"codespan/struct.LineNumber.html\" title=\"struct codespan::LineNumber\">LineNumber</a>","synthetic":true,"types":["codespan::index::LineNumber"]},{"text":"impl Freeze for <a class=\"struct\" href=\"codespan/struct.LineOffset.html\" title=\"struct codespan::LineOffset\">LineOffset</a>","synthetic":true,"types":["codespan::index::LineOffset"]},{"text":"impl Freeze for <a class=\"struct\" href=\"codespan/struct.ColumnIndex.html\" title=\"struct codespan::ColumnIndex\">ColumnIndex</a>","synthetic":true,"types":["codespan::index::ColumnIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"codespan/struct.ColumnNumber.html\" title=\"struct codespan::ColumnNumber\">ColumnNumber</a>","synthetic":true,"types":["codespan::index::ColumnNumber"]},{"text":"impl Freeze for <a class=\"struct\" href=\"codespan/struct.ColumnOffset.html\" title=\"struct codespan::ColumnOffset\">ColumnOffset</a>","synthetic":true,"types":["codespan::index::ColumnOffset"]},{"text":"impl Freeze for <a class=\"struct\" href=\"codespan/struct.ByteIndex.html\" title=\"struct codespan::ByteIndex\">ByteIndex</a>","synthetic":true,"types":["codespan::index::ByteIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"codespan/struct.ByteOffset.html\" title=\"struct codespan::ByteOffset\">ByteOffset</a>","synthetic":true,"types":["codespan::index::ByteOffset"]},{"text":"impl Freeze for <a class=\"struct\" href=\"codespan/struct.Location.html\" title=\"struct codespan::Location\">Location</a>","synthetic":true,"types":["codespan::location::Location"]},{"text":"impl Freeze for <a class=\"struct\" href=\"codespan/struct.Span.html\" title=\"struct codespan::Span\">Span</a>","synthetic":true,"types":["codespan::span::Span"]}];
implementors["codespan_reporting"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"codespan_reporting/diagnostic/enum.Severity.html\" title=\"enum codespan_reporting::diagnostic::Severity\">Severity</a>","synthetic":true,"types":["codespan_reporting::diagnostic::Severity"]},{"text":"impl Freeze for <a class=\"enum\" href=\"codespan_reporting/diagnostic/enum.LabelStyle.html\" title=\"enum codespan_reporting::diagnostic::LabelStyle\">LabelStyle</a>","synthetic":true,"types":["codespan_reporting::diagnostic::LabelStyle"]},{"text":"impl&lt;FileId&gt; Freeze for <a class=\"struct\" href=\"codespan_reporting/diagnostic/struct.Label.html\" title=\"struct codespan_reporting::diagnostic::Label\">Label</a>&lt;FileId&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;FileId: Freeze,&nbsp;</span>","synthetic":true,"types":["codespan_reporting::diagnostic::Label"]},{"text":"impl&lt;FileId&gt; Freeze for <a class=\"struct\" href=\"codespan_reporting/diagnostic/struct.Diagnostic.html\" title=\"struct codespan_reporting::diagnostic::Diagnostic\">Diagnostic</a>&lt;FileId&gt;","synthetic":true,"types":["codespan_reporting::diagnostic::Diagnostic"]},{"text":"impl Freeze for <a class=\"enum\" href=\"codespan_reporting/files/enum.Error.html\" title=\"enum codespan_reporting::files::Error\">Error</a>","synthetic":true,"types":["codespan_reporting::files::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"codespan_reporting/files/struct.Location.html\" title=\"struct codespan_reporting::files::Location\">Location</a>","synthetic":true,"types":["codespan_reporting::files::Location"]},{"text":"impl&lt;Name, Source&gt; Freeze for <a class=\"struct\" href=\"codespan_reporting/files/struct.SimpleFile.html\" title=\"struct codespan_reporting::files::SimpleFile\">SimpleFile</a>&lt;Name, Source&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Name: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Source: Freeze,&nbsp;</span>","synthetic":true,"types":["codespan_reporting::files::SimpleFile"]},{"text":"impl&lt;Name, Source&gt; Freeze for <a class=\"struct\" href=\"codespan_reporting/files/struct.SimpleFiles.html\" title=\"struct codespan_reporting::files::SimpleFiles\">SimpleFiles</a>&lt;Name, Source&gt;","synthetic":true,"types":["codespan_reporting::files::SimpleFiles"]},{"text":"impl Freeze for <a class=\"struct\" href=\"codespan_reporting/term/struct.Config.html\" title=\"struct codespan_reporting::term::Config\">Config</a>","synthetic":true,"types":["codespan_reporting::term::config::Config"]},{"text":"impl Freeze for <a class=\"enum\" href=\"codespan_reporting/term/enum.DisplayStyle.html\" title=\"enum codespan_reporting::term::DisplayStyle\">DisplayStyle</a>","synthetic":true,"types":["codespan_reporting::term::config::DisplayStyle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"codespan_reporting/term/struct.Styles.html\" title=\"struct codespan_reporting::term::Styles\">Styles</a>","synthetic":true,"types":["codespan_reporting::term::config::Styles"]},{"text":"impl Freeze for <a class=\"struct\" href=\"codespan_reporting/term/struct.Chars.html\" title=\"struct codespan_reporting::term::Chars\">Chars</a>","synthetic":true,"types":["codespan_reporting::term::config::Chars"]},{"text":"impl Freeze for <a class=\"struct\" href=\"codespan_reporting/term/struct.ColorArg.html\" title=\"struct codespan_reporting::term::ColorArg\">ColorArg</a>","synthetic":true,"types":["codespan_reporting::term::ColorArg"]}];
implementors["colored"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"colored/enum.Color.html\" title=\"enum colored::Color\">Color</a>","synthetic":true,"types":["colored::color::Color"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"colored/control/struct.ShouldColorize.html\" title=\"struct colored::control::ShouldColorize\">ShouldColorize</a>","synthetic":true,"types":["colored::control::ShouldColorize"]},{"text":"impl Freeze for <a class=\"struct\" href=\"colored/control/struct.SHOULD_COLORIZE.html\" title=\"struct colored::control::SHOULD_COLORIZE\">SHOULD_COLORIZE</a>","synthetic":true,"types":["colored::control::SHOULD_COLORIZE"]},{"text":"impl Freeze for <a class=\"struct\" href=\"colored/struct.Style.html\" title=\"struct colored::Style\">Style</a>","synthetic":true,"types":["colored::style::Style"]},{"text":"impl Freeze for <a class=\"enum\" href=\"colored/enum.Styles.html\" title=\"enum colored::Styles\">Styles</a>","synthetic":true,"types":["colored::style::Styles"]},{"text":"impl Freeze for <a class=\"struct\" href=\"colored/struct.ColoredString.html\" title=\"struct colored::ColoredString\">ColoredString</a>","synthetic":true,"types":["colored::ColoredString"]}];
implementors["config"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"config/struct.Config.html\" title=\"struct config::Config\">Config</a>","synthetic":true,"types":["config::config::Config"]},{"text":"impl Freeze for <a class=\"struct\" href=\"config/struct.Environment.html\" title=\"struct config::Environment\">Environment</a>","synthetic":true,"types":["config::env::Environment"]},{"text":"impl Freeze for <a class=\"enum\" href=\"config/enum.ConfigError.html\" title=\"enum config::ConfigError\">ConfigError</a>","synthetic":true,"types":["config::error::ConfigError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"config/enum.FileFormat.html\" title=\"enum config::FileFormat\">FileFormat</a>","synthetic":true,"types":["config::file::format::FileFormat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"config/struct.FileSourceFile.html\" title=\"struct config::FileSourceFile\">FileSourceFile</a>","synthetic":true,"types":["config::file::source::file::FileSourceFile"]},{"text":"impl Freeze for <a class=\"struct\" href=\"config/struct.FileSourceString.html\" title=\"struct config::FileSourceString\">FileSourceString</a>","synthetic":true,"types":["config::file::source::string::FileSourceString"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"config/struct.File.html\" title=\"struct config::File\">File</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["config::file::File"]},{"text":"impl Freeze for <a class=\"struct\" href=\"config/struct.Value.html\" title=\"struct config::Value\">Value</a>","synthetic":true,"types":["config::value::Value"]}];
implementors["cookie"] = [{"text":"impl&lt;'c&gt; Freeze for <a class=\"struct\" href=\"cookie/struct.CookieBuilder.html\" title=\"struct cookie::CookieBuilder\">CookieBuilder</a>&lt;'c&gt;","synthetic":true,"types":["cookie::builder::CookieBuilder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"cookie/enum.ParseError.html\" title=\"enum cookie::ParseError\">ParseError</a>","synthetic":true,"types":["cookie::parse::ParseError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"cookie/struct.CookieJar.html\" title=\"struct cookie::CookieJar\">CookieJar</a>","synthetic":true,"types":["cookie::jar::CookieJar"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"cookie/struct.Delta.html\" title=\"struct cookie::Delta\">Delta</a>&lt;'a&gt;","synthetic":true,"types":["cookie::jar::Delta"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"cookie/struct.Iter.html\" title=\"struct cookie::Iter\">Iter</a>&lt;'a&gt;","synthetic":true,"types":["cookie::jar::Iter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"cookie/enum.SameSite.html\" title=\"enum cookie::SameSite\">SameSite</a>","synthetic":true,"types":["cookie::draft::SameSite"]},{"text":"impl Freeze for <a class=\"enum\" href=\"cookie/enum.Expiration.html\" title=\"enum cookie::Expiration\">Expiration</a>","synthetic":true,"types":["cookie::expiration::Expiration"]},{"text":"impl&lt;'c&gt; Freeze for <a class=\"struct\" href=\"cookie/struct.Cookie.html\" title=\"struct cookie::Cookie\">Cookie</a>&lt;'c&gt;","synthetic":true,"types":["cookie::Cookie"]},{"text":"impl&lt;'a, 'c&gt; Freeze for <a class=\"struct\" href=\"cookie/struct.Display.html\" title=\"struct cookie::Display\">Display</a>&lt;'a, 'c&gt;","synthetic":true,"types":["cookie::Display"]}];
implementors["cookie_store"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"cookie_store/enum.CookieError.html\" title=\"enum cookie_store::CookieError\">Error</a>","synthetic":true,"types":["cookie_store::cookie::Error"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"cookie_store/struct.Cookie.html\" title=\"struct cookie_store::Cookie\">Cookie</a>&lt;'a&gt;","synthetic":true,"types":["cookie_store::cookie::Cookie"]},{"text":"impl Freeze for <a class=\"enum\" href=\"cookie_store/enum.CookieDomain.html\" title=\"enum cookie_store::CookieDomain\">CookieDomain</a>","synthetic":true,"types":["cookie_store::cookie_domain::CookieDomain"]},{"text":"impl Freeze for <a class=\"enum\" href=\"cookie_store/enum.CookieExpiration.html\" title=\"enum cookie_store::CookieExpiration\">CookieExpiration</a>","synthetic":true,"types":["cookie_store::cookie_expiration::CookieExpiration"]},{"text":"impl Freeze for <a class=\"struct\" href=\"cookie_store/struct.CookiePath.html\" title=\"struct cookie_store::CookiePath\">CookiePath</a>","synthetic":true,"types":["cookie_store::cookie_path::CookiePath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"cookie_store/struct.CookieStore.html\" title=\"struct cookie_store::CookieStore\">CookieStore</a>","synthetic":true,"types":["cookie_store::cookie_store::CookieStore"]},{"text":"impl Freeze for <a class=\"struct\" href=\"cookie_store/struct.IdnaErrors.html\" title=\"struct cookie_store::IdnaErrors\">IdnaErrors</a>","synthetic":true,"types":["cookie_store::IdnaErrors"]}];
implementors["crossbeam_channel"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.Sender.html\" title=\"struct crossbeam_channel::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_channel::channel::Sender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.Receiver.html\" title=\"struct crossbeam_channel::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_channel::channel::Receiver"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.Iter.html\" title=\"struct crossbeam_channel::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["crossbeam_channel::channel::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.TryIter.html\" title=\"struct crossbeam_channel::TryIter\">TryIter</a>&lt;'a, T&gt;","synthetic":true,"types":["crossbeam_channel::channel::TryIter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.IntoIter.html\" title=\"struct crossbeam_channel::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_channel::channel::IntoIter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.SendError.html\" title=\"struct crossbeam_channel::SendError\">SendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["crossbeam_channel::err::SendError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"crossbeam_channel/enum.TrySendError.html\" title=\"enum crossbeam_channel::TrySendError\">TrySendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["crossbeam_channel::err::TrySendError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"crossbeam_channel/enum.SendTimeoutError.html\" title=\"enum crossbeam_channel::SendTimeoutError\">SendTimeoutError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["crossbeam_channel::err::SendTimeoutError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.RecvError.html\" title=\"struct crossbeam_channel::RecvError\">RecvError</a>","synthetic":true,"types":["crossbeam_channel::err::RecvError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"crossbeam_channel/enum.TryRecvError.html\" title=\"enum crossbeam_channel::TryRecvError\">TryRecvError</a>","synthetic":true,"types":["crossbeam_channel::err::TryRecvError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"crossbeam_channel/enum.RecvTimeoutError.html\" title=\"enum crossbeam_channel::RecvTimeoutError\">RecvTimeoutError</a>","synthetic":true,"types":["crossbeam_channel::err::RecvTimeoutError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.TrySelectError.html\" title=\"struct crossbeam_channel::TrySelectError\">TrySelectError</a>","synthetic":true,"types":["crossbeam_channel::err::TrySelectError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.SelectTimeoutError.html\" title=\"struct crossbeam_channel::SelectTimeoutError\">SelectTimeoutError</a>","synthetic":true,"types":["crossbeam_channel::err::SelectTimeoutError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.TryReadyError.html\" title=\"struct crossbeam_channel::TryReadyError\">TryReadyError</a>","synthetic":true,"types":["crossbeam_channel::err::TryReadyError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.ReadyTimeoutError.html\" title=\"struct crossbeam_channel::ReadyTimeoutError\">ReadyTimeoutError</a>","synthetic":true,"types":["crossbeam_channel::err::ReadyTimeoutError"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.Select.html\" title=\"struct crossbeam_channel::Select\">Select</a>&lt;'a&gt;","synthetic":true,"types":["crossbeam_channel::select::Select"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.SelectedOperation.html\" title=\"struct crossbeam_channel::SelectedOperation\">SelectedOperation</a>&lt;'a&gt;","synthetic":true,"types":["crossbeam_channel::select::SelectedOperation"]}];
implementors["crossbeam_deque"] = [{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_deque/struct.Worker.html\" title=\"struct crossbeam_deque::Worker\">Worker</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_deque::deque::Worker"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_deque/struct.Stealer.html\" title=\"struct crossbeam_deque::Stealer\">Stealer</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_deque::deque::Stealer"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_deque/struct.Injector.html\" title=\"struct crossbeam_deque::Injector\">Injector</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_deque::deque::Injector"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"crossbeam_deque/enum.Steal.html\" title=\"enum crossbeam_deque::Steal\">Steal</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["crossbeam_deque::deque::Steal"]}];
implementors["crossbeam_epoch"] = [{"text":"impl&lt;'g, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, P&gt; Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.CompareExchangeError.html\" title=\"struct crossbeam_epoch::CompareExchangeError\">CompareExchangeError</a>&lt;'g, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["crossbeam_epoch::atomic::CompareExchangeError"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.Atomic.html\" title=\"struct crossbeam_epoch::Atomic\">Atomic</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_epoch::atomic::Atomic"]},{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.Owned.html\" title=\"struct crossbeam_epoch::Owned\">Owned</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_epoch::atomic::Owned"]},{"text":"impl&lt;'g, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.Shared.html\" title=\"struct crossbeam_epoch::Shared\">Shared</a>&lt;'g, T&gt;","synthetic":true,"types":["crossbeam_epoch::atomic::Shared"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.Collector.html\" title=\"struct crossbeam_epoch::Collector\">Collector</a>","synthetic":true,"types":["crossbeam_epoch::collector::Collector"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.LocalHandle.html\" title=\"struct crossbeam_epoch::LocalHandle\">LocalHandle</a>","synthetic":true,"types":["crossbeam_epoch::collector::LocalHandle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.Guard.html\" title=\"struct crossbeam_epoch::Guard\">Guard</a>","synthetic":true,"types":["crossbeam_epoch::guard::Guard"]}];
implementors["crossbeam_queue"] = [{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_queue/struct.ArrayQueue.html\" title=\"struct crossbeam_queue::ArrayQueue\">ArrayQueue</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_queue::array_queue::ArrayQueue"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_queue/struct.SegQueue.html\" title=\"struct crossbeam_queue::SegQueue\">SegQueue</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_queue::seg_queue::SegQueue"]}];
implementors["crossbeam_utils"] = [{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_utils/atomic/struct.AtomicCell.html\" title=\"struct crossbeam_utils::atomic::AtomicCell\">AtomicCell</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_utils::atomic::atomic_cell::AtomicCell"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/struct.CachePadded.html\" title=\"struct crossbeam_utils::CachePadded\">CachePadded</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["crossbeam_utils::cache_padded::CachePadded"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"crossbeam_utils/struct.Backoff.html\" title=\"struct crossbeam_utils::Backoff\">Backoff</a>","synthetic":true,"types":["crossbeam_utils::backoff::Backoff"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.Parker.html\" title=\"struct crossbeam_utils::sync::Parker\">Parker</a>","synthetic":true,"types":["crossbeam_utils::sync::parker::Parker"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.Unparker.html\" title=\"struct crossbeam_utils::sync::Unparker\">Unparker</a>","synthetic":true,"types":["crossbeam_utils::sync::parker::Unparker"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.ShardedLock.html\" title=\"struct crossbeam_utils::sync::ShardedLock\">ShardedLock</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_utils::sync::sharded_lock::ShardedLock"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.ShardedLockReadGuard.html\" title=\"struct crossbeam_utils::sync::ShardedLockReadGuard\">ShardedLockReadGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["crossbeam_utils::sync::sharded_lock::ShardedLockReadGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.ShardedLockWriteGuard.html\" title=\"struct crossbeam_utils::sync::ShardedLockWriteGuard\">ShardedLockWriteGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["crossbeam_utils::sync::sharded_lock::ShardedLockWriteGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.WaitGroup.html\" title=\"struct crossbeam_utils::sync::WaitGroup\">WaitGroup</a>","synthetic":true,"types":["crossbeam_utils::sync::wait_group::WaitGroup"]},{"text":"impl&lt;'env&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/thread/struct.Scope.html\" title=\"struct crossbeam_utils::thread::Scope\">Scope</a>&lt;'env&gt;","synthetic":true,"types":["crossbeam_utils::thread::Scope"]},{"text":"impl&lt;'scope, 'env&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/thread/struct.ScopedThreadBuilder.html\" title=\"struct crossbeam_utils::thread::ScopedThreadBuilder\">ScopedThreadBuilder</a>&lt;'scope, 'env&gt;","synthetic":true,"types":["crossbeam_utils::thread::ScopedThreadBuilder"]},{"text":"impl&lt;'scope, T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/thread/struct.ScopedJoinHandle.html\" title=\"struct crossbeam_utils::thread::ScopedJoinHandle\">ScopedJoinHandle</a>&lt;'scope, T&gt;","synthetic":true,"types":["crossbeam_utils::thread::ScopedJoinHandle"]}];
implementors["crossterm"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/cursor/struct.MoveTo.html\" title=\"struct crossterm::cursor::MoveTo\">MoveTo</a>","synthetic":true,"types":["crossterm::cursor::MoveTo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/cursor/struct.MoveToNextLine.html\" title=\"struct crossterm::cursor::MoveToNextLine\">MoveToNextLine</a>","synthetic":true,"types":["crossterm::cursor::MoveToNextLine"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/cursor/struct.MoveToPreviousLine.html\" title=\"struct crossterm::cursor::MoveToPreviousLine\">MoveToPreviousLine</a>","synthetic":true,"types":["crossterm::cursor::MoveToPreviousLine"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/cursor/struct.MoveToColumn.html\" title=\"struct crossterm::cursor::MoveToColumn\">MoveToColumn</a>","synthetic":true,"types":["crossterm::cursor::MoveToColumn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/cursor/struct.MoveToRow.html\" title=\"struct crossterm::cursor::MoveToRow\">MoveToRow</a>","synthetic":true,"types":["crossterm::cursor::MoveToRow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/cursor/struct.MoveUp.html\" title=\"struct crossterm::cursor::MoveUp\">MoveUp</a>","synthetic":true,"types":["crossterm::cursor::MoveUp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/cursor/struct.MoveRight.html\" title=\"struct crossterm::cursor::MoveRight\">MoveRight</a>","synthetic":true,"types":["crossterm::cursor::MoveRight"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/cursor/struct.MoveDown.html\" title=\"struct crossterm::cursor::MoveDown\">MoveDown</a>","synthetic":true,"types":["crossterm::cursor::MoveDown"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/cursor/struct.MoveLeft.html\" title=\"struct crossterm::cursor::MoveLeft\">MoveLeft</a>","synthetic":true,"types":["crossterm::cursor::MoveLeft"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/cursor/struct.SavePosition.html\" title=\"struct crossterm::cursor::SavePosition\">SavePosition</a>","synthetic":true,"types":["crossterm::cursor::SavePosition"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/cursor/struct.RestorePosition.html\" title=\"struct crossterm::cursor::RestorePosition\">RestorePosition</a>","synthetic":true,"types":["crossterm::cursor::RestorePosition"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/cursor/struct.Hide.html\" title=\"struct crossterm::cursor::Hide\">Hide</a>","synthetic":true,"types":["crossterm::cursor::Hide"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/cursor/struct.Show.html\" title=\"struct crossterm::cursor::Show\">Show</a>","synthetic":true,"types":["crossterm::cursor::Show"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/cursor/struct.EnableBlinking.html\" title=\"struct crossterm::cursor::EnableBlinking\">EnableBlinking</a>","synthetic":true,"types":["crossterm::cursor::EnableBlinking"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/cursor/struct.DisableBlinking.html\" title=\"struct crossterm::cursor::DisableBlinking\">DisableBlinking</a>","synthetic":true,"types":["crossterm::cursor::DisableBlinking"]},{"text":"impl Freeze for <a class=\"enum\" href=\"crossterm/cursor/enum.CursorShape.html\" title=\"enum crossterm::cursor::CursorShape\">CursorShape</a>","synthetic":true,"types":["crossterm::cursor::CursorShape"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/cursor/struct.SetCursorShape.html\" title=\"struct crossterm::cursor::SetCursorShape\">SetCursorShape</a>","synthetic":true,"types":["crossterm::cursor::SetCursorShape"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/event/struct.EnableMouseCapture.html\" title=\"struct crossterm::event::EnableMouseCapture\">EnableMouseCapture</a>","synthetic":true,"types":["crossterm::event::EnableMouseCapture"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/event/struct.DisableMouseCapture.html\" title=\"struct crossterm::event::DisableMouseCapture\">DisableMouseCapture</a>","synthetic":true,"types":["crossterm::event::DisableMouseCapture"]},{"text":"impl Freeze for <a class=\"enum\" href=\"crossterm/event/enum.Event.html\" title=\"enum crossterm::event::Event\">Event</a>","synthetic":true,"types":["crossterm::event::Event"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/event/struct.MouseEvent.html\" title=\"struct crossterm::event::MouseEvent\">MouseEvent</a>","synthetic":true,"types":["crossterm::event::MouseEvent"]},{"text":"impl Freeze for <a class=\"enum\" href=\"crossterm/event/enum.MouseEventKind.html\" title=\"enum crossterm::event::MouseEventKind\">MouseEventKind</a>","synthetic":true,"types":["crossterm::event::MouseEventKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"crossterm/event/enum.MouseButton.html\" title=\"enum crossterm::event::MouseButton\">MouseButton</a>","synthetic":true,"types":["crossterm::event::MouseButton"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/event/struct.KeyModifiers.html\" title=\"struct crossterm::event::KeyModifiers\">KeyModifiers</a>","synthetic":true,"types":["crossterm::event::KeyModifiers"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/event/struct.KeyEvent.html\" title=\"struct crossterm::event::KeyEvent\">KeyEvent</a>","synthetic":true,"types":["crossterm::event::KeyEvent"]},{"text":"impl Freeze for <a class=\"enum\" href=\"crossterm/event/enum.KeyCode.html\" title=\"enum crossterm::event::KeyCode\">KeyCode</a>","synthetic":true,"types":["crossterm::event::KeyCode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/style/struct.Attributes.html\" title=\"struct crossterm::style::Attributes\">Attributes</a>","synthetic":true,"types":["crossterm::style::attributes::Attributes"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/style/struct.ContentStyle.html\" title=\"struct crossterm::style::ContentStyle\">ContentStyle</a>","synthetic":true,"types":["crossterm::style::content_style::ContentStyle"]},{"text":"impl&lt;D&gt; Freeze for <a class=\"struct\" href=\"crossterm/style/struct.StyledContent.html\" title=\"struct crossterm::style::StyledContent\">StyledContent</a>&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["crossterm::style::styled_content::StyledContent"]},{"text":"impl Freeze for <a class=\"enum\" href=\"crossterm/style/enum.Attribute.html\" title=\"enum crossterm::style::Attribute\">Attribute</a>","synthetic":true,"types":["crossterm::style::types::attribute::Attribute"]},{"text":"impl Freeze for <a class=\"enum\" href=\"crossterm/style/enum.Color.html\" title=\"enum crossterm::style::Color\">Color</a>","synthetic":true,"types":["crossterm::style::types::color::Color"]},{"text":"impl Freeze for <a class=\"enum\" href=\"crossterm/style/enum.Colored.html\" title=\"enum crossterm::style::Colored\">Colored</a>","synthetic":true,"types":["crossterm::style::types::colored::Colored"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/style/struct.Colors.html\" title=\"struct crossterm::style::Colors\">Colors</a>","synthetic":true,"types":["crossterm::style::types::colors::Colors"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/style/struct.SetForegroundColor.html\" title=\"struct crossterm::style::SetForegroundColor\">SetForegroundColor</a>","synthetic":true,"types":["crossterm::style::SetForegroundColor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/style/struct.SetBackgroundColor.html\" title=\"struct crossterm::style::SetBackgroundColor\">SetBackgroundColor</a>","synthetic":true,"types":["crossterm::style::SetBackgroundColor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/style/struct.SetColors.html\" title=\"struct crossterm::style::SetColors\">SetColors</a>","synthetic":true,"types":["crossterm::style::SetColors"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/style/struct.SetAttribute.html\" title=\"struct crossterm::style::SetAttribute\">SetAttribute</a>","synthetic":true,"types":["crossterm::style::SetAttribute"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/style/struct.SetAttributes.html\" title=\"struct crossterm::style::SetAttributes\">SetAttributes</a>","synthetic":true,"types":["crossterm::style::SetAttributes"]},{"text":"impl&lt;D&gt; Freeze for <a class=\"struct\" href=\"crossterm/style/struct.PrintStyledContent.html\" title=\"struct crossterm::style::PrintStyledContent\">PrintStyledContent</a>&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["crossterm::style::PrintStyledContent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/style/struct.ResetColor.html\" title=\"struct crossterm::style::ResetColor\">ResetColor</a>","synthetic":true,"types":["crossterm::style::ResetColor"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossterm/style/struct.Print.html\" title=\"struct crossterm::style::Print\">Print</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["crossterm::style::Print"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/terminal/struct.DisableLineWrap.html\" title=\"struct crossterm::terminal::DisableLineWrap\">DisableLineWrap</a>","synthetic":true,"types":["crossterm::terminal::DisableLineWrap"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/terminal/struct.EnableLineWrap.html\" title=\"struct crossterm::terminal::EnableLineWrap\">EnableLineWrap</a>","synthetic":true,"types":["crossterm::terminal::EnableLineWrap"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/terminal/struct.EnterAlternateScreen.html\" title=\"struct crossterm::terminal::EnterAlternateScreen\">EnterAlternateScreen</a>","synthetic":true,"types":["crossterm::terminal::EnterAlternateScreen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/terminal/struct.LeaveAlternateScreen.html\" title=\"struct crossterm::terminal::LeaveAlternateScreen\">LeaveAlternateScreen</a>","synthetic":true,"types":["crossterm::terminal::LeaveAlternateScreen"]},{"text":"impl Freeze for <a class=\"enum\" href=\"crossterm/terminal/enum.ClearType.html\" title=\"enum crossterm::terminal::ClearType\">ClearType</a>","synthetic":true,"types":["crossterm::terminal::ClearType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/terminal/struct.ScrollUp.html\" title=\"struct crossterm::terminal::ScrollUp\">ScrollUp</a>","synthetic":true,"types":["crossterm::terminal::ScrollUp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/terminal/struct.ScrollDown.html\" title=\"struct crossterm::terminal::ScrollDown\">ScrollDown</a>","synthetic":true,"types":["crossterm::terminal::ScrollDown"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/terminal/struct.Clear.html\" title=\"struct crossterm::terminal::Clear\">Clear</a>","synthetic":true,"types":["crossterm::terminal::Clear"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/terminal/struct.SetSize.html\" title=\"struct crossterm::terminal::SetSize\">SetSize</a>","synthetic":true,"types":["crossterm::terminal::SetSize"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossterm/terminal/struct.SetTitle.html\" title=\"struct crossterm::terminal::SetTitle\">SetTitle</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["crossterm::terminal::SetTitle"]}];
implementors["crypto_common"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"crypto_common/struct.InvalidLength.html\" title=\"struct crypto_common::InvalidLength\">InvalidLength</a>","synthetic":true,"types":["crypto_common::InvalidLength"]}];
implementors["crypto_mac"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"crypto_mac/struct.MacError.html\" title=\"struct crypto_mac::MacError\">MacError</a>","synthetic":true,"types":["crypto_mac::errors::MacError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto_mac/struct.InvalidKeyLength.html\" title=\"struct crypto_mac::InvalidKeyLength\">InvalidKeyLength</a>","synthetic":true,"types":["crypto_mac::errors::InvalidKeyLength"]},{"text":"impl&lt;M&gt; Freeze for <a class=\"struct\" href=\"crypto_mac/struct.Output.html\" title=\"struct crypto_mac::Output\">Output</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;M as <a class=\"trait\" href=\"crypto_mac/trait.Mac.html\" title=\"trait crypto_mac::Mac\">Mac</a>&gt;::<a class=\"associatedtype\" href=\"crypto_mac/trait.Mac.html#associatedtype.OutputSize\" title=\"type crypto_mac::Mac::OutputSize\">OutputSize</a> as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.61.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["crypto_mac::Output"]}];
implementors["ctr"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"ctr/flavors/struct.Ctr128BE.html\" title=\"struct ctr::flavors::Ctr128BE\">Ctr128BE</a>","synthetic":true,"types":["ctr::flavors::ctr128::Ctr128BE"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ctr/flavors/struct.Ctr128LE.html\" title=\"struct ctr::flavors::Ctr128LE\">Ctr128LE</a>","synthetic":true,"types":["ctr::flavors::ctr128::Ctr128LE"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ctr/flavors/struct.Ctr32BE.html\" title=\"struct ctr::flavors::Ctr32BE\">Ctr32BE</a>","synthetic":true,"types":["ctr::flavors::ctr32::Ctr32BE"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ctr/flavors/struct.Ctr32LE.html\" title=\"struct ctr::flavors::Ctr32LE\">Ctr32LE</a>","synthetic":true,"types":["ctr::flavors::ctr32::Ctr32LE"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ctr/flavors/struct.Ctr64BE.html\" title=\"struct ctr::flavors::Ctr64BE\">Ctr64BE</a>","synthetic":true,"types":["ctr::flavors::ctr64::Ctr64BE"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ctr/flavors/struct.Ctr64LE.html\" title=\"struct ctr::flavors::Ctr64LE\">Ctr64LE</a>","synthetic":true,"types":["ctr::flavors::ctr64::Ctr64LE"]},{"text":"impl&lt;B, F&gt; Freeze for <a class=\"struct\" href=\"ctr/struct.Ctr.html\" title=\"struct ctr::Ctr\">Ctr</a>&lt;B, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;B as <a class=\"trait\" href=\"cipher/block/trait.BlockCipher.html\" title=\"trait cipher::block::BlockCipher\">BlockCipher</a>&gt;::<a class=\"associatedtype\" href=\"cipher/block/trait.BlockCipher.html#associatedtype.BlockSize\" title=\"type cipher::block::BlockCipher::BlockSize\">BlockSize</a> as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.61.0/core/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as <a class=\"trait\" href=\"ctr/flavors/trait.CtrFlavor.html\" title=\"trait ctr::flavors::CtrFlavor\">CtrFlavor</a>&lt;&lt;B as <a class=\"trait\" href=\"cipher/block/trait.BlockCipher.html\" title=\"trait cipher::block::BlockCipher\">BlockCipher</a>&gt;::<a class=\"associatedtype\" href=\"cipher/block/trait.BlockCipher.html#associatedtype.BlockSize\" title=\"type cipher::block::BlockCipher::BlockSize\">BlockSize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"ctr/flavors/trait.CtrFlavor.html#associatedtype.Nonce\" title=\"type ctr::flavors::CtrFlavor::Nonce\">Nonce</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["ctr::Ctr"]}];
implementors["curve25519_dalek"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"curve25519_dalek/scalar/struct.Scalar.html\" title=\"struct curve25519_dalek::scalar::Scalar\">Scalar</a>","synthetic":true,"types":["curve25519_dalek::scalar::Scalar"]},{"text":"impl Freeze for <a class=\"struct\" href=\"curve25519_dalek/montgomery/struct.MontgomeryPoint.html\" title=\"struct curve25519_dalek::montgomery::MontgomeryPoint\">MontgomeryPoint</a>","synthetic":true,"types":["curve25519_dalek::montgomery::MontgomeryPoint"]},{"text":"impl Freeze for <a class=\"struct\" href=\"curve25519_dalek/edwards/struct.CompressedEdwardsY.html\" title=\"struct curve25519_dalek::edwards::CompressedEdwardsY\">CompressedEdwardsY</a>","synthetic":true,"types":["curve25519_dalek::edwards::CompressedEdwardsY"]},{"text":"impl Freeze for <a class=\"struct\" href=\"curve25519_dalek/edwards/struct.EdwardsPoint.html\" title=\"struct curve25519_dalek::edwards::EdwardsPoint\">EdwardsPoint</a>","synthetic":true,"types":["curve25519_dalek::edwards::EdwardsPoint"]},{"text":"impl Freeze for <a class=\"struct\" href=\"curve25519_dalek/edwards/struct.VartimeEdwardsPrecomputation.html\" title=\"struct curve25519_dalek::edwards::VartimeEdwardsPrecomputation\">VartimeEdwardsPrecomputation</a>","synthetic":true,"types":["curve25519_dalek::edwards::VartimeEdwardsPrecomputation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"curve25519_dalek/edwards/struct.EdwardsBasepointTableRadix16.html\" title=\"struct curve25519_dalek::edwards::EdwardsBasepointTableRadix16\">EdwardsBasepointTableRadix16</a>","synthetic":true,"types":["curve25519_dalek::edwards::EdwardsBasepointTableRadix16"]},{"text":"impl Freeze for <a class=\"struct\" href=\"curve25519_dalek/edwards/struct.EdwardsBasepointTableRadix32.html\" title=\"struct curve25519_dalek::edwards::EdwardsBasepointTableRadix32\">EdwardsBasepointTableRadix32</a>","synthetic":true,"types":["curve25519_dalek::edwards::EdwardsBasepointTableRadix32"]},{"text":"impl Freeze for <a class=\"struct\" href=\"curve25519_dalek/edwards/struct.EdwardsBasepointTableRadix64.html\" title=\"struct curve25519_dalek::edwards::EdwardsBasepointTableRadix64\">EdwardsBasepointTableRadix64</a>","synthetic":true,"types":["curve25519_dalek::edwards::EdwardsBasepointTableRadix64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"curve25519_dalek/edwards/struct.EdwardsBasepointTableRadix128.html\" title=\"struct curve25519_dalek::edwards::EdwardsBasepointTableRadix128\">EdwardsBasepointTableRadix128</a>","synthetic":true,"types":["curve25519_dalek::edwards::EdwardsBasepointTableRadix128"]},{"text":"impl Freeze for <a class=\"struct\" href=\"curve25519_dalek/edwards/struct.EdwardsBasepointTableRadix256.html\" title=\"struct curve25519_dalek::edwards::EdwardsBasepointTableRadix256\">EdwardsBasepointTableRadix256</a>","synthetic":true,"types":["curve25519_dalek::edwards::EdwardsBasepointTableRadix256"]},{"text":"impl Freeze for <a class=\"struct\" href=\"curve25519_dalek/edwards/struct.EdwardsBasepointTable.html\" title=\"struct curve25519_dalek::edwards::EdwardsBasepointTable\">EdwardsBasepointTable</a>","synthetic":true,"types":["curve25519_dalek::edwards::EdwardsBasepointTable"]},{"text":"impl Freeze for <a class=\"struct\" href=\"curve25519_dalek/ristretto/struct.CompressedRistretto.html\" title=\"struct curve25519_dalek::ristretto::CompressedRistretto\">CompressedRistretto</a>","synthetic":true,"types":["curve25519_dalek::ristretto::CompressedRistretto"]},{"text":"impl Freeze for <a class=\"struct\" href=\"curve25519_dalek/ristretto/struct.RistrettoPoint.html\" title=\"struct curve25519_dalek::ristretto::RistrettoPoint\">RistrettoPoint</a>","synthetic":true,"types":["curve25519_dalek::ristretto::RistrettoPoint"]},{"text":"impl Freeze for <a class=\"struct\" href=\"curve25519_dalek/ristretto/struct.VartimeRistrettoPrecomputation.html\" title=\"struct curve25519_dalek::ristretto::VartimeRistrettoPrecomputation\">VartimeRistrettoPrecomputation</a>","synthetic":true,"types":["curve25519_dalek::ristretto::VartimeRistrettoPrecomputation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"curve25519_dalek/ristretto/struct.RistrettoBasepointTable.html\" title=\"struct curve25519_dalek::ristretto::RistrettoBasepointTable\">RistrettoBasepointTable</a>","synthetic":true,"types":["curve25519_dalek::ristretto::RistrettoBasepointTable"]}];
implementors["curve25519_dalek_fiat"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"curve25519_dalek_fiat/scalar/struct.Scalar.html\" title=\"struct curve25519_dalek_fiat::scalar::Scalar\">Scalar</a>","synthetic":true,"types":["curve25519_dalek_fiat::scalar::Scalar"]},{"text":"impl Freeze for <a class=\"struct\" href=\"curve25519_dalek_fiat/montgomery/struct.MontgomeryPoint.html\" title=\"struct curve25519_dalek_fiat::montgomery::MontgomeryPoint\">MontgomeryPoint</a>","synthetic":true,"types":["curve25519_dalek_fiat::montgomery::MontgomeryPoint"]},{"text":"impl Freeze for <a class=\"struct\" href=\"curve25519_dalek_fiat/edwards/struct.CompressedEdwardsY.html\" title=\"struct curve25519_dalek_fiat::edwards::CompressedEdwardsY\">CompressedEdwardsY</a>","synthetic":true,"types":["curve25519_dalek_fiat::edwards::CompressedEdwardsY"]},{"text":"impl Freeze for <a class=\"struct\" href=\"curve25519_dalek_fiat/edwards/struct.EdwardsPoint.html\" title=\"struct curve25519_dalek_fiat::edwards::EdwardsPoint\">EdwardsPoint</a>","synthetic":true,"types":["curve25519_dalek_fiat::edwards::EdwardsPoint"]},{"text":"impl Freeze for <a class=\"struct\" href=\"curve25519_dalek_fiat/edwards/struct.VartimeEdwardsPrecomputation.html\" title=\"struct curve25519_dalek_fiat::edwards::VartimeEdwardsPrecomputation\">VartimeEdwardsPrecomputation</a>","synthetic":true,"types":["curve25519_dalek_fiat::edwards::VartimeEdwardsPrecomputation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"curve25519_dalek_fiat/edwards/struct.EdwardsBasepointTable.html\" title=\"struct curve25519_dalek_fiat::edwards::EdwardsBasepointTable\">EdwardsBasepointTable</a>","synthetic":true,"types":["curve25519_dalek_fiat::edwards::EdwardsBasepointTable"]},{"text":"impl Freeze for <a class=\"struct\" href=\"curve25519_dalek_fiat/ristretto/struct.CompressedRistretto.html\" title=\"struct curve25519_dalek_fiat::ristretto::CompressedRistretto\">CompressedRistretto</a>","synthetic":true,"types":["curve25519_dalek_fiat::ristretto::CompressedRistretto"]},{"text":"impl Freeze for <a class=\"struct\" href=\"curve25519_dalek_fiat/ristretto/struct.RistrettoPoint.html\" title=\"struct curve25519_dalek_fiat::ristretto::RistrettoPoint\">RistrettoPoint</a>","synthetic":true,"types":["curve25519_dalek_fiat::ristretto::RistrettoPoint"]},{"text":"impl Freeze for <a class=\"struct\" href=\"curve25519_dalek_fiat/ristretto/struct.VartimeRistrettoPrecomputation.html\" title=\"struct curve25519_dalek_fiat::ristretto::VartimeRistrettoPrecomputation\">VartimeRistrettoPrecomputation</a>","synthetic":true,"types":["curve25519_dalek_fiat::ristretto::VartimeRistrettoPrecomputation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"curve25519_dalek_fiat/ristretto/struct.RistrettoBasepointTable.html\" title=\"struct curve25519_dalek_fiat::ristretto::RistrettoBasepointTable\">RistrettoBasepointTable</a>","synthetic":true,"types":["curve25519_dalek_fiat::ristretto::RistrettoBasepointTable"]}];
implementors["dashmap"] = [{"text":"impl&lt;K, V, S&gt; Freeze for <a class=\"struct\" href=\"dashmap/iter/struct.OwningIter.html\" title=\"struct dashmap::iter::OwningIter\">OwningIter</a>&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["dashmap::iter::OwningIter"]},{"text":"impl&lt;'a, K, V, S, M&gt; Freeze for <a class=\"struct\" href=\"dashmap/iter/struct.Iter.html\" title=\"struct dashmap::iter::Iter\">Iter</a>&lt;'a, K, V, S, M&gt;","synthetic":true,"types":["dashmap::iter::Iter"]},{"text":"impl&lt;'a, K, V, S, M&gt; Freeze for <a class=\"struct\" href=\"dashmap/iter/struct.IterMut.html\" title=\"struct dashmap::iter::IterMut\">IterMut</a>&lt;'a, K, V, S, M&gt;","synthetic":true,"types":["dashmap::iter::IterMut"]},{"text":"impl&lt;K, S&gt; Freeze for <a class=\"struct\" href=\"dashmap/iter_set/struct.OwningIter.html\" title=\"struct dashmap::iter_set::OwningIter\">OwningIter</a>&lt;K, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["dashmap::iter_set::OwningIter"]},{"text":"impl&lt;'a, K, S, M&gt; Freeze for <a class=\"struct\" href=\"dashmap/iter_set/struct.Iter.html\" title=\"struct dashmap::iter_set::Iter\">Iter</a>&lt;'a, K, S, M&gt;","synthetic":true,"types":["dashmap::iter_set::Iter"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"enum\" href=\"dashmap/mapref/entry/enum.Entry.html\" title=\"enum dashmap::mapref::entry::Entry\">Entry</a>&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["dashmap::mapref::entry::Entry"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"dashmap/mapref/entry/struct.VacantEntry.html\" title=\"struct dashmap::mapref::entry::VacantEntry\">VacantEntry</a>&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["dashmap::mapref::entry::VacantEntry"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"dashmap/mapref/entry/struct.OccupiedEntry.html\" title=\"struct dashmap::mapref::entry::OccupiedEntry\">OccupiedEntry</a>&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["dashmap::mapref::entry::OccupiedEntry"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"dashmap/mapref/multiple/struct.RefMulti.html\" title=\"struct dashmap::mapref::multiple::RefMulti\">RefMulti</a>&lt;'a, K, V, S&gt;","synthetic":true,"types":["dashmap::mapref::multiple::RefMulti"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"dashmap/mapref/multiple/struct.RefMutMulti.html\" title=\"struct dashmap::mapref::multiple::RefMutMulti\">RefMutMulti</a>&lt;'a, K, V, S&gt;","synthetic":true,"types":["dashmap::mapref::multiple::RefMutMulti"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"dashmap/mapref/one/struct.Ref.html\" title=\"struct dashmap::mapref::one::Ref\">Ref</a>&lt;'a, K, V, S&gt;","synthetic":true,"types":["dashmap::mapref::one::Ref"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"dashmap/mapref/one/struct.RefMut.html\" title=\"struct dashmap::mapref::one::RefMut\">RefMut</a>&lt;'a, K, V, S&gt;","synthetic":true,"types":["dashmap::mapref::one::RefMut"]},{"text":"impl&lt;'a, K, V, T, S&gt; Freeze for <a class=\"struct\" href=\"dashmap/mapref/one/struct.MappedRef.html\" title=\"struct dashmap::mapref::one::MappedRef\">MappedRef</a>&lt;'a, K, V, T, S&gt;","synthetic":true,"types":["dashmap::mapref::one::MappedRef"]},{"text":"impl&lt;'a, K, V, T, S&gt; Freeze for <a class=\"struct\" href=\"dashmap/mapref/one/struct.MappedRefMut.html\" title=\"struct dashmap::mapref::one::MappedRefMut\">MappedRefMut</a>&lt;'a, K, V, T, S&gt;","synthetic":true,"types":["dashmap::mapref::one::MappedRefMut"]},{"text":"impl&lt;K, V, S&gt; Freeze for <a class=\"struct\" href=\"dashmap/struct.ReadOnlyView.html\" title=\"struct dashmap::ReadOnlyView\">ReadOnlyView</a>&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["dashmap::read_only::ReadOnlyView"]},{"text":"impl&lt;K, S&gt; Freeze for <a class=\"struct\" href=\"dashmap/struct.DashSet.html\" title=\"struct dashmap::DashSet\">DashSet</a>&lt;K, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["dashmap::set::DashSet"]},{"text":"impl&lt;'a, K, S&gt; Freeze for <a class=\"struct\" href=\"dashmap/setref/multiple/struct.RefMulti.html\" title=\"struct dashmap::setref::multiple::RefMulti\">RefMulti</a>&lt;'a, K, S&gt;","synthetic":true,"types":["dashmap::setref::multiple::RefMulti"]},{"text":"impl&lt;'a, K, S&gt; Freeze for <a class=\"struct\" href=\"dashmap/setref/one/struct.Ref.html\" title=\"struct dashmap::setref::one::Ref\">Ref</a>&lt;'a, K, S&gt;","synthetic":true,"types":["dashmap::setref::one::Ref"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"enum\" href=\"dashmap/try_result/enum.TryResult.html\" title=\"enum dashmap::try_result::TryResult\">TryResult</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["dashmap::try_result::TryResult"]},{"text":"impl&lt;K, V, S&gt; Freeze for <a class=\"struct\" href=\"dashmap/struct.DashMap.html\" title=\"struct dashmap::DashMap\">DashMap</a>&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["dashmap::DashMap"]}];
implementors["deunicode"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"deunicode/struct.AsciiCharsIter.html\" title=\"struct deunicode::AsciiCharsIter\">AsciiCharsIter</a>&lt;'a&gt;","synthetic":true,"types":["deunicode::AsciiCharsIter"]}];
implementors["difference"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"difference/enum.Difference.html\" title=\"enum difference::Difference\">Difference</a>","synthetic":true,"types":["difference::Difference"]},{"text":"impl Freeze for <a class=\"struct\" href=\"difference/struct.Changeset.html\" title=\"struct difference::Changeset\">Changeset</a>","synthetic":true,"types":["difference::Changeset"]}];
implementors["digest"] = [{"text":"impl&lt;T, OutSize&gt; Freeze for <a class=\"struct\" href=\"digest/core_api/struct.CtVariableCoreWrapper.html\" title=\"struct digest::core_api::CtVariableCoreWrapper\">CtVariableCoreWrapper</a>&lt;T, OutSize&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["digest::core_api::ct_variable::CtVariableCoreWrapper"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"digest/core_api/struct.RtVariableCoreWrapper.html\" title=\"struct digest::core_api::RtVariableCoreWrapper\">RtVariableCoreWrapper</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as <a class=\"trait\" href=\"digest/core_api/trait.BlockSizeUser.html\" title=\"trait digest::core_api::BlockSizeUser\">BlockSizeUser</a>&gt;::<a class=\"associatedtype\" href=\"digest/core_api/trait.BlockSizeUser.html#associatedtype.BlockSize\" title=\"type digest::core_api::BlockSizeUser::BlockSize\">BlockSize</a> as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.61.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["digest::core_api::rt_variable::RtVariableCoreWrapper"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"digest/core_api/struct.CoreWrapper.html\" title=\"struct digest::core_api::CoreWrapper\">CoreWrapper</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as <a class=\"trait\" href=\"digest/core_api/trait.BlockSizeUser.html\" title=\"trait digest::core_api::BlockSizeUser\">BlockSizeUser</a>&gt;::<a class=\"associatedtype\" href=\"digest/core_api/trait.BlockSizeUser.html#associatedtype.BlockSize\" title=\"type digest::core_api::BlockSizeUser::BlockSize\">BlockSize</a> as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.61.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["digest::core_api::wrapper::CoreWrapper"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"digest/core_api/struct.XofReaderCoreWrapper.html\" title=\"struct digest::core_api::XofReaderCoreWrapper\">XofReaderCoreWrapper</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as <a class=\"trait\" href=\"digest/core_api/trait.BlockSizeUser.html\" title=\"trait digest::core_api::BlockSizeUser\">BlockSizeUser</a>&gt;::<a class=\"associatedtype\" href=\"digest/core_api/trait.BlockSizeUser.html#associatedtype.BlockSize\" title=\"type digest::core_api::BlockSizeUser::BlockSize\">BlockSize</a> as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.61.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["digest::core_api::xof_reader::XofReaderCoreWrapper"]},{"text":"impl Freeze for <a class=\"enum\" href=\"digest/core_api/enum.TruncSide.html\" title=\"enum digest::core_api::TruncSide\">TruncSide</a>","synthetic":true,"types":["digest::core_api::TruncSide"]},{"text":"impl Freeze for <a class=\"struct\" href=\"digest/struct.InvalidOutputSize.html\" title=\"struct digest::InvalidOutputSize\">InvalidOutputSize</a>","synthetic":true,"types":["digest::InvalidOutputSize"]},{"text":"impl Freeze for <a class=\"struct\" href=\"digest/struct.InvalidBufferSize.html\" title=\"struct digest::InvalidBufferSize\">InvalidBufferSize</a>","synthetic":true,"types":["digest::InvalidBufferSize"]}];
implementors["directories"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"directories/struct.BaseDirs.html\" title=\"struct directories::BaseDirs\">BaseDirs</a>","synthetic":true,"types":["directories::BaseDirs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"directories/struct.UserDirs.html\" title=\"struct directories::UserDirs\">UserDirs</a>","synthetic":true,"types":["directories::UserDirs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"directories/struct.ProjectDirs.html\" title=\"struct directories::ProjectDirs\">ProjectDirs</a>","synthetic":true,"types":["directories::ProjectDirs"]}];
implementors["ed25519"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"ed25519/struct.Signature.html\" title=\"struct ed25519::Signature\">Signature</a>","synthetic":true,"types":["ed25519::Signature"]}];
implementors["ed25519_dalek"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"ed25519_dalek/struct.Keypair.html\" title=\"struct ed25519_dalek::Keypair\">Keypair</a>","synthetic":true,"types":["ed25519_dalek::keypair::Keypair"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ed25519_dalek/struct.PublicKey.html\" title=\"struct ed25519_dalek::PublicKey\">PublicKey</a>","synthetic":true,"types":["ed25519_dalek::public::PublicKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ed25519_dalek/struct.SecretKey.html\" title=\"struct ed25519_dalek::SecretKey\">SecretKey</a>","synthetic":true,"types":["ed25519_dalek::secret::SecretKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ed25519_dalek/struct.ExpandedSecretKey.html\" title=\"struct ed25519_dalek::ExpandedSecretKey\">ExpandedSecretKey</a>","synthetic":true,"types":["ed25519_dalek::secret::ExpandedSecretKey"]}];
implementors["ed25519_dalek_fiat"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"ed25519_dalek_fiat/struct.Keypair.html\" title=\"struct ed25519_dalek_fiat::Keypair\">Keypair</a>","synthetic":true,"types":["ed25519_dalek_fiat::keypair::Keypair"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ed25519_dalek_fiat/struct.PublicKey.html\" title=\"struct ed25519_dalek_fiat::PublicKey\">PublicKey</a>","synthetic":true,"types":["ed25519_dalek_fiat::public::PublicKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ed25519_dalek_fiat/struct.SecretKey.html\" title=\"struct ed25519_dalek_fiat::SecretKey\">SecretKey</a>","synthetic":true,"types":["ed25519_dalek_fiat::secret::SecretKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ed25519_dalek_fiat/struct.ExpandedSecretKey.html\" title=\"struct ed25519_dalek_fiat::ExpandedSecretKey\">ExpandedSecretKey</a>","synthetic":true,"types":["ed25519_dalek_fiat::secret::ExpandedSecretKey"]}];
implementors["either"] = [{"text":"impl&lt;L, R&gt; Freeze for <a class=\"enum\" href=\"either/enum.Either.html\" title=\"enum either::Either\">Either</a>&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["either::Either"]}];
implementors["encoding_rs"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"encoding_rs/mem/enum.Latin1Bidi.html\" title=\"enum encoding_rs::mem::Latin1Bidi\">Latin1Bidi</a>","synthetic":true,"types":["encoding_rs::mem::Latin1Bidi"]},{"text":"impl Freeze for <a class=\"struct\" href=\"encoding_rs/struct.Encoding.html\" title=\"struct encoding_rs::Encoding\">Encoding</a>","synthetic":true,"types":["encoding_rs::Encoding"]},{"text":"impl Freeze for <a class=\"enum\" href=\"encoding_rs/enum.CoderResult.html\" title=\"enum encoding_rs::CoderResult\">CoderResult</a>","synthetic":true,"types":["encoding_rs::CoderResult"]},{"text":"impl Freeze for <a class=\"enum\" href=\"encoding_rs/enum.DecoderResult.html\" title=\"enum encoding_rs::DecoderResult\">DecoderResult</a>","synthetic":true,"types":["encoding_rs::DecoderResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"encoding_rs/struct.Decoder.html\" title=\"struct encoding_rs::Decoder\">Decoder</a>","synthetic":true,"types":["encoding_rs::Decoder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"encoding_rs/enum.EncoderResult.html\" title=\"enum encoding_rs::EncoderResult\">EncoderResult</a>","synthetic":true,"types":["encoding_rs::EncoderResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"encoding_rs/struct.Encoder.html\" title=\"struct encoding_rs::Encoder\">Encoder</a>","synthetic":true,"types":["encoding_rs::Encoder"]}];
implementors["erased_serde"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"erased_serde/struct.Error.html\" title=\"struct erased_serde::Error\">Error</a>","synthetic":true,"types":["erased_serde::error::Error"]}];
implementors["ethnum"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"ethnum/prelude/struct.I256.html\" title=\"struct ethnum::prelude::I256\">I256</a>","synthetic":true,"types":["ethnum::int::I256"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ethnum/prelude/struct.U256.html\" title=\"struct ethnum::prelude::U256\">U256</a>","synthetic":true,"types":["ethnum::uint::U256"]}];
implementors["fail"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"fail/struct.FailScenario.html\" title=\"struct fail::FailScenario\">FailScenario</a>&lt;'a&gt;","synthetic":true,"types":["fail::FailScenario"]}];
implementors["fastrand"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"fastrand/struct.Rng.html\" title=\"struct fastrand::Rng\">Rng</a>","synthetic":true,"types":["fastrand::Rng"]}];
implementors["fixedbitset"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"fixedbitset/struct.FixedBitSet.html\" title=\"struct fixedbitset::FixedBitSet\">FixedBitSet</a>","synthetic":true,"types":["fixedbitset::FixedBitSet"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"fixedbitset/struct.Difference.html\" title=\"struct fixedbitset::Difference\">Difference</a>&lt;'a&gt;","synthetic":true,"types":["fixedbitset::Difference"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"fixedbitset/struct.SymmetricDifference.html\" title=\"struct fixedbitset::SymmetricDifference\">SymmetricDifference</a>&lt;'a&gt;","synthetic":true,"types":["fixedbitset::SymmetricDifference"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"fixedbitset/struct.Intersection.html\" title=\"struct fixedbitset::Intersection\">Intersection</a>&lt;'a&gt;","synthetic":true,"types":["fixedbitset::Intersection"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"fixedbitset/struct.Union.html\" title=\"struct fixedbitset::Union\">Union</a>&lt;'a&gt;","synthetic":true,"types":["fixedbitset::Union"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"fixedbitset/struct.Ones.html\" title=\"struct fixedbitset::Ones\">Ones</a>&lt;'a&gt;","synthetic":true,"types":["fixedbitset::Ones"]}];
implementors["fnv"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"fnv/struct.FnvHasher.html\" title=\"struct fnv::FnvHasher\">FnvHasher</a>","synthetic":true,"types":["fnv::FnvHasher"]}];
implementors["foreign_types_shared"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"foreign_types_shared/struct.Opaque.html\" title=\"struct foreign_types_shared::Opaque\">Opaque</a>","synthetic":true,"types":["foreign_types_shared::Opaque"]}];
implementors["form_urlencoded"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"form_urlencoded/struct.Parse.html\" title=\"struct form_urlencoded::Parse\">Parse</a>&lt;'a&gt;","synthetic":true,"types":["form_urlencoded::Parse"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"form_urlencoded/struct.ParseIntoOwned.html\" title=\"struct form_urlencoded::ParseIntoOwned\">ParseIntoOwned</a>&lt;'a&gt;","synthetic":true,"types":["form_urlencoded::ParseIntoOwned"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"form_urlencoded/struct.ByteSerialize.html\" title=\"struct form_urlencoded::ByteSerialize\">ByteSerialize</a>&lt;'a&gt;","synthetic":true,"types":["form_urlencoded::ByteSerialize"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"form_urlencoded/struct.Serializer.html\" title=\"struct form_urlencoded::Serializer\">Serializer</a>&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["form_urlencoded::Serializer"]}];
implementors["framework"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"framework/release/struct.ReleaseOptions.html\" title=\"struct framework::release::ReleaseOptions\">ReleaseOptions</a>","synthetic":true,"types":["framework::release::ReleaseOptions"]}];
implementors["futures_channel"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_channel/mpsc/struct.Sender.html\" title=\"struct futures_channel::mpsc::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["futures_channel::mpsc::Sender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_channel/mpsc/struct.UnboundedSender.html\" title=\"struct futures_channel::mpsc::UnboundedSender\">UnboundedSender</a>&lt;T&gt;","synthetic":true,"types":["futures_channel::mpsc::UnboundedSender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_channel/mpsc/struct.Receiver.html\" title=\"struct futures_channel::mpsc::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["futures_channel::mpsc::Receiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_channel/mpsc/struct.UnboundedReceiver.html\" title=\"struct futures_channel::mpsc::UnboundedReceiver\">UnboundedReceiver</a>&lt;T&gt;","synthetic":true,"types":["futures_channel::mpsc::UnboundedReceiver"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_channel/mpsc/struct.SendError.html\" title=\"struct futures_channel::mpsc::SendError\">SendError</a>","synthetic":true,"types":["futures_channel::mpsc::SendError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_channel/mpsc/struct.TrySendError.html\" title=\"struct futures_channel::mpsc::TrySendError\">TrySendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_channel::mpsc::TrySendError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_channel/mpsc/struct.TryRecvError.html\" title=\"struct futures_channel::mpsc::TryRecvError\">TryRecvError</a>","synthetic":true,"types":["futures_channel::mpsc::TryRecvError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_channel/oneshot/struct.Receiver.html\" title=\"struct futures_channel::oneshot::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["futures_channel::oneshot::Receiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_channel/oneshot/struct.Sender.html\" title=\"struct futures_channel::oneshot::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["futures_channel::oneshot::Sender"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"futures_channel/oneshot/struct.Cancellation.html\" title=\"struct futures_channel::oneshot::Cancellation\">Cancellation</a>&lt;'a, T&gt;","synthetic":true,"types":["futures_channel::oneshot::Cancellation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_channel/oneshot/struct.Canceled.html\" title=\"struct futures_channel::oneshot::Canceled\">Canceled</a>","synthetic":true,"types":["futures_channel::oneshot::Canceled"]}];
implementors["futures_executor"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"futures_executor/struct.LocalPool.html\" title=\"struct futures_executor::LocalPool\">LocalPool</a>","synthetic":true,"types":["futures_executor::local_pool::LocalPool"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_executor/struct.LocalSpawner.html\" title=\"struct futures_executor::LocalSpawner\">LocalSpawner</a>","synthetic":true,"types":["futures_executor::local_pool::LocalSpawner"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures_executor/struct.BlockingStream.html\" title=\"struct futures_executor::BlockingStream\">BlockingStream</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_executor::local_pool::BlockingStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_executor/struct.Enter.html\" title=\"struct futures_executor::Enter\">Enter</a>","synthetic":true,"types":["futures_executor::enter::Enter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_executor/struct.EnterError.html\" title=\"struct futures_executor::EnterError\">EnterError</a>","synthetic":true,"types":["futures_executor::enter::EnterError"]}];
implementors["futures_task"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"futures_task/struct.SpawnError.html\" title=\"struct futures_task::SpawnError\">SpawnError</a>","synthetic":true,"types":["futures_task::spawn::SpawnError"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"futures_task/struct.WakerRef.html\" title=\"struct futures_task::WakerRef\">WakerRef</a>&lt;'a&gt;","synthetic":true,"types":["futures_task::waker_ref::WakerRef"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"futures_task/struct.LocalFutureObj.html\" title=\"struct futures_task::LocalFutureObj\">LocalFutureObj</a>&lt;'a, T&gt;","synthetic":true,"types":["futures_task::future_obj::LocalFutureObj"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"futures_task/struct.FutureObj.html\" title=\"struct futures_task::FutureObj\">FutureObj</a>&lt;'a, T&gt;","synthetic":true,"types":["futures_task::future_obj::FutureObj"]}];
implementors["futures_util"] = [{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Fuse.html\" title=\"struct futures_util::future::Fuse\">Fuse</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::fuse::Fuse"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.CatchUnwind.html\" title=\"struct futures_util::future::CatchUnwind\">CatchUnwind</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::catch_unwind::CatchUnwind"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.RemoteHandle.html\" title=\"struct futures_util::future::RemoteHandle\">RemoteHandle</a>&lt;T&gt;","synthetic":true,"types":["futures_util::future::future::remote_handle::RemoteHandle"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Remote.html\" title=\"struct futures_util::future::Remote\">Remote</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::remote_handle::Remote"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Shared.html\" title=\"struct futures_util::future::Shared\">Shared</a>&lt;Fut&gt;","synthetic":true,"types":["futures_util::future::future::shared::Shared"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.WeakShared.html\" title=\"struct futures_util::future::WeakShared\">WeakShared</a>&lt;Fut&gt;","synthetic":true,"types":["futures_util::future::future::shared::WeakShared"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Flatten.html\" title=\"struct futures_util::future::Flatten\">Flatten</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::Flatten"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.FlattenStream.html\" title=\"struct futures_util::future::FlattenStream\">FlattenStream</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::FlattenStream"]},{"text":"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Map.html\" title=\"struct futures_util::future::Map\">Map</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::Map"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.IntoStream.html\" title=\"struct futures_util::future::IntoStream\">IntoStream</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::IntoStream"]},{"text":"impl&lt;Fut, T&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.MapInto.html\" title=\"struct futures_util::future::MapInto\">MapInto</a>&lt;Fut, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::MapInto"]},{"text":"impl&lt;Fut1, Fut2, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Then.html\" title=\"struct futures_util::future::Then\">Then</a>&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::Then"]},{"text":"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Inspect.html\" title=\"struct futures_util::future::Inspect\">Inspect</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::Inspect"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.NeverError.html\" title=\"struct futures_util::future::NeverError\">NeverError</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::NeverError"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.UnitError.html\" title=\"struct futures_util::future::UnitError\">UnitError</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::UnitError"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.IntoFuture.html\" title=\"struct futures_util::future::IntoFuture\">IntoFuture</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::into_future::IntoFuture"]},{"text":"impl&lt;Fut1, Fut2&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TryFlatten.html\" title=\"struct futures_util::future::TryFlatten\">TryFlatten</a>&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::TryFlatten"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TryFlattenStream.html\" title=\"struct futures_util::future::TryFlattenStream\">TryFlattenStream</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::TryFlattenStream"]},{"text":"impl&lt;Fut, Si&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.FlattenSink.html\" title=\"struct futures_util::future::FlattenSink\">FlattenSink</a>&lt;Fut, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::FlattenSink"]},{"text":"impl&lt;Fut1, Fut2, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.AndThen.html\" title=\"struct futures_util::future::AndThen\">AndThen</a>&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::AndThen"]},{"text":"impl&lt;Fut1, Fut2, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.OrElse.html\" title=\"struct futures_util::future::OrElse\">OrElse</a>&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::OrElse"]},{"text":"impl&lt;Fut, E&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.ErrInto.html\" title=\"struct futures_util::future::ErrInto\">ErrInto</a>&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::ErrInto"]},{"text":"impl&lt;Fut, E&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.OkInto.html\" title=\"struct futures_util::future::OkInto\">OkInto</a>&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::OkInto"]},{"text":"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.InspectOk.html\" title=\"struct futures_util::future::InspectOk\">InspectOk</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::InspectOk"]},{"text":"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.InspectErr.html\" title=\"struct futures_util::future::InspectErr\">InspectErr</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::InspectErr"]},{"text":"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.MapOk.html\" title=\"struct futures_util::future::MapOk\">MapOk</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::MapOk"]},{"text":"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.MapErr.html\" title=\"struct futures_util::future::MapErr\">MapErr</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::MapErr"]},{"text":"impl&lt;Fut, F, G&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.MapOkOrElse.html\" title=\"struct futures_util::future::MapOkOrElse\">MapOkOrElse</a>&lt;Fut, F, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::MapOkOrElse"]},{"text":"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.UnwrapOrElse.html\" title=\"struct futures_util::future::UnwrapOrElse\">UnwrapOrElse</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::UnwrapOrElse"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Lazy.html\" title=\"struct futures_util::future::Lazy\">Lazy</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::lazy::Lazy"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Pending.html\" title=\"struct futures_util::future::Pending\">Pending</a>&lt;T&gt;","synthetic":true,"types":["futures_util::future::pending::Pending"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"enum\" href=\"futures_util/future/enum.MaybeDone.html\" title=\"enum futures_util::future::MaybeDone\">MaybeDone</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::maybe_done::MaybeDone"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"enum\" href=\"futures_util/future/enum.TryMaybeDone.html\" title=\"enum futures_util::future::TryMaybeDone\">TryMaybeDone</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_maybe_done::TryMaybeDone"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.OptionFuture.html\" title=\"struct futures_util::future::OptionFuture\">OptionFuture</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::option::OptionFuture"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.PollFn.html\" title=\"struct futures_util::future::PollFn\">PollFn</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::poll_fn::PollFn"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.PollImmediate.html\" title=\"struct futures_util::future::PollImmediate\">PollImmediate</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::poll_immediate::PollImmediate"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Ready.html\" title=\"struct futures_util::future::Ready\">Ready</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::ready::Ready"]},{"text":"impl&lt;Fut1, Fut2&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Join.html\" title=\"struct futures_util::future::Join\">Join</a>&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::join::Join"]},{"text":"impl&lt;Fut1, Fut2, Fut3&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Join3.html\" title=\"struct futures_util::future::Join3\">Join3</a>&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::join::Join3"]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Join4.html\" title=\"struct futures_util::future::Join4\">Join4</a>&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::join::Join4"]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Join5.html\" title=\"struct futures_util::future::Join5\">Join5</a>&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut5: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::join::Join5"]},{"text":"impl&lt;F&gt; !Freeze for <a class=\"struct\" href=\"futures_util/future/struct.JoinAll.html\" title=\"struct futures_util::future::JoinAll\">JoinAll</a>&lt;F&gt;","synthetic":true,"types":["futures_util::future::join_all::JoinAll"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Select.html\" title=\"struct futures_util::future::Select\">Select</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::select::Select"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.SelectAll.html\" title=\"struct futures_util::future::SelectAll\">SelectAll</a>&lt;Fut&gt;","synthetic":true,"types":["futures_util::future::select_all::SelectAll"]},{"text":"impl&lt;Fut1, Fut2&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TryJoin.html\" title=\"struct futures_util::future::TryJoin\">TryJoin</a>&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_join::TryJoin"]},{"text":"impl&lt;Fut1, Fut2, Fut3&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TryJoin3.html\" title=\"struct futures_util::future::TryJoin3\">TryJoin3</a>&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_join::TryJoin3"]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TryJoin4.html\" title=\"struct futures_util::future::TryJoin4\">TryJoin4</a>&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_join::TryJoin4"]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TryJoin5.html\" title=\"struct futures_util::future::TryJoin5\">TryJoin5</a>&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut5: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_join::TryJoin5"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TryJoinAll.html\" title=\"struct futures_util::future::TryJoinAll\">TryJoinAll</a>&lt;F&gt;","synthetic":true,"types":["futures_util::future::try_join_all::TryJoinAll"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TrySelect.html\" title=\"struct futures_util::future::TrySelect\">TrySelect</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_select::TrySelect"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.SelectOk.html\" title=\"struct futures_util::future::SelectOk\">SelectOk</a>&lt;Fut&gt;","synthetic":true,"types":["futures_util::future::select_ok::SelectOk"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"enum\" href=\"futures_util/future/enum.Either.html\" title=\"enum futures_util::future::Either\">Either</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::either::Either"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_util/future/struct.AbortHandle.html\" title=\"struct futures_util::future::AbortHandle\">AbortHandle</a>","synthetic":true,"types":["futures_util::abortable::AbortHandle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_util/future/struct.AbortRegistration.html\" title=\"struct futures_util::future::AbortRegistration\">AbortRegistration</a>","synthetic":true,"types":["futures_util::abortable::AbortRegistration"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Abortable.html\" title=\"struct futures_util::future::Abortable\">Abortable</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::abortable::Abortable"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Aborted.html\" title=\"struct futures_util::future::Aborted\">Aborted</a>","synthetic":true,"types":["futures_util::abortable::Aborted"]},{"text":"impl&lt;St1, St2&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Chain.html\" title=\"struct futures_util::stream::Chain\">Chain</a>&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::chain::Chain"]},{"text":"impl&lt;St, C&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Collect.html\" title=\"struct futures_util::stream::Collect\">Collect</a>&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::collect::Collect"]},{"text":"impl&lt;St, FromA, FromB&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Unzip.html\" title=\"struct futures_util::stream::Unzip\">Unzip</a>&lt;St, FromA, FromB&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;FromA: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;FromB: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::unzip::Unzip"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Concat.html\" title=\"struct futures_util::stream::Concat\">Concat</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::concat::Concat"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Cycle.html\" title=\"struct futures_util::stream::Cycle\">Cycle</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::cycle::Cycle"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Enumerate.html\" title=\"struct futures_util::stream::Enumerate\">Enumerate</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::enumerate::Enumerate"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Filter.html\" title=\"struct futures_util::stream::Filter\">Filter</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::filter::Filter"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.FilterMap.html\" title=\"struct futures_util::stream::FilterMap\">FilterMap</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::filter_map::FilterMap"]},{"text":"impl&lt;St, Fut, T, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Fold.html\" title=\"struct futures_util::stream::Fold\">Fold</a>&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::fold::Fold"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.ForEach.html\" title=\"struct futures_util::stream::ForEach\">ForEach</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::for_each::ForEach"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Fuse.html\" title=\"struct futures_util::stream::Fuse\">Fuse</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::fuse::Fuse"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.StreamFuture.html\" title=\"struct futures_util::stream::StreamFuture\">StreamFuture</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::into_future::StreamFuture"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Map.html\" title=\"struct futures_util::stream::Map\">Map</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::map::Map"]},{"text":"impl&lt;'a, St:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Next.html\" title=\"struct futures_util::stream::Next\">Next</a>&lt;'a, St&gt;","synthetic":true,"types":["futures_util::stream::stream::next::Next"]},{"text":"impl&lt;'a, St:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.SelectNextSome.html\" title=\"struct futures_util::stream::SelectNextSome\">SelectNextSome</a>&lt;'a, St&gt;","synthetic":true,"types":["futures_util::stream::stream::select_next_some::SelectNextSome"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Peekable.html\" title=\"struct futures_util::stream::Peekable\">Peekable</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::peek::Peekable"]},{"text":"impl&lt;'a, St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Peek.html\" title=\"struct futures_util::stream::Peek\">Peek</a>&lt;'a, St&gt;","synthetic":true,"types":["futures_util::stream::stream::peek::Peek"]},{"text":"impl&lt;'a, St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.PeekMut.html\" title=\"struct futures_util::stream::PeekMut\">PeekMut</a>&lt;'a, St&gt;","synthetic":true,"types":["futures_util::stream::stream::peek::PeekMut"]},{"text":"impl&lt;'a, St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.NextIf.html\" title=\"struct futures_util::stream::NextIf\">NextIf</a>&lt;'a, St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::peek::NextIf"]},{"text":"impl&lt;'a, St, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.NextIfEq.html\" title=\"struct futures_util::stream::NextIfEq\">NextIfEq</a>&lt;'a, St, T&gt;","synthetic":true,"types":["futures_util::stream::stream::peek::NextIfEq"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Skip.html\" title=\"struct futures_util::stream::Skip\">Skip</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::skip::Skip"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.SkipWhile.html\" title=\"struct futures_util::stream::SkipWhile\">SkipWhile</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::skip_while::SkipWhile"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Take.html\" title=\"struct futures_util::stream::Take\">Take</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::take::Take"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TakeWhile.html\" title=\"struct futures_util::stream::TakeWhile\">TakeWhile</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::take_while::TakeWhile"]},{"text":"impl&lt;St, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TakeUntil.html\" title=\"struct futures_util::stream::TakeUntil\">TakeUntil</a>&lt;St, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.61.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::take_until::TakeUntil"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Then.html\" title=\"struct futures_util::stream::Then\">Then</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::then::Then"]},{"text":"impl&lt;St1, St2&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Zip.html\" title=\"struct futures_util::stream::Zip\">Zip</a>&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St1 as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St2 as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::zip::Zip"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Chunks.html\" title=\"struct futures_util::stream::Chunks\">Chunks</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::chunks::Chunks"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.ReadyChunks.html\" title=\"struct futures_util::stream::ReadyChunks\">ReadyChunks</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::ready_chunks::ReadyChunks"]},{"text":"impl&lt;St, S, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Scan.html\" title=\"struct futures_util::stream::Scan\">Scan</a>&lt;St, S, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::scan::Scan"]},{"text":"impl&lt;St&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.BufferUnordered.html\" title=\"struct futures_util::stream::BufferUnordered\">BufferUnordered</a>&lt;St&gt;","synthetic":true,"types":["futures_util::stream::stream::buffer_unordered::BufferUnordered"]},{"text":"impl&lt;St&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Buffered.html\" title=\"struct futures_util::stream::Buffered\">Buffered</a>&lt;St&gt;","synthetic":true,"types":["futures_util::stream::stream::buffered::Buffered"]},{"text":"impl&lt;St, Fut, F&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.ForEachConcurrent.html\" title=\"struct futures_util::stream::ForEachConcurrent\">ForEachConcurrent</a>&lt;St, Fut, F&gt;","synthetic":true,"types":["futures_util::stream::stream::for_each_concurrent::ForEachConcurrent"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.SplitStream.html\" title=\"struct futures_util::stream::SplitStream\">SplitStream</a>&lt;S&gt;","synthetic":true,"types":["futures_util::stream::stream::split::SplitStream"]},{"text":"impl&lt;S, Item&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.SplitSink.html\" title=\"struct futures_util::stream::SplitSink\">SplitSink</a>&lt;S, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::split::SplitSink"]},{"text":"impl&lt;T, Item&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.ReuniteError.html\" title=\"struct futures_util::stream::ReuniteError\">ReuniteError</a>&lt;T, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::split::ReuniteError"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.CatchUnwind.html\" title=\"struct futures_util::stream::CatchUnwind\">CatchUnwind</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::catch_unwind::CatchUnwind"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Flatten.html\" title=\"struct futures_util::stream::Flatten\">Flatten</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::Flatten"]},{"text":"impl&lt;St, Si&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Forward.html\" title=\"struct futures_util::stream::Forward\">Forward</a>&lt;St, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::Forward"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Inspect.html\" title=\"struct futures_util::stream::Inspect\">Inspect</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::Inspect"]},{"text":"impl&lt;St, U, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.FlatMap.html\" title=\"struct futures_util::stream::FlatMap\">FlatMap</a>&lt;St, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::FlatMap"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.AndThen.html\" title=\"struct futures_util::stream::AndThen\">AndThen</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::and_then::AndThen"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.IntoStream.html\" title=\"struct futures_util::stream::IntoStream\">IntoStream</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::into_stream::IntoStream"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.OrElse.html\" title=\"struct futures_util::stream::OrElse\">OrElse</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::or_else::OrElse"]},{"text":"impl&lt;'a, St:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryNext.html\" title=\"struct futures_util::stream::TryNext\">TryNext</a>&lt;'a, St&gt;","synthetic":true,"types":["futures_util::stream::try_stream::try_next::TryNext"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryForEach.html\" title=\"struct futures_util::stream::TryForEach\">TryForEach</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_for_each::TryForEach"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryFilter.html\" title=\"struct futures_util::stream::TryFilter\">TryFilter</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_filter::TryFilter"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryFilterMap.html\" title=\"struct futures_util::stream::TryFilterMap\">TryFilterMap</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_filter_map::TryFilterMap"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryFlatten.html\" title=\"struct futures_util::stream::TryFlatten\">TryFlatten</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_flatten::TryFlatten"]},{"text":"impl&lt;St, C&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryCollect.html\" title=\"struct futures_util::stream::TryCollect\">TryCollect</a>&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_collect::TryCollect"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryConcat.html\" title=\"struct futures_util::stream::TryConcat\">TryConcat</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_concat::TryConcat"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryChunks.html\" title=\"struct futures_util::stream::TryChunks\">TryChunks</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_chunks::TryChunks"]},{"text":"impl&lt;T, E&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryChunksError.html\" title=\"struct futures_util::stream::TryChunksError\">TryChunksError</a>&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_chunks::TryChunksError"]},{"text":"impl&lt;St, Fut, T, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryFold.html\" title=\"struct futures_util::stream::TryFold\">TryFold</a>&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_fold::TryFold"]},{"text":"impl&lt;T, F, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryUnfold.html\" title=\"struct futures_util::stream::TryUnfold\">TryUnfold</a>&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_unfold::TryUnfold"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TrySkipWhile.html\" title=\"struct futures_util::stream::TrySkipWhile\">TrySkipWhile</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_skip_while::TrySkipWhile"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryTakeWhile.html\" title=\"struct futures_util::stream::TryTakeWhile\">TryTakeWhile</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_take_while::TryTakeWhile"]},{"text":"impl&lt;St&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryBufferUnordered.html\" title=\"struct futures_util::stream::TryBufferUnordered\">TryBufferUnordered</a>&lt;St&gt;","synthetic":true,"types":["futures_util::stream::try_stream::try_buffer_unordered::TryBufferUnordered"]},{"text":"impl&lt;St&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryBuffered.html\" title=\"struct futures_util::stream::TryBuffered\">TryBuffered</a>&lt;St&gt;","synthetic":true,"types":["futures_util::stream::try_stream::try_buffered::TryBuffered"]},{"text":"impl&lt;St, Fut, F&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryForEachConcurrent.html\" title=\"struct futures_util::stream::TryForEachConcurrent\">TryForEachConcurrent</a>&lt;St, Fut, F&gt;","synthetic":true,"types":["futures_util::stream::try_stream::try_for_each_concurrent::TryForEachConcurrent"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.IntoAsyncRead.html\" title=\"struct futures_util::stream::IntoAsyncRead\">IntoAsyncRead</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::into_async_read::IntoAsyncRead"]},{"text":"impl&lt;St, E&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.ErrInto.html\" title=\"struct futures_util::stream::ErrInto\">ErrInto</a>&lt;St, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::ErrInto"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.InspectOk.html\" title=\"struct futures_util::stream::InspectOk\">InspectOk</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::InspectOk"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.InspectErr.html\" title=\"struct futures_util::stream::InspectErr\">InspectErr</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::InspectErr"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.MapOk.html\" title=\"struct futures_util::stream::MapOk\">MapOk</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::MapOk"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.MapErr.html\" title=\"struct futures_util::stream::MapErr\">MapErr</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::MapErr"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Iter.html\" title=\"struct futures_util::stream::Iter\">Iter</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::iter::Iter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Repeat.html\" title=\"struct futures_util::stream::Repeat\">Repeat</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::repeat::Repeat"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.RepeatWith.html\" title=\"struct futures_util::stream::RepeatWith\">RepeatWith</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::repeat_with::RepeatWith"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Empty.html\" title=\"struct futures_util::stream::Empty\">Empty</a>&lt;T&gt;","synthetic":true,"types":["futures_util::stream::empty::Empty"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Once.html\" title=\"struct futures_util::stream::Once\">Once</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::once::Once"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Pending.html\" title=\"struct futures_util::stream::Pending\">Pending</a>&lt;T&gt;","synthetic":true,"types":["futures_util::stream::pending::Pending"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.PollFn.html\" title=\"struct futures_util::stream::PollFn\">PollFn</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::poll_fn::PollFn"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.PollImmediate.html\" title=\"struct futures_util::stream::PollImmediate\">PollImmediate</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::poll_immediate::PollImmediate"]},{"text":"impl&lt;St1, St2&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Select.html\" title=\"struct futures_util::stream::Select\">Select</a>&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::select::Select"]},{"text":"impl Freeze for <a class=\"enum\" href=\"futures_util/stream/enum.PollNext.html\" title=\"enum futures_util::stream::PollNext\">PollNext</a>","synthetic":true,"types":["futures_util::stream::select_with_strategy::PollNext"]},{"text":"impl&lt;St1, St2, Clos, State&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.SelectWithStrategy.html\" title=\"struct futures_util::stream::SelectWithStrategy\">SelectWithStrategy</a>&lt;St1, St2, Clos, State&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Clos: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;State: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::select_with_strategy::SelectWithStrategy"]},{"text":"impl&lt;T, F, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Unfold.html\" title=\"struct futures_util::stream::Unfold\">Unfold</a>&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::unfold::Unfold"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.FuturesOrdered.html\" title=\"struct futures_util::stream::FuturesOrdered\">FuturesOrdered</a>&lt;T&gt;","synthetic":true,"types":["futures_util::stream::futures_ordered::FuturesOrdered"]},{"text":"impl&lt;'a, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/futures_unordered/struct.IterPinMut.html\" title=\"struct futures_util::stream::futures_unordered::IterPinMut\">IterPinMut</a>&lt;'a, Fut&gt;","synthetic":true,"types":["futures_util::stream::futures_unordered::iter::IterPinMut"]},{"text":"impl&lt;'a, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/futures_unordered/struct.IterMut.html\" title=\"struct futures_util::stream::futures_unordered::IterMut\">IterMut</a>&lt;'a, Fut&gt;","synthetic":true,"types":["futures_util::stream::futures_unordered::iter::IterMut"]},{"text":"impl&lt;'a, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/futures_unordered/struct.IterPinRef.html\" title=\"struct futures_util::stream::futures_unordered::IterPinRef\">IterPinRef</a>&lt;'a, Fut&gt;","synthetic":true,"types":["futures_util::stream::futures_unordered::iter::IterPinRef"]},{"text":"impl&lt;'a, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/futures_unordered/struct.Iter.html\" title=\"struct futures_util::stream::futures_unordered::Iter\">Iter</a>&lt;'a, Fut&gt;","synthetic":true,"types":["futures_util::stream::futures_unordered::iter::Iter"]},{"text":"impl&lt;Fut&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/futures_unordered/struct.IntoIter.html\" title=\"struct futures_util::stream::futures_unordered::IntoIter\">IntoIter</a>&lt;Fut&gt;","synthetic":true,"types":["futures_util::stream::futures_unordered::iter::IntoIter"]},{"text":"impl&lt;Fut&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.FuturesUnordered.html\" title=\"struct futures_util::stream::FuturesUnordered\">FuturesUnordered</a>&lt;Fut&gt;","synthetic":true,"types":["futures_util::stream::futures_unordered::FuturesUnordered"]},{"text":"impl&lt;St&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.SelectAll.html\" title=\"struct futures_util::stream::SelectAll\">SelectAll</a>&lt;St&gt;","synthetic":true,"types":["futures_util::stream::select_all::SelectAll"]},{"text":"impl&lt;'a, St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/select_all/struct.Iter.html\" title=\"struct futures_util::stream::select_all::Iter\">Iter</a>&lt;'a, St&gt;","synthetic":true,"types":["futures_util::stream::select_all::Iter"]},{"text":"impl&lt;'a, St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/select_all/struct.IterMut.html\" title=\"struct futures_util::stream::select_all::IterMut\">IterMut</a>&lt;'a, St&gt;","synthetic":true,"types":["futures_util::stream::select_all::IterMut"]},{"text":"impl&lt;St&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/select_all/struct.IntoIter.html\" title=\"struct futures_util::stream::select_all::IntoIter\">IntoIter</a>&lt;St&gt;","synthetic":true,"types":["futures_util::stream::select_all::IntoIter"]},{"text":"impl&lt;'a, Si:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, Item&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.Close.html\" title=\"struct futures_util::sink::Close\">Close</a>&lt;'a, Si, Item&gt;","synthetic":true,"types":["futures_util::sink::close::Close"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.Drain.html\" title=\"struct futures_util::sink::Drain\">Drain</a>&lt;T&gt;","synthetic":true,"types":["futures_util::sink::drain::Drain"]},{"text":"impl&lt;Si1, Si2&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.Fanout.html\" title=\"struct futures_util::sink::Fanout\">Fanout</a>&lt;Si1, Si2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::sink::fanout::Fanout"]},{"text":"impl&lt;'a, Si:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, Item&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.Feed.html\" title=\"struct futures_util::sink::Feed\">Feed</a>&lt;'a, Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::sink::feed::Feed"]},{"text":"impl&lt;'a, Si:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, Item&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.Flush.html\" title=\"struct futures_util::sink::Flush\">Flush</a>&lt;'a, Si, Item&gt;","synthetic":true,"types":["futures_util::sink::flush::Flush"]},{"text":"impl&lt;Si, Item, E&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.SinkErrInto.html\" title=\"struct futures_util::sink::SinkErrInto\">SinkErrInto</a>&lt;Si, Item, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::sink::err_into::SinkErrInto"]},{"text":"impl&lt;Si, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.SinkMapErr.html\" title=\"struct futures_util::sink::SinkMapErr\">SinkMapErr</a>&lt;Si, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::sink::map_err::SinkMapErr"]},{"text":"impl&lt;'a, Si:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, Item&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.Send.html\" title=\"struct futures_util::sink::Send\">Send</a>&lt;'a, Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::sink::send::Send"]},{"text":"impl&lt;'a, Si:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, St:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.SendAll.html\" title=\"struct futures_util::sink::SendAll\">SendAll</a>&lt;'a, Si, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::sink::send_all::SendAll"]},{"text":"impl&lt;T, F, R&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.Unfold.html\" title=\"struct futures_util::sink::Unfold\">Unfold</a>&lt;T, F, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::sink::unfold::Unfold"]},{"text":"impl&lt;Si, Item, U, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.With.html\" title=\"struct futures_util::sink::With\">With</a>&lt;Si, Item, U, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::sink::with::With"]},{"text":"impl&lt;Si, Item, U, St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.WithFlatMap.html\" title=\"struct futures_util::sink::WithFlatMap\">WithFlatMap</a>&lt;Si, Item, U, St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::sink::with_flat_map::WithFlatMap"]},{"text":"impl&lt;Si, Item&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.Buffer.html\" title=\"struct futures_util::sink::Buffer\">Buffer</a>&lt;Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::sink::buffer::Buffer"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.AllowStdIo.html\" title=\"struct futures_util::io::AllowStdIo\">AllowStdIo</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::allow_std::AllowStdIo"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.BufReader.html\" title=\"struct futures_util::io::BufReader\">BufReader</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::buf_reader::BufReader"]},{"text":"impl&lt;'a, R&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.SeeKRelative.html\" title=\"struct futures_util::io::SeeKRelative\">SeeKRelative</a>&lt;'a, R&gt;","synthetic":true,"types":["futures_util::io::buf_reader::SeeKRelative"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.BufWriter.html\" title=\"struct futures_util::io::BufWriter\">BufWriter</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::buf_writer::BufWriter"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.LineWriter.html\" title=\"struct futures_util::io::LineWriter\">LineWriter</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::line_writer::LineWriter"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Chain.html\" title=\"struct futures_util::io::Chain\">Chain</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::chain::Chain"]},{"text":"impl&lt;'a, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Close.html\" title=\"struct futures_util::io::Close\">Close</a>&lt;'a, W&gt;","synthetic":true,"types":["futures_util::io::close::Close"]},{"text":"impl&lt;'a, R, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Copy.html\" title=\"struct futures_util::io::Copy\">Copy</a>&lt;'a, R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::copy::Copy"]},{"text":"impl&lt;'a, R, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.CopyBuf.html\" title=\"struct futures_util::io::CopyBuf\">CopyBuf</a>&lt;'a, R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::copy_buf::CopyBuf"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Cursor.html\" title=\"struct futures_util::io::Cursor\">Cursor</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::cursor::Cursor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Empty.html\" title=\"struct futures_util::io::Empty\">Empty</a>","synthetic":true,"types":["futures_util::io::empty::Empty"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.FillBuf.html\" title=\"struct futures_util::io::FillBuf\">FillBuf</a>&lt;'a, R&gt;","synthetic":true,"types":["futures_util::io::fill_buf::FillBuf"]},{"text":"impl&lt;'a, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Flush.html\" title=\"struct futures_util::io::Flush\">Flush</a>&lt;'a, W&gt;","synthetic":true,"types":["futures_util::io::flush::Flush"]},{"text":"impl&lt;W, Item&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.IntoSink.html\" title=\"struct futures_util::io::IntoSink\">IntoSink</a>&lt;W, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::into_sink::IntoSink"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Lines.html\" title=\"struct futures_util::io::Lines\">Lines</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::lines::Lines"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Read.html\" title=\"struct futures_util::io::Read\">Read</a>&lt;'a, R&gt;","synthetic":true,"types":["futures_util::io::read::Read"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReadVectored.html\" title=\"struct futures_util::io::ReadVectored\">ReadVectored</a>&lt;'a, R&gt;","synthetic":true,"types":["futures_util::io::read_vectored::ReadVectored"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReadExact.html\" title=\"struct futures_util::io::ReadExact\">ReadExact</a>&lt;'a, R&gt;","synthetic":true,"types":["futures_util::io::read_exact::ReadExact"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReadLine.html\" title=\"struct futures_util::io::ReadLine\">ReadLine</a>&lt;'a, R&gt;","synthetic":true,"types":["futures_util::io::read_line::ReadLine"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReadToEnd.html\" title=\"struct futures_util::io::ReadToEnd\">ReadToEnd</a>&lt;'a, R&gt;","synthetic":true,"types":["futures_util::io::read_to_end::ReadToEnd"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReadToString.html\" title=\"struct futures_util::io::ReadToString\">ReadToString</a>&lt;'a, R&gt;","synthetic":true,"types":["futures_util::io::read_to_string::ReadToString"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReadUntil.html\" title=\"struct futures_util::io::ReadUntil\">ReadUntil</a>&lt;'a, R&gt;","synthetic":true,"types":["futures_util::io::read_until::ReadUntil"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Repeat.html\" title=\"struct futures_util::io::Repeat\">Repeat</a>","synthetic":true,"types":["futures_util::io::repeat::Repeat"]},{"text":"impl&lt;'a, S:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Seek.html\" title=\"struct futures_util::io::Seek\">Seek</a>&lt;'a, S&gt;","synthetic":true,"types":["futures_util::io::seek::Seek"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Sink.html\" title=\"struct futures_util::io::Sink\">Sink</a>","synthetic":true,"types":["futures_util::io::sink::Sink"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReadHalf.html\" title=\"struct futures_util::io::ReadHalf\">ReadHalf</a>&lt;T&gt;","synthetic":true,"types":["futures_util::io::split::ReadHalf"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.WriteHalf.html\" title=\"struct futures_util::io::WriteHalf\">WriteHalf</a>&lt;T&gt;","synthetic":true,"types":["futures_util::io::split::WriteHalf"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReuniteError.html\" title=\"struct futures_util::io::ReuniteError\">ReuniteError</a>&lt;T&gt;","synthetic":true,"types":["futures_util::io::split::ReuniteError"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Take.html\" title=\"struct futures_util::io::Take\">Take</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::take::Take"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Window.html\" title=\"struct futures_util::io::Window\">Window</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::window::Window"]},{"text":"impl&lt;'a, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Write.html\" title=\"struct futures_util::io::Write\">Write</a>&lt;'a, W&gt;","synthetic":true,"types":["futures_util::io::write::Write"]},{"text":"impl&lt;'a, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.WriteVectored.html\" title=\"struct futures_util::io::WriteVectored\">WriteVectored</a>&lt;'a, W&gt;","synthetic":true,"types":["futures_util::io::write_vectored::WriteVectored"]},{"text":"impl&lt;'a, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.WriteAll.html\" title=\"struct futures_util::io::WriteAll\">WriteAll</a>&lt;'a, W&gt;","synthetic":true,"types":["futures_util::io::write_all::WriteAll"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"futures_util/lock/struct.Mutex.html\" title=\"struct futures_util::lock::Mutex\">Mutex</a>&lt;T&gt;","synthetic":true,"types":["futures_util::lock::mutex::Mutex"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/lock/struct.MutexLockFuture.html\" title=\"struct futures_util::lock::MutexLockFuture\">MutexLockFuture</a>&lt;'a, T&gt;","synthetic":true,"types":["futures_util::lock::mutex::MutexLockFuture"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/lock/struct.MutexGuard.html\" title=\"struct futures_util::lock::MutexGuard\">MutexGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["futures_util::lock::mutex::MutexGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, U:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/lock/struct.MappedMutexGuard.html\" title=\"struct futures_util::lock::MappedMutexGuard\">MappedMutexGuard</a>&lt;'a, T, U&gt;","synthetic":true,"types":["futures_util::lock::mutex::MappedMutexGuard"]}];
implementors["generic_array"] = [{"text":"impl&lt;T, N&gt; Freeze for <a class=\"struct\" href=\"generic_array/iter/struct.GenericArrayIter.html\" title=\"struct generic_array::iter::GenericArrayIter\">GenericArrayIter</a>&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;N as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["generic_array::iter::GenericArrayIter"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["generic_array::GenericArray"]}];
implementors["getrandom"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"getrandom/struct.Error.html\" title=\"struct getrandom::Error\">Error</a>","synthetic":true,"types":["getrandom::error::Error"]}];
implementors["ghash"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"ghash/struct.GHash.html\" title=\"struct ghash::GHash\">GHash</a>","synthetic":true,"types":["ghash::GHash"]}];
implementors["gimli"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"gimli/enum.Format.html\" title=\"enum gimli::Format\">Format</a>","synthetic":true,"types":["gimli::common::Format"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/struct.Encoding.html\" title=\"struct gimli::Encoding\">Encoding</a>","synthetic":true,"types":["gimli::common::Encoding"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/struct.LineEncoding.html\" title=\"struct gimli::LineEncoding\">LineEncoding</a>","synthetic":true,"types":["gimli::common::LineEncoding"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/struct.Register.html\" title=\"struct gimli::Register\">Register</a>","synthetic":true,"types":["gimli::common::Register"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"gimli/struct.DebugAbbrevOffset.html\" title=\"struct gimli::DebugAbbrevOffset\">DebugAbbrevOffset</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::common::DebugAbbrevOffset"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"gimli/struct.DebugAddrBase.html\" title=\"struct gimli::DebugAddrBase\">DebugAddrBase</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::common::DebugAddrBase"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"gimli/struct.DebugAddrIndex.html\" title=\"struct gimli::DebugAddrIndex\">DebugAddrIndex</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::common::DebugAddrIndex"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"gimli/struct.DebugArangesOffset.html\" title=\"struct gimli::DebugArangesOffset\">DebugArangesOffset</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::common::DebugArangesOffset"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"gimli/struct.DebugInfoOffset.html\" title=\"struct gimli::DebugInfoOffset\">DebugInfoOffset</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::common::DebugInfoOffset"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"gimli/struct.DebugLineOffset.html\" title=\"struct gimli::DebugLineOffset\">DebugLineOffset</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::common::DebugLineOffset"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"gimli/struct.DebugLineStrOffset.html\" title=\"struct gimli::DebugLineStrOffset\">DebugLineStrOffset</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::common::DebugLineStrOffset"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"gimli/struct.LocationListsOffset.html\" title=\"struct gimli::LocationListsOffset\">LocationListsOffset</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::common::LocationListsOffset"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"gimli/struct.DebugLocListsBase.html\" title=\"struct gimli::DebugLocListsBase\">DebugLocListsBase</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::common::DebugLocListsBase"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"gimli/struct.DebugLocListsIndex.html\" title=\"struct gimli::DebugLocListsIndex\">DebugLocListsIndex</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::common::DebugLocListsIndex"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"gimli/struct.DebugMacinfoOffset.html\" title=\"struct gimli::DebugMacinfoOffset\">DebugMacinfoOffset</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::common::DebugMacinfoOffset"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"gimli/struct.DebugMacroOffset.html\" title=\"struct gimli::DebugMacroOffset\">DebugMacroOffset</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::common::DebugMacroOffset"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"gimli/struct.RawRangeListsOffset.html\" title=\"struct gimli::RawRangeListsOffset\">RawRangeListsOffset</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::common::RawRangeListsOffset"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"gimli/struct.RangeListsOffset.html\" title=\"struct gimli::RangeListsOffset\">RangeListsOffset</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::common::RangeListsOffset"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"gimli/struct.DebugRngListsBase.html\" title=\"struct gimli::DebugRngListsBase\">DebugRngListsBase</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::common::DebugRngListsBase"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"gimli/struct.DebugRngListsIndex.html\" title=\"struct gimli::DebugRngListsIndex\">DebugRngListsIndex</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::common::DebugRngListsIndex"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"gimli/struct.DebugStrOffset.html\" title=\"struct gimli::DebugStrOffset\">DebugStrOffset</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::common::DebugStrOffset"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"gimli/struct.DebugStrOffsetsBase.html\" title=\"struct gimli::DebugStrOffsetsBase\">DebugStrOffsetsBase</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::common::DebugStrOffsetsBase"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"gimli/struct.DebugStrOffsetsIndex.html\" title=\"struct gimli::DebugStrOffsetsIndex\">DebugStrOffsetsIndex</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::common::DebugStrOffsetsIndex"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"gimli/struct.DebugTypesOffset.html\" title=\"struct gimli::DebugTypesOffset\">DebugTypesOffset</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::common::DebugTypesOffset"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/struct.DebugTypeSignature.html\" title=\"struct gimli::DebugTypeSignature\">DebugTypeSignature</a>","synthetic":true,"types":["gimli::common::DebugTypeSignature"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"gimli/struct.DebugFrameOffset.html\" title=\"struct gimli::DebugFrameOffset\">DebugFrameOffset</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::common::DebugFrameOffset"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"gimli/struct.EhFrameOffset.html\" title=\"struct gimli::EhFrameOffset\">EhFrameOffset</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::common::EhFrameOffset"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"gimli/enum.UnitSectionOffset.html\" title=\"enum gimli::UnitSectionOffset\">UnitSectionOffset</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::common::UnitSectionOffset"]},{"text":"impl Freeze for <a class=\"enum\" href=\"gimli/enum.SectionId.html\" title=\"enum gimli::SectionId\">SectionId</a>","synthetic":true,"types":["gimli::common::SectionId"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/struct.DwoId.html\" title=\"struct gimli::DwoId\">DwoId</a>","synthetic":true,"types":["gimli::common::DwoId"]},{"text":"impl Freeze for <a class=\"enum\" href=\"gimli/enum.DwarfFileType.html\" title=\"enum gimli::DwarfFileType\">DwarfFileType</a>","synthetic":true,"types":["gimli::common::DwarfFileType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/struct.Arm.html\" title=\"struct gimli::Arm\">Arm</a>","synthetic":true,"types":["gimli::arch::Arm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/struct.AArch64.html\" title=\"struct gimli::AArch64\">AArch64</a>","synthetic":true,"types":["gimli::arch::AArch64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/struct.RiscV.html\" title=\"struct gimli::RiscV\">RiscV</a>","synthetic":true,"types":["gimli::arch::RiscV"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/struct.X86.html\" title=\"struct gimli::X86\">X86</a>","synthetic":true,"types":["gimli::arch::X86"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/struct.X86_64.html\" title=\"struct gimli::X86_64\">X86_64</a>","synthetic":true,"types":["gimli::arch::X86_64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/constants/struct.DwSect.html\" title=\"struct gimli::constants::DwSect\">DwSect</a>","synthetic":true,"types":["gimli::constants::DwSect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/constants/struct.DwSectV2.html\" title=\"struct gimli::constants::DwSectV2\">DwSectV2</a>","synthetic":true,"types":["gimli::constants::DwSectV2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/constants/struct.DwUt.html\" title=\"struct gimli::constants::DwUt\">DwUt</a>","synthetic":true,"types":["gimli::constants::DwUt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/constants/struct.DwCfa.html\" title=\"struct gimli::constants::DwCfa\">DwCfa</a>","synthetic":true,"types":["gimli::constants::DwCfa"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/constants/struct.DwChildren.html\" title=\"struct gimli::constants::DwChildren\">DwChildren</a>","synthetic":true,"types":["gimli::constants::DwChildren"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/constants/struct.DwTag.html\" title=\"struct gimli::constants::DwTag\">DwTag</a>","synthetic":true,"types":["gimli::constants::DwTag"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/constants/struct.DwAt.html\" title=\"struct gimli::constants::DwAt\">DwAt</a>","synthetic":true,"types":["gimli::constants::DwAt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/constants/struct.DwForm.html\" title=\"struct gimli::constants::DwForm\">DwForm</a>","synthetic":true,"types":["gimli::constants::DwForm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/constants/struct.DwAte.html\" title=\"struct gimli::constants::DwAte\">DwAte</a>","synthetic":true,"types":["gimli::constants::DwAte"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/constants/struct.DwLle.html\" title=\"struct gimli::constants::DwLle\">DwLle</a>","synthetic":true,"types":["gimli::constants::DwLle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/constants/struct.DwDs.html\" title=\"struct gimli::constants::DwDs\">DwDs</a>","synthetic":true,"types":["gimli::constants::DwDs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/constants/struct.DwEnd.html\" title=\"struct gimli::constants::DwEnd\">DwEnd</a>","synthetic":true,"types":["gimli::constants::DwEnd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/constants/struct.DwAccess.html\" title=\"struct gimli::constants::DwAccess\">DwAccess</a>","synthetic":true,"types":["gimli::constants::DwAccess"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/constants/struct.DwVis.html\" title=\"struct gimli::constants::DwVis\">DwVis</a>","synthetic":true,"types":["gimli::constants::DwVis"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/constants/struct.DwVirtuality.html\" title=\"struct gimli::constants::DwVirtuality\">DwVirtuality</a>","synthetic":true,"types":["gimli::constants::DwVirtuality"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/constants/struct.DwLang.html\" title=\"struct gimli::constants::DwLang\">DwLang</a>","synthetic":true,"types":["gimli::constants::DwLang"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/constants/struct.DwAddr.html\" title=\"struct gimli::constants::DwAddr\">DwAddr</a>","synthetic":true,"types":["gimli::constants::DwAddr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/constants/struct.DwId.html\" title=\"struct gimli::constants::DwId\">DwId</a>","synthetic":true,"types":["gimli::constants::DwId"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/constants/struct.DwCc.html\" title=\"struct gimli::constants::DwCc\">DwCc</a>","synthetic":true,"types":["gimli::constants::DwCc"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/constants/struct.DwInl.html\" title=\"struct gimli::constants::DwInl\">DwInl</a>","synthetic":true,"types":["gimli::constants::DwInl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/constants/struct.DwOrd.html\" title=\"struct gimli::constants::DwOrd\">DwOrd</a>","synthetic":true,"types":["gimli::constants::DwOrd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/constants/struct.DwDsc.html\" title=\"struct gimli::constants::DwDsc\">DwDsc</a>","synthetic":true,"types":["gimli::constants::DwDsc"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/constants/struct.DwIdx.html\" title=\"struct gimli::constants::DwIdx\">DwIdx</a>","synthetic":true,"types":["gimli::constants::DwIdx"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/constants/struct.DwDefaulted.html\" title=\"struct gimli::constants::DwDefaulted\">DwDefaulted</a>","synthetic":true,"types":["gimli::constants::DwDefaulted"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/constants/struct.DwLns.html\" title=\"struct gimli::constants::DwLns\">DwLns</a>","synthetic":true,"types":["gimli::constants::DwLns"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/constants/struct.DwLne.html\" title=\"struct gimli::constants::DwLne\">DwLne</a>","synthetic":true,"types":["gimli::constants::DwLne"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/constants/struct.DwLnct.html\" title=\"struct gimli::constants::DwLnct\">DwLnct</a>","synthetic":true,"types":["gimli::constants::DwLnct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/constants/struct.DwMacro.html\" title=\"struct gimli::constants::DwMacro\">DwMacro</a>","synthetic":true,"types":["gimli::constants::DwMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/constants/struct.DwRle.html\" title=\"struct gimli::constants::DwRle\">DwRle</a>","synthetic":true,"types":["gimli::constants::DwRle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/constants/struct.DwOp.html\" title=\"struct gimli::constants::DwOp\">DwOp</a>","synthetic":true,"types":["gimli::constants::DwOp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/constants/struct.DwEhPe.html\" title=\"struct gimli::constants::DwEhPe\">DwEhPe</a>","synthetic":true,"types":["gimli::constants::DwEhPe"]},{"text":"impl Freeze for <a class=\"enum\" href=\"gimli/enum.RunTimeEndian.html\" title=\"enum gimli::RunTimeEndian\">RunTimeEndian</a>","synthetic":true,"types":["gimli::endianity::RunTimeEndian"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/struct.LittleEndian.html\" title=\"struct gimli::LittleEndian\">LittleEndian</a>","synthetic":true,"types":["gimli::endianity::LittleEndian"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/struct.BigEndian.html\" title=\"struct gimli::BigEndian\">BigEndian</a>","synthetic":true,"types":["gimli::endianity::BigEndian"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.DebugAddr.html\" title=\"struct gimli::read::DebugAddr\">DebugAddr</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::addr::DebugAddr"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.DebugFrame.html\" title=\"struct gimli::read::DebugFrame\">DebugFrame</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::cfi::DebugFrame"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.EhFrameHdr.html\" title=\"struct gimli::read::EhFrameHdr\">EhFrameHdr</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::cfi::EhFrameHdr"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.ParsedEhFrameHdr.html\" title=\"struct gimli::read::ParsedEhFrameHdr\">ParsedEhFrameHdr</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::cfi::ParsedEhFrameHdr"]},{"text":"impl&lt;'a, R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.EhHdrTable.html\" title=\"struct gimli::read::EhHdrTable\">EhHdrTable</a>&lt;'a, R&gt;","synthetic":true,"types":["gimli::read::cfi::EhHdrTable"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.EhFrame.html\" title=\"struct gimli::read::EhFrame\">EhFrame</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::cfi::EhFrame"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/read/struct.BaseAddresses.html\" title=\"struct gimli::read::BaseAddresses\">BaseAddresses</a>","synthetic":true,"types":["gimli::read::cfi::BaseAddresses"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/read/struct.SectionBaseAddresses.html\" title=\"struct gimli::read::SectionBaseAddresses\">SectionBaseAddresses</a>","synthetic":true,"types":["gimli::read::cfi::SectionBaseAddresses"]},{"text":"impl&lt;'bases, Section, R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.CfiEntriesIter.html\" title=\"struct gimli::read::CfiEntriesIter\">CfiEntriesIter</a>&lt;'bases, Section, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Section: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::cfi::CfiEntriesIter"]},{"text":"impl&lt;'bases, Section, R&gt; Freeze for <a class=\"enum\" href=\"gimli/read/enum.CieOrFde.html\" title=\"enum gimli::read::CieOrFde\">CieOrFde</a>&lt;'bases, Section, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Section: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"gimli/read/trait.Reader.html\" title=\"trait gimli::read::Reader\">Reader</a>&gt;::<a class=\"associatedtype\" href=\"gimli/read/trait.Reader.html#associatedtype.Offset\" title=\"type gimli::read::Reader::Offset\">Offset</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Section as <a class=\"trait\" href=\"gimli/read/trait.UnwindSection.html\" title=\"trait gimli::read::UnwindSection\">UnwindSection</a>&lt;R&gt;&gt;::<a class=\"associatedtype\" href=\"gimli/read/trait.UnwindSection.html#associatedtype.Offset\" title=\"type gimli::read::UnwindSection::Offset\">Offset</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::cfi::CieOrFde"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/read/struct.Augmentation.html\" title=\"struct gimli::read::Augmentation\">Augmentation</a>","synthetic":true,"types":["gimli::read::cfi::Augmentation"]},{"text":"impl&lt;R, Offset&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.CommonInformationEntry.html\" title=\"struct gimli::read::CommonInformationEntry\">CommonInformationEntry</a>&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::cfi::CommonInformationEntry"]},{"text":"impl&lt;'bases, Section, R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.PartialFrameDescriptionEntry.html\" title=\"struct gimli::read::PartialFrameDescriptionEntry\">PartialFrameDescriptionEntry</a>&lt;'bases, Section, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Section: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"gimli/read/trait.Reader.html\" title=\"trait gimli::read::Reader\">Reader</a>&gt;::<a class=\"associatedtype\" href=\"gimli/read/trait.Reader.html#associatedtype.Offset\" title=\"type gimli::read::Reader::Offset\">Offset</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Section as <a class=\"trait\" href=\"gimli/read/trait.UnwindSection.html\" title=\"trait gimli::read::UnwindSection\">UnwindSection</a>&lt;R&gt;&gt;::<a class=\"associatedtype\" href=\"gimli/read/trait.UnwindSection.html#associatedtype.Offset\" title=\"type gimli::read::UnwindSection::Offset\">Offset</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::cfi::PartialFrameDescriptionEntry"]},{"text":"impl&lt;R, Offset&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.FrameDescriptionEntry.html\" title=\"struct gimli::read::FrameDescriptionEntry\">FrameDescriptionEntry</a>&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::cfi::FrameDescriptionEntry"]},{"text":"impl&lt;R, A&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.UnwindContext.html\" title=\"struct gimli::read::UnwindContext\">UnwindContext</a>&lt;R, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;A as <a class=\"trait\" href=\"gimli/read/trait.UnwindContextStorage.html\" title=\"trait gimli::read::UnwindContextStorage\">UnwindContextStorage</a>&lt;R&gt;&gt;::<a class=\"associatedtype\" href=\"gimli/read/trait.UnwindContextStorage.html#associatedtype.Stack\" title=\"type gimli::read::UnwindContextStorage::Stack\">Stack</a> as Sealed&gt;::Storage: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::cfi::UnwindContext"]},{"text":"impl&lt;'a, 'ctx, R, A&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.UnwindTable.html\" title=\"struct gimli::read::UnwindTable\">UnwindTable</a>&lt;'a, 'ctx, R, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::cfi::UnwindTable"]},{"text":"impl&lt;'iter, R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.RegisterRuleIter.html\" title=\"struct gimli::read::RegisterRuleIter\">RegisterRuleIter</a>&lt;'iter, R&gt;","synthetic":true,"types":["gimli::read::cfi::RegisterRuleIter"]},{"text":"impl&lt;R, S&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.UnwindTableRow.html\" title=\"struct gimli::read::UnwindTableRow\">UnwindTableRow</a>&lt;R, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;S as <a class=\"trait\" href=\"gimli/read/trait.UnwindContextStorage.html\" title=\"trait gimli::read::UnwindContextStorage\">UnwindContextStorage</a>&lt;R&gt;&gt;::<a class=\"associatedtype\" href=\"gimli/read/trait.UnwindContextStorage.html#associatedtype.Rules\" title=\"type gimli::read::UnwindContextStorage::Rules\">Rules</a> as Sealed&gt;::Storage: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::cfi::UnwindTableRow"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"enum\" href=\"gimli/read/enum.CfaRule.html\" title=\"enum gimli::read::CfaRule\">CfaRule</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::cfi::CfaRule"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"enum\" href=\"gimli/read/enum.RegisterRule.html\" title=\"enum gimli::read::RegisterRule\">RegisterRule</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::cfi::RegisterRule"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"enum\" href=\"gimli/read/enum.CallFrameInstruction.html\" title=\"enum gimli::read::CallFrameInstruction\">CallFrameInstruction</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::cfi::CallFrameInstruction"]},{"text":"impl&lt;'a, R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.CallFrameInstructionIter.html\" title=\"struct gimli::read::CallFrameInstructionIter\">CallFrameInstructionIter</a>&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::cfi::CallFrameInstructionIter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"gimli/read/enum.Pointer.html\" title=\"enum gimli::read::Pointer\">Pointer</a>","synthetic":true,"types":["gimli::read::cfi::Pointer"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.Dwarf.html\" title=\"struct gimli::read::Dwarf\">Dwarf</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::dwarf::Dwarf"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.DwarfPackage.html\" title=\"struct gimli::read::DwarfPackage\">DwarfPackage</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::dwarf::DwarfPackage"]},{"text":"impl&lt;R, Offset&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.Unit.html\" title=\"struct gimli::read::Unit\">Unit</a>&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::dwarf::Unit"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.RangeIter.html\" title=\"struct gimli::read::RangeIter\">RangeIter</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"gimli/read/trait.Reader.html\" title=\"trait gimli::read::Reader\">Reader</a>&gt;::<a class=\"associatedtype\" href=\"gimli/read/trait.Reader.html#associatedtype.Offset\" title=\"type gimli::read::Reader::Offset\">Offset</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::dwarf::RangeIter"]},{"text":"impl&lt;'input, Endian&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.EndianSlice.html\" title=\"struct gimli::read::EndianSlice\">EndianSlice</a>&lt;'input, Endian&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Endian: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::endian_slice::EndianSlice"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/read/struct.ReaderOffsetId.html\" title=\"struct gimli::read::ReaderOffsetId\">ReaderOffsetId</a>","synthetic":true,"types":["gimli::read::reader::ReaderOffsetId"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.DebugAbbrev.html\" title=\"struct gimli::read::DebugAbbrev\">DebugAbbrev</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::abbrev::DebugAbbrev"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/read/struct.Abbreviations.html\" title=\"struct gimli::read::Abbreviations\">Abbreviations</a>","synthetic":true,"types":["gimli::read::abbrev::Abbreviations"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/read/struct.Abbreviation.html\" title=\"struct gimli::read::Abbreviation\">Abbreviation</a>","synthetic":true,"types":["gimli::read::abbrev::Abbreviation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/read/struct.AttributeSpecification.html\" title=\"struct gimli::read::AttributeSpecification\">AttributeSpecification</a>","synthetic":true,"types":["gimli::read::abbrev::AttributeSpecification"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.DebugAranges.html\" title=\"struct gimli::read::DebugAranges\">DebugAranges</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::aranges::DebugAranges"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.ArangeHeaderIter.html\" title=\"struct gimli::read::ArangeHeaderIter\">ArangeHeaderIter</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"gimli/read/trait.Reader.html\" title=\"trait gimli::read::Reader\">Reader</a>&gt;::<a class=\"associatedtype\" href=\"gimli/read/trait.Reader.html#associatedtype.Offset\" title=\"type gimli::read::Reader::Offset\">Offset</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::aranges::ArangeHeaderIter"]},{"text":"impl&lt;R, Offset&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.ArangeHeader.html\" title=\"struct gimli::read::ArangeHeader\">ArangeHeader</a>&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::aranges::ArangeHeader"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.ArangeEntryIter.html\" title=\"struct gimli::read::ArangeEntryIter\">ArangeEntryIter</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::aranges::ArangeEntryIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/read/struct.ArangeEntry.html\" title=\"struct gimli::read::ArangeEntry\">ArangeEntry</a>","synthetic":true,"types":["gimli::read::aranges::ArangeEntry"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.DebugCuIndex.html\" title=\"struct gimli::read::DebugCuIndex\">DebugCuIndex</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::index::DebugCuIndex"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.DebugTuIndex.html\" title=\"struct gimli::read::DebugTuIndex\">DebugTuIndex</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::index::DebugTuIndex"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.UnitIndex.html\" title=\"struct gimli::read::UnitIndex\">UnitIndex</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::index::UnitIndex"]},{"text":"impl&lt;'index, R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.UnitIndexSectionIterator.html\" title=\"struct gimli::read::UnitIndexSectionIterator\">UnitIndexSectionIterator</a>&lt;'index, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::index::UnitIndexSectionIterator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/read/struct.UnitIndexSection.html\" title=\"struct gimli::read::UnitIndexSection\">UnitIndexSection</a>","synthetic":true,"types":["gimli::read::index::UnitIndexSection"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.DebugLine.html\" title=\"struct gimli::read::DebugLine\">DebugLine</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::line::DebugLine"]},{"text":"impl&lt;R, Program, Offset&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.LineRows.html\" title=\"struct gimli::read::LineRows\">LineRows</a>&lt;R, Program, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Program: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::line::LineRows"]},{"text":"impl&lt;R, Offset&gt; Freeze for <a class=\"enum\" href=\"gimli/read/enum.LineInstruction.html\" title=\"enum gimli::read::LineInstruction\">LineInstruction</a>&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::line::LineInstruction"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.LineInstructions.html\" title=\"struct gimli::read::LineInstructions\">LineInstructions</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::line::LineInstructions"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/read/struct.LineRow.html\" title=\"struct gimli::read::LineRow\">LineRow</a>","synthetic":true,"types":["gimli::read::line::LineRow"]},{"text":"impl Freeze for <a class=\"enum\" href=\"gimli/read/enum.ColumnType.html\" title=\"enum gimli::read::ColumnType\">ColumnType</a>","synthetic":true,"types":["gimli::read::line::ColumnType"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.LineSequence.html\" title=\"struct gimli::read::LineSequence\">LineSequence</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::line::LineSequence"]},{"text":"impl&lt;R, Offset&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.LineProgramHeader.html\" title=\"struct gimli::read::LineProgramHeader\">LineProgramHeader</a>&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::line::LineProgramHeader"]},{"text":"impl&lt;R, Offset&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.IncompleteLineProgram.html\" title=\"struct gimli::read::IncompleteLineProgram\">IncompleteLineProgram</a>&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::line::IncompleteLineProgram"]},{"text":"impl&lt;R, Offset&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.CompleteLineProgram.html\" title=\"struct gimli::read::CompleteLineProgram\">CompleteLineProgram</a>&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::line::CompleteLineProgram"]},{"text":"impl&lt;R, Offset&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.FileEntry.html\" title=\"struct gimli::read::FileEntry\">FileEntry</a>&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::line::FileEntry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/read/struct.FileEntryFormat.html\" title=\"struct gimli::read::FileEntryFormat\">FileEntryFormat</a>","synthetic":true,"types":["gimli::read::line::FileEntryFormat"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.DebugLoc.html\" title=\"struct gimli::read::DebugLoc\">DebugLoc</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::loclists::DebugLoc"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.DebugLocLists.html\" title=\"struct gimli::read::DebugLocLists\">DebugLocLists</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::loclists::DebugLocLists"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.LocationLists.html\" title=\"struct gimli::read::LocationLists\">LocationLists</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::loclists::LocationLists"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.RawLocListIter.html\" title=\"struct gimli::read::RawLocListIter\">RawLocListIter</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::loclists::RawLocListIter"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"enum\" href=\"gimli/read/enum.RawLocListEntry.html\" title=\"enum gimli::read::RawLocListEntry\">RawLocListEntry</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"gimli/read/trait.Reader.html\" title=\"trait gimli::read::Reader\">Reader</a>&gt;::<a class=\"associatedtype\" href=\"gimli/read/trait.Reader.html#associatedtype.Offset\" title=\"type gimli::read::Reader::Offset\">Offset</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::loclists::RawLocListEntry"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.LocListIter.html\" title=\"struct gimli::read::LocListIter\">LocListIter</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"gimli/read/trait.Reader.html\" title=\"trait gimli::read::Reader\">Reader</a>&gt;::<a class=\"associatedtype\" href=\"gimli/read/trait.Reader.html#associatedtype.Offset\" title=\"type gimli::read::Reader::Offset\">Offset</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::loclists::LocListIter"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.LocationListEntry.html\" title=\"struct gimli::read::LocationListEntry\">LocationListEntry</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::loclists::LocationListEntry"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"gimli/read/enum.DieReference.html\" title=\"enum gimli::read::DieReference\">DieReference</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::op::DieReference"]},{"text":"impl&lt;R, Offset&gt; Freeze for <a class=\"enum\" href=\"gimli/read/enum.Operation.html\" title=\"enum gimli::read::Operation\">Operation</a>&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::op::Operation"]},{"text":"impl&lt;R, Offset&gt; Freeze for <a class=\"enum\" href=\"gimli/read/enum.Location.html\" title=\"enum gimli::read::Location\">Location</a>&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::op::Location"]},{"text":"impl&lt;R, Offset&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.Piece.html\" title=\"struct gimli::read::Piece\">Piece</a>&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::op::Piece"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"enum\" href=\"gimli/read/enum.EvaluationResult.html\" title=\"enum gimli::read::EvaluationResult\">EvaluationResult</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"gimli/read/trait.Reader.html\" title=\"trait gimli::read::Reader\">Reader</a>&gt;::<a class=\"associatedtype\" href=\"gimli/read/trait.Reader.html#associatedtype.Offset\" title=\"type gimli::read::Reader::Offset\">Offset</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::op::EvaluationResult"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.Expression.html\" title=\"struct gimli::read::Expression\">Expression</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::op::Expression"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.OperationIter.html\" title=\"struct gimli::read::OperationIter\">OperationIter</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::op::OperationIter"]},{"text":"impl&lt;R, S&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.Evaluation.html\" title=\"struct gimli::read::Evaluation\">Evaluation</a>&lt;R, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;S as <a class=\"trait\" href=\"gimli/read/trait.EvaluationStorage.html\" title=\"trait gimli::read::EvaluationStorage\">EvaluationStorage</a>&lt;R&gt;&gt;::<a class=\"associatedtype\" href=\"gimli/read/trait.EvaluationStorage.html#associatedtype.ExpressionStack\" title=\"type gimli::read::EvaluationStorage::ExpressionStack\">ExpressionStack</a> as Sealed&gt;::Storage: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;S as <a class=\"trait\" href=\"gimli/read/trait.EvaluationStorage.html\" title=\"trait gimli::read::EvaluationStorage\">EvaluationStorage</a>&lt;R&gt;&gt;::<a class=\"associatedtype\" href=\"gimli/read/trait.EvaluationStorage.html#associatedtype.Result\" title=\"type gimli::read::EvaluationStorage::Result\">Result</a> as Sealed&gt;::Storage: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;S as <a class=\"trait\" href=\"gimli/read/trait.EvaluationStorage.html\" title=\"trait gimli::read::EvaluationStorage\">EvaluationStorage</a>&lt;R&gt;&gt;::<a class=\"associatedtype\" href=\"gimli/read/trait.EvaluationStorage.html#associatedtype.Stack\" title=\"type gimli::read::EvaluationStorage::Stack\">Stack</a> as Sealed&gt;::Storage: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::op::Evaluation"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.PubNamesEntry.html\" title=\"struct gimli::read::PubNamesEntry\">PubNamesEntry</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"gimli/read/trait.Reader.html\" title=\"trait gimli::read::Reader\">Reader</a>&gt;::<a class=\"associatedtype\" href=\"gimli/read/trait.Reader.html#associatedtype.Offset\" title=\"type gimli::read::Reader::Offset\">Offset</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::pubnames::PubNamesEntry"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.DebugPubNames.html\" title=\"struct gimli::read::DebugPubNames\">DebugPubNames</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::pubnames::DebugPubNames"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.PubNamesEntryIter.html\" title=\"struct gimli::read::PubNamesEntryIter\">PubNamesEntryIter</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"gimli/read/trait.Reader.html\" title=\"trait gimli::read::Reader\">Reader</a>&gt;::<a class=\"associatedtype\" href=\"gimli/read/trait.Reader.html#associatedtype.Offset\" title=\"type gimli::read::Reader::Offset\">Offset</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::pubnames::PubNamesEntryIter"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.PubTypesEntry.html\" title=\"struct gimli::read::PubTypesEntry\">PubTypesEntry</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"gimli/read/trait.Reader.html\" title=\"trait gimli::read::Reader\">Reader</a>&gt;::<a class=\"associatedtype\" href=\"gimli/read/trait.Reader.html#associatedtype.Offset\" title=\"type gimli::read::Reader::Offset\">Offset</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::pubtypes::PubTypesEntry"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.DebugPubTypes.html\" title=\"struct gimli::read::DebugPubTypes\">DebugPubTypes</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::pubtypes::DebugPubTypes"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.PubTypesEntryIter.html\" title=\"struct gimli::read::PubTypesEntryIter\">PubTypesEntryIter</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"gimli/read/trait.Reader.html\" title=\"trait gimli::read::Reader\">Reader</a>&gt;::<a class=\"associatedtype\" href=\"gimli/read/trait.Reader.html#associatedtype.Offset\" title=\"type gimli::read::Reader::Offset\">Offset</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::pubtypes::PubTypesEntryIter"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.DebugRanges.html\" title=\"struct gimli::read::DebugRanges\">DebugRanges</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::rnglists::DebugRanges"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.DebugRngLists.html\" title=\"struct gimli::read::DebugRngLists\">DebugRngLists</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::rnglists::DebugRngLists"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.RangeLists.html\" title=\"struct gimli::read::RangeLists\">RangeLists</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::rnglists::RangeLists"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.RawRngListIter.html\" title=\"struct gimli::read::RawRngListIter\">RawRngListIter</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::rnglists::RawRngListIter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"gimli/read/enum.RawRngListEntry.html\" title=\"enum gimli::read::RawRngListEntry\">RawRngListEntry</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::rnglists::RawRngListEntry"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.RngListIter.html\" title=\"struct gimli::read::RngListIter\">RngListIter</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"gimli/read/trait.Reader.html\" title=\"trait gimli::read::Reader\">Reader</a>&gt;::<a class=\"associatedtype\" href=\"gimli/read/trait.Reader.html#associatedtype.Offset\" title=\"type gimli::read::Reader::Offset\">Offset</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::rnglists::RngListIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/read/struct.Range.html\" title=\"struct gimli::read::Range\">Range</a>","synthetic":true,"types":["gimli::read::rnglists::Range"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.DebugStr.html\" title=\"struct gimli::read::DebugStr\">DebugStr</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::str::DebugStr"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.DebugStrOffsets.html\" title=\"struct gimli::read::DebugStrOffsets\">DebugStrOffsets</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::str::DebugStrOffsets"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.DebugLineStr.html\" title=\"struct gimli::read::DebugLineStr\">DebugLineStr</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::str::DebugLineStr"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.DebugInfo.html\" title=\"struct gimli::read::DebugInfo\">DebugInfo</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::unit::DebugInfo"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.DebugInfoUnitHeadersIter.html\" title=\"struct gimli::read::DebugInfoUnitHeadersIter\">DebugInfoUnitHeadersIter</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"gimli/read/trait.Reader.html\" title=\"trait gimli::read::Reader\">Reader</a>&gt;::<a class=\"associatedtype\" href=\"gimli/read/trait.Reader.html#associatedtype.Offset\" title=\"type gimli::read::Reader::Offset\">Offset</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::unit::DebugInfoUnitHeadersIter"]},{"text":"impl&lt;Offset&gt; Freeze for <a class=\"enum\" href=\"gimli/read/enum.UnitType.html\" title=\"enum gimli::read::UnitType\">UnitType</a>&lt;Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::unit::UnitType"]},{"text":"impl&lt;R, Offset&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.UnitHeader.html\" title=\"struct gimli::read::UnitHeader\">UnitHeader</a>&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::unit::UnitHeader"]},{"text":"impl&lt;'abbrev, 'unit, R, Offset&nbsp;=&nbsp;&lt;R as <a class=\"trait\" href=\"gimli/read/trait.Reader.html\" title=\"trait gimli::read::Reader\">Reader</a>&gt;::<a class=\"associatedtype\" href=\"gimli/read/trait.Reader.html#associatedtype.Offset\" title=\"type gimli::read::Reader::Offset\">Offset</a>&gt; !Freeze for <a class=\"struct\" href=\"gimli/read/struct.DebuggingInformationEntry.html\" title=\"struct gimli::read::DebuggingInformationEntry\">DebuggingInformationEntry</a>&lt;'abbrev, 'unit, R, Offset&gt;","synthetic":true,"types":["gimli::read::unit::DebuggingInformationEntry"]},{"text":"impl&lt;R, Offset&gt; Freeze for <a class=\"enum\" href=\"gimli/read/enum.AttributeValue.html\" title=\"enum gimli::read::AttributeValue\">AttributeValue</a>&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::unit::AttributeValue"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.Attribute.html\" title=\"struct gimli::read::Attribute\">Attribute</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"gimli/read/trait.Reader.html\" title=\"trait gimli::read::Reader\">Reader</a>&gt;::<a class=\"associatedtype\" href=\"gimli/read/trait.Reader.html#associatedtype.Offset\" title=\"type gimli::read::Reader::Offset\">Offset</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::unit::Attribute"]},{"text":"impl&lt;'abbrev, 'entry, 'unit, R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.AttrsIter.html\" title=\"struct gimli::read::AttrsIter\">AttrsIter</a>&lt;'abbrev, 'entry, 'unit, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::unit::AttrsIter"]},{"text":"impl&lt;'abbrev, 'unit, R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.EntriesRaw.html\" title=\"struct gimli::read::EntriesRaw\">EntriesRaw</a>&lt;'abbrev, 'unit, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::unit::EntriesRaw"]},{"text":"impl&lt;'abbrev, 'unit, R&gt; !Freeze for <a class=\"struct\" href=\"gimli/read/struct.EntriesCursor.html\" title=\"struct gimli::read::EntriesCursor\">EntriesCursor</a>&lt;'abbrev, 'unit, R&gt;","synthetic":true,"types":["gimli::read::unit::EntriesCursor"]},{"text":"impl&lt;'abbrev, 'unit, R&gt; !Freeze for <a class=\"struct\" href=\"gimli/read/struct.EntriesTree.html\" title=\"struct gimli::read::EntriesTree\">EntriesTree</a>&lt;'abbrev, 'unit, R&gt;","synthetic":true,"types":["gimli::read::unit::EntriesTree"]},{"text":"impl&lt;'abbrev, 'unit, 'tree, R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.EntriesTreeNode.html\" title=\"struct gimli::read::EntriesTreeNode\">EntriesTreeNode</a>&lt;'abbrev, 'unit, 'tree, R&gt;","synthetic":true,"types":["gimli::read::unit::EntriesTreeNode"]},{"text":"impl&lt;'abbrev, 'unit, 'tree, R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.EntriesTreeIter.html\" title=\"struct gimli::read::EntriesTreeIter\">EntriesTreeIter</a>&lt;'abbrev, 'unit, 'tree, R&gt;","synthetic":true,"types":["gimli::read::unit::EntriesTreeIter"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.DebugTypes.html\" title=\"struct gimli::read::DebugTypes\">DebugTypes</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::unit::DebugTypes"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.DebugTypesUnitHeadersIter.html\" title=\"struct gimli::read::DebugTypesUnitHeadersIter\">DebugTypesUnitHeadersIter</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"gimli/read/trait.Reader.html\" title=\"trait gimli::read::Reader\">Reader</a>&gt;::<a class=\"associatedtype\" href=\"gimli/read/trait.Reader.html#associatedtype.Offset\" title=\"type gimli::read::Reader::Offset\">Offset</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::unit::DebugTypesUnitHeadersIter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"gimli/read/enum.ValueType.html\" title=\"enum gimli::read::ValueType\">ValueType</a>","synthetic":true,"types":["gimli::read::value::ValueType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"gimli/read/enum.Value.html\" title=\"enum gimli::read::Value\">Value</a>","synthetic":true,"types":["gimli::read::value::Value"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"gimli/read/struct.UnitOffset.html\" title=\"struct gimli::read::UnitOffset\">UnitOffset</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["gimli::read::UnitOffset"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gimli/read/struct.StoreOnHeap.html\" title=\"struct gimli::read::StoreOnHeap\">StoreOnHeap</a>","synthetic":true,"types":["gimli::read::StoreOnHeap"]},{"text":"impl Freeze for <a class=\"enum\" href=\"gimli/read/enum.Error.html\" title=\"enum gimli::read::Error\">Error</a>","synthetic":true,"types":["gimli::read::Error"]}];
implementors["glob"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"glob/struct.Paths.html\" title=\"struct glob::Paths\">Paths</a>","synthetic":true,"types":["glob::Paths"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glob/struct.GlobError.html\" title=\"struct glob::GlobError\">GlobError</a>","synthetic":true,"types":["glob::GlobError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glob/struct.PatternError.html\" title=\"struct glob::PatternError\">PatternError</a>","synthetic":true,"types":["glob::PatternError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glob/struct.Pattern.html\" title=\"struct glob::Pattern\">Pattern</a>","synthetic":true,"types":["glob::Pattern"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glob/struct.MatchOptions.html\" title=\"struct glob::MatchOptions\">MatchOptions</a>","synthetic":true,"types":["glob::MatchOptions"]}];
implementors["globset"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"globset/struct.Glob.html\" title=\"struct globset::Glob\">Glob</a>","synthetic":true,"types":["globset::glob::Glob"]},{"text":"impl Freeze for <a class=\"struct\" href=\"globset/struct.GlobMatcher.html\" title=\"struct globset::GlobMatcher\">GlobMatcher</a>","synthetic":true,"types":["globset::glob::GlobMatcher"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"globset/struct.GlobBuilder.html\" title=\"struct globset::GlobBuilder\">GlobBuilder</a>&lt;'a&gt;","synthetic":true,"types":["globset::glob::GlobBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"globset/struct.Error.html\" title=\"struct globset::Error\">Error</a>","synthetic":true,"types":["globset::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"globset/enum.ErrorKind.html\" title=\"enum globset::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["globset::ErrorKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"globset/struct.GlobSet.html\" title=\"struct globset::GlobSet\">GlobSet</a>","synthetic":true,"types":["globset::GlobSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"globset/struct.GlobSetBuilder.html\" title=\"struct globset::GlobSetBuilder\">GlobSetBuilder</a>","synthetic":true,"types":["globset::GlobSetBuilder"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"globset/struct.Candidate.html\" title=\"struct globset::Candidate\">Candidate</a>&lt;'a&gt;","synthetic":true,"types":["globset::Candidate"]}];
implementors["globwalk"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"globwalk/struct.GlobError.html\" title=\"struct globwalk::GlobError\">GlobError</a>","synthetic":true,"types":["globwalk::GlobError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"globwalk/struct.FileType.html\" title=\"struct globwalk::FileType\">FileType</a>","synthetic":true,"types":["globwalk::FileType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"globwalk/struct.GlobWalkerBuilder.html\" title=\"struct globwalk::GlobWalkerBuilder\">GlobWalkerBuilder</a>","synthetic":true,"types":["globwalk::GlobWalkerBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"globwalk/struct.GlobWalker.html\" title=\"struct globwalk::GlobWalker\">GlobWalker</a>","synthetic":true,"types":["globwalk::GlobWalker"]}];
implementors["h2"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"h2/struct.Error.html\" title=\"struct h2::Error\">Error</a>","synthetic":true,"types":["h2::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/struct.Reason.html\" title=\"struct h2::Reason\">Reason</a>","synthetic":true,"types":["h2::frame::reason::Reason"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"h2/client/struct.SendRequest.html\" title=\"struct h2::client::SendRequest\">SendRequest</a>&lt;B&gt;","synthetic":true,"types":["h2::client::SendRequest"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"h2/client/struct.ReadySendRequest.html\" title=\"struct h2::client::ReadySendRequest\">ReadySendRequest</a>&lt;B&gt;","synthetic":true,"types":["h2::client::ReadySendRequest"]},{"text":"impl&lt;T, B&nbsp;=&nbsp;<a class=\"struct\" href=\"bytes/bytes/struct.Bytes.html\" title=\"struct bytes::bytes::Bytes\">Bytes</a>&gt; !Freeze for <a class=\"struct\" href=\"h2/client/struct.Connection.html\" title=\"struct h2::client::Connection\">Connection</a>&lt;T, B&gt;","synthetic":true,"types":["h2::client::Connection"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/client/struct.ResponseFuture.html\" title=\"struct h2::client::ResponseFuture\">ResponseFuture</a>","synthetic":true,"types":["h2::client::ResponseFuture"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/client/struct.PushedResponseFuture.html\" title=\"struct h2::client::PushedResponseFuture\">PushedResponseFuture</a>","synthetic":true,"types":["h2::client::PushedResponseFuture"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"h2/client/struct.PushPromise.html\" title=\"struct h2::client::PushPromise\">PushPromise</a>","synthetic":true,"types":["h2::client::PushPromise"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/client/struct.PushPromises.html\" title=\"struct h2::client::PushPromises\">PushPromises</a>","synthetic":true,"types":["h2::client::PushPromises"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/client/struct.Builder.html\" title=\"struct h2::client::Builder\">Builder</a>","synthetic":true,"types":["h2::client::Builder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"h2/ext/struct.Protocol.html\" title=\"struct h2::ext::Protocol\">Protocol</a>","synthetic":true,"types":["h2::ext::Protocol"]},{"text":"impl&lt;T, B&nbsp;=&nbsp;<a class=\"struct\" href=\"bytes/bytes/struct.Bytes.html\" title=\"struct bytes::bytes::Bytes\">Bytes</a>&gt; !Freeze for <a class=\"struct\" href=\"h2/server/struct.Handshake.html\" title=\"struct h2::server::Handshake\">Handshake</a>&lt;T, B&gt;","synthetic":true,"types":["h2::server::Handshake"]},{"text":"impl&lt;T, B&gt; !Freeze for <a class=\"struct\" href=\"h2/server/struct.Connection.html\" title=\"struct h2::server::Connection\">Connection</a>&lt;T, B&gt;","synthetic":true,"types":["h2::server::Connection"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/server/struct.Builder.html\" title=\"struct h2::server::Builder\">Builder</a>","synthetic":true,"types":["h2::server::Builder"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"h2/server/struct.SendResponse.html\" title=\"struct h2::server::SendResponse\">SendResponse</a>&lt;B&gt;","synthetic":true,"types":["h2::server::SendResponse"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"h2/server/struct.SendPushedResponse.html\" title=\"struct h2::server::SendPushedResponse\">SendPushedResponse</a>&lt;B&gt;","synthetic":true,"types":["h2::server::SendPushedResponse"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"h2/struct.SendStream.html\" title=\"struct h2::SendStream\">SendStream</a>&lt;B&gt;","synthetic":true,"types":["h2::share::SendStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/struct.StreamId.html\" title=\"struct h2::StreamId\">StreamId</a>","synthetic":true,"types":["h2::share::StreamId"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/struct.RecvStream.html\" title=\"struct h2::RecvStream\">RecvStream</a>","synthetic":true,"types":["h2::share::RecvStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/struct.FlowControl.html\" title=\"struct h2::FlowControl\">FlowControl</a>","synthetic":true,"types":["h2::share::FlowControl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/struct.PingPong.html\" title=\"struct h2::PingPong\">PingPong</a>","synthetic":true,"types":["h2::share::PingPong"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/struct.Ping.html\" title=\"struct h2::Ping\">Ping</a>","synthetic":true,"types":["h2::share::Ping"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/struct.Pong.html\" title=\"struct h2::Pong\">Pong</a>","synthetic":true,"types":["h2::share::Pong"]}];
implementors["hashbrown"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"hashbrown/raw/struct.Bucket.html\" title=\"struct hashbrown::raw::Bucket\">Bucket</a>&lt;T&gt;","synthetic":true,"types":["hashbrown::raw::inner::Bucket"]},{"text":"impl&lt;T, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/raw/struct.RawTable.html\" title=\"struct hashbrown::raw::RawTable\">RawTable</a>&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::raw::inner::RawTable"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"hashbrown/raw/struct.RawIter.html\" title=\"struct hashbrown::raw::RawIter\">RawIter</a>&lt;T&gt;","synthetic":true,"types":["hashbrown::raw::inner::RawIter"]},{"text":"impl&lt;T, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/raw/struct.RawIntoIter.html\" title=\"struct hashbrown::raw::RawIntoIter\">RawIntoIter</a>&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::raw::inner::RawIntoIter"]},{"text":"impl&lt;'a, T, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/raw/struct.RawDrain.html\" title=\"struct hashbrown::raw::RawDrain\">RawDrain</a>&lt;'a, T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::raw::inner::RawDrain"]},{"text":"impl&lt;'a, T, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/raw/struct.RawIterHash.html\" title=\"struct hashbrown::raw::RawIterHash\">RawIterHash</a>&lt;'a, T, A&gt;","synthetic":true,"types":["hashbrown::raw::inner::RawIterHash"]},{"text":"impl&lt;K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.HashMap.html\" title=\"struct hashbrown::hash_map::HashMap\">HashMap</a>&lt;K, V, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::HashMap"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.Iter.html\" title=\"struct hashbrown::hash_map::Iter\">Iter</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown::map::Iter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.IterMut.html\" title=\"struct hashbrown::hash_map::IterMut\">IterMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown::map::IterMut"]},{"text":"impl&lt;K, V, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.IntoIter.html\" title=\"struct hashbrown::hash_map::IntoIter\">IntoIter</a>&lt;K, V, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::IntoIter"]},{"text":"impl&lt;K, V, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.IntoKeys.html\" title=\"struct hashbrown::hash_map::IntoKeys\">IntoKeys</a>&lt;K, V, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::IntoKeys"]},{"text":"impl&lt;K, V, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.IntoValues.html\" title=\"struct hashbrown::hash_map::IntoValues\">IntoValues</a>&lt;K, V, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::IntoValues"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.Keys.html\" title=\"struct hashbrown::hash_map::Keys\">Keys</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown::map::Keys"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.Values.html\" title=\"struct hashbrown::hash_map::Values\">Values</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown::map::Values"]},{"text":"impl&lt;'a, K, V, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.Drain.html\" title=\"struct hashbrown::hash_map::Drain\">Drain</a>&lt;'a, K, V, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::Drain"]},{"text":"impl&lt;'a, K, V, F, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.DrainFilter.html\" title=\"struct hashbrown::hash_map::DrainFilter\">DrainFilter</a>&lt;'a, K, V, F, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::DrainFilter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.ValuesMut.html\" title=\"struct hashbrown::hash_map::ValuesMut\">ValuesMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown::map::ValuesMut"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.RawEntryBuilderMut.html\" title=\"struct hashbrown::hash_map::RawEntryBuilderMut\">RawEntryBuilderMut</a>&lt;'a, K, V, S, A&gt;","synthetic":true,"types":["hashbrown::map::RawEntryBuilderMut"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"enum\" href=\"hashbrown/hash_map/enum.RawEntryMut.html\" title=\"enum hashbrown::hash_map::RawEntryMut\">RawEntryMut</a>&lt;'a, K, V, S, A&gt;","synthetic":true,"types":["hashbrown::map::RawEntryMut"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.RawOccupiedEntryMut.html\" title=\"struct hashbrown::hash_map::RawOccupiedEntryMut\">RawOccupiedEntryMut</a>&lt;'a, K, V, S, A&gt;","synthetic":true,"types":["hashbrown::map::RawOccupiedEntryMut"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.RawVacantEntryMut.html\" title=\"struct hashbrown::hash_map::RawVacantEntryMut\">RawVacantEntryMut</a>&lt;'a, K, V, S, A&gt;","synthetic":true,"types":["hashbrown::map::RawVacantEntryMut"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.RawEntryBuilder.html\" title=\"struct hashbrown::hash_map::RawEntryBuilder\">RawEntryBuilder</a>&lt;'a, K, V, S, A&gt;","synthetic":true,"types":["hashbrown::map::RawEntryBuilder"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"enum\" href=\"hashbrown/hash_map/enum.Entry.html\" title=\"enum hashbrown::hash_map::Entry\">Entry</a>&lt;'a, K, V, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::Entry"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.OccupiedEntry.html\" title=\"struct hashbrown::hash_map::OccupiedEntry\">OccupiedEntry</a>&lt;'a, K, V, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::OccupiedEntry"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.VacantEntry.html\" title=\"struct hashbrown::hash_map::VacantEntry\">VacantEntry</a>&lt;'a, K, V, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::VacantEntry"]},{"text":"impl&lt;'a, 'b, K, Q:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, V, S, A&gt; Freeze for <a class=\"enum\" href=\"hashbrown/hash_map/enum.EntryRef.html\" title=\"enum hashbrown::hash_map::EntryRef\">EntryRef</a>&lt;'a, 'b, K, Q, V, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::EntryRef"]},{"text":"impl&lt;'a, 'b, K, Q:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.OccupiedEntryRef.html\" title=\"struct hashbrown::hash_map::OccupiedEntryRef\">OccupiedEntryRef</a>&lt;'a, 'b, K, Q, V, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::OccupiedEntryRef"]},{"text":"impl&lt;'a, 'b, K, Q:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.VacantEntryRef.html\" title=\"struct hashbrown::hash_map::VacantEntryRef\">VacantEntryRef</a>&lt;'a, 'b, K, Q, V, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::VacantEntryRef"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.OccupiedError.html\" title=\"struct hashbrown::hash_map::OccupiedError\">OccupiedError</a>&lt;'a, K, V, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::OccupiedError"]},{"text":"impl&lt;T, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.HashSet.html\" title=\"struct hashbrown::hash_set::HashSet\">HashSet</a>&lt;T, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::set::HashSet"]},{"text":"impl&lt;'a, K&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Iter.html\" title=\"struct hashbrown::hash_set::Iter\">Iter</a>&lt;'a, K&gt;","synthetic":true,"types":["hashbrown::set::Iter"]},{"text":"impl&lt;K, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.IntoIter.html\" title=\"struct hashbrown::hash_set::IntoIter\">IntoIter</a>&lt;K, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::set::IntoIter"]},{"text":"impl&lt;'a, K, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Drain.html\" title=\"struct hashbrown::hash_set::Drain\">Drain</a>&lt;'a, K, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::set::Drain"]},{"text":"impl&lt;'a, K, F, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.DrainFilter.html\" title=\"struct hashbrown::hash_set::DrainFilter\">DrainFilter</a>&lt;'a, K, F, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::set::DrainFilter"]},{"text":"impl&lt;'a, T, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Intersection.html\" title=\"struct hashbrown::hash_set::Intersection\">Intersection</a>&lt;'a, T, S, A&gt;","synthetic":true,"types":["hashbrown::set::Intersection"]},{"text":"impl&lt;'a, T, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Difference.html\" title=\"struct hashbrown::hash_set::Difference\">Difference</a>&lt;'a, T, S, A&gt;","synthetic":true,"types":["hashbrown::set::Difference"]},{"text":"impl&lt;'a, T, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.SymmetricDifference.html\" title=\"struct hashbrown::hash_set::SymmetricDifference\">SymmetricDifference</a>&lt;'a, T, S, A&gt;","synthetic":true,"types":["hashbrown::set::SymmetricDifference"]},{"text":"impl&lt;'a, T, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Union.html\" title=\"struct hashbrown::hash_set::Union\">Union</a>&lt;'a, T, S, A&gt;","synthetic":true,"types":["hashbrown::set::Union"]},{"text":"impl Freeze for <a class=\"enum\" href=\"hashbrown/enum.TryReserveError.html\" title=\"enum hashbrown::TryReserveError\">TryReserveError</a>","synthetic":true,"types":["hashbrown::TryReserveError"]}];
implementors["headers"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"headers/struct.AcceptRanges.html\" title=\"struct headers::AcceptRanges\">AcceptRanges</a>","synthetic":true,"types":["headers::common::accept_ranges::AcceptRanges"]},{"text":"impl Freeze for <a class=\"struct\" href=\"headers/struct.AccessControlAllowCredentials.html\" title=\"struct headers::AccessControlAllowCredentials\">AccessControlAllowCredentials</a>","synthetic":true,"types":["headers::common::access_control_allow_credentials::AccessControlAllowCredentials"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"headers/struct.AccessControlAllowHeaders.html\" title=\"struct headers::AccessControlAllowHeaders\">AccessControlAllowHeaders</a>","synthetic":true,"types":["headers::common::access_control_allow_headers::AccessControlAllowHeaders"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"headers/struct.AccessControlAllowMethods.html\" title=\"struct headers::AccessControlAllowMethods\">AccessControlAllowMethods</a>","synthetic":true,"types":["headers::common::access_control_allow_methods::AccessControlAllowMethods"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"headers/struct.AccessControlAllowOrigin.html\" title=\"struct headers::AccessControlAllowOrigin\">AccessControlAllowOrigin</a>","synthetic":true,"types":["headers::common::access_control_allow_origin::AccessControlAllowOrigin"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"headers/struct.AccessControlExposeHeaders.html\" title=\"struct headers::AccessControlExposeHeaders\">AccessControlExposeHeaders</a>","synthetic":true,"types":["headers::common::access_control_expose_headers::AccessControlExposeHeaders"]},{"text":"impl Freeze for <a class=\"struct\" href=\"headers/struct.AccessControlMaxAge.html\" title=\"struct headers::AccessControlMaxAge\">AccessControlMaxAge</a>","synthetic":true,"types":["headers::common::access_control_max_age::AccessControlMaxAge"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"headers/struct.AccessControlRequestHeaders.html\" title=\"struct headers::AccessControlRequestHeaders\">AccessControlRequestHeaders</a>","synthetic":true,"types":["headers::common::access_control_request_headers::AccessControlRequestHeaders"]},{"text":"impl Freeze for <a class=\"struct\" href=\"headers/struct.AccessControlRequestMethod.html\" title=\"struct headers::AccessControlRequestMethod\">AccessControlRequestMethod</a>","synthetic":true,"types":["headers::common::access_control_request_method::AccessControlRequestMethod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"headers/struct.Age.html\" title=\"struct headers::Age\">Age</a>","synthetic":true,"types":["headers::common::age::Age"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"headers/struct.Allow.html\" title=\"struct headers::Allow\">Allow</a>","synthetic":true,"types":["headers::common::allow::Allow"]},{"text":"impl&lt;C&gt; Freeze for <a class=\"struct\" href=\"headers/authorization/struct.Authorization.html\" title=\"struct headers::authorization::Authorization\">Authorization</a>&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,&nbsp;</span>","synthetic":true,"types":["headers::common::authorization::Authorization"]},{"text":"impl Freeze for <a class=\"struct\" href=\"headers/authorization/struct.Basic.html\" title=\"struct headers::authorization::Basic\">Basic</a>","synthetic":true,"types":["headers::common::authorization::Basic"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"headers/authorization/struct.Bearer.html\" title=\"struct headers::authorization::Bearer\">Bearer</a>","synthetic":true,"types":["headers::common::authorization::Bearer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"headers/struct.CacheControl.html\" title=\"struct headers::CacheControl\">CacheControl</a>","synthetic":true,"types":["headers::common::cache_control::CacheControl"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"headers/struct.Connection.html\" title=\"struct headers::Connection\">Connection</a>","synthetic":true,"types":["headers::common::connection::Connection"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"headers/struct.ContentDisposition.html\" title=\"struct headers::ContentDisposition\">ContentDisposition</a>","synthetic":true,"types":["headers::common::content_disposition::ContentDisposition"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"headers/struct.ContentEncoding.html\" title=\"struct headers::ContentEncoding\">ContentEncoding</a>","synthetic":true,"types":["headers::common::content_encoding::ContentEncoding"]},{"text":"impl Freeze for <a class=\"struct\" href=\"headers/struct.ContentLength.html\" title=\"struct headers::ContentLength\">ContentLength</a>","synthetic":true,"types":["headers::common::content_length::ContentLength"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"headers/struct.ContentLocation.html\" title=\"struct headers::ContentLocation\">ContentLocation</a>","synthetic":true,"types":["headers::common::content_location::ContentLocation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"headers/struct.ContentRange.html\" title=\"struct headers::ContentRange\">ContentRange</a>","synthetic":true,"types":["headers::common::content_range::ContentRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"headers/struct.ContentType.html\" title=\"struct headers::ContentType\">ContentType</a>","synthetic":true,"types":["headers::common::content_type::ContentType"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"headers/struct.Cookie.html\" title=\"struct headers::Cookie\">Cookie</a>","synthetic":true,"types":["headers::common::cookie::Cookie"]},{"text":"impl Freeze for <a class=\"struct\" href=\"headers/struct.Date.html\" title=\"struct headers::Date\">Date</a>","synthetic":true,"types":["headers::common::date::Date"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"headers/struct.ETag.html\" title=\"struct headers::ETag\">ETag</a>","synthetic":true,"types":["headers::common::etag::ETag"]},{"text":"impl Freeze for <a class=\"struct\" href=\"headers/struct.Expect.html\" title=\"struct headers::Expect\">Expect</a>","synthetic":true,"types":["headers::common::expect::Expect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"headers/struct.Expires.html\" title=\"struct headers::Expires\">Expires</a>","synthetic":true,"types":["headers::common::expires::Expires"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"headers/struct.Host.html\" title=\"struct headers::Host\">Host</a>","synthetic":true,"types":["headers::common::host::Host"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"headers/struct.IfMatch.html\" title=\"struct headers::IfMatch\">IfMatch</a>","synthetic":true,"types":["headers::common::if_match::IfMatch"]},{"text":"impl Freeze for <a class=\"struct\" href=\"headers/struct.IfModifiedSince.html\" title=\"struct headers::IfModifiedSince\">IfModifiedSince</a>","synthetic":true,"types":["headers::common::if_modified_since::IfModifiedSince"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"headers/struct.IfNoneMatch.html\" title=\"struct headers::IfNoneMatch\">IfNoneMatch</a>","synthetic":true,"types":["headers::common::if_none_match::IfNoneMatch"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"headers/struct.IfRange.html\" title=\"struct headers::IfRange\">IfRange</a>","synthetic":true,"types":["headers::common::if_range::IfRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"headers/struct.IfUnmodifiedSince.html\" title=\"struct headers::IfUnmodifiedSince\">IfUnmodifiedSince</a>","synthetic":true,"types":["headers::common::if_unmodified_since::IfUnmodifiedSince"]},{"text":"impl Freeze for <a class=\"struct\" href=\"headers/struct.LastModified.html\" title=\"struct headers::LastModified\">LastModified</a>","synthetic":true,"types":["headers::common::last_modified::LastModified"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"headers/struct.Location.html\" title=\"struct headers::Location\">Location</a>","synthetic":true,"types":["headers::common::location::Location"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"headers/struct.Origin.html\" title=\"struct headers::Origin\">Origin</a>","synthetic":true,"types":["headers::common::origin::Origin"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"headers/struct.Pragma.html\" title=\"struct headers::Pragma\">Pragma</a>","synthetic":true,"types":["headers::common::pragma::Pragma"]},{"text":"impl&lt;C&gt; Freeze for <a class=\"struct\" href=\"headers/struct.ProxyAuthorization.html\" title=\"struct headers::ProxyAuthorization\">ProxyAuthorization</a>&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,&nbsp;</span>","synthetic":true,"types":["headers::common::proxy_authorization::ProxyAuthorization"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"headers/struct.Range.html\" title=\"struct headers::Range\">Range</a>","synthetic":true,"types":["headers::common::range::Range"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"headers/struct.Referer.html\" title=\"struct headers::Referer\">Referer</a>","synthetic":true,"types":["headers::common::referer::Referer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"headers/struct.ReferrerPolicy.html\" title=\"struct headers::ReferrerPolicy\">ReferrerPolicy</a>","synthetic":true,"types":["headers::common::referrer_policy::ReferrerPolicy"]},{"text":"impl Freeze for <a class=\"struct\" href=\"headers/struct.RetryAfter.html\" title=\"struct headers::RetryAfter\">RetryAfter</a>","synthetic":true,"types":["headers::common::retry_after::RetryAfter"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"headers/struct.SecWebsocketAccept.html\" title=\"struct headers::SecWebsocketAccept\">SecWebsocketAccept</a>","synthetic":true,"types":["headers::common::sec_websocket_accept::SecWebsocketAccept"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"headers/struct.SecWebsocketKey.html\" title=\"struct headers::SecWebsocketKey\">SecWebsocketKey</a>","synthetic":true,"types":["headers::common::sec_websocket_key::SecWebsocketKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"headers/struct.SecWebsocketVersion.html\" title=\"struct headers::SecWebsocketVersion\">SecWebsocketVersion</a>","synthetic":true,"types":["headers::common::sec_websocket_version::SecWebsocketVersion"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"headers/struct.Server.html\" title=\"struct headers::Server\">Server</a>","synthetic":true,"types":["headers::common::server::Server"]},{"text":"impl Freeze for <a class=\"struct\" href=\"headers/struct.SetCookie.html\" title=\"struct headers::SetCookie\">SetCookie</a>","synthetic":true,"types":["headers::common::set_cookie::SetCookie"]},{"text":"impl Freeze for <a class=\"struct\" href=\"headers/struct.StrictTransportSecurity.html\" title=\"struct headers::StrictTransportSecurity\">StrictTransportSecurity</a>","synthetic":true,"types":["headers::common::strict_transport_security::StrictTransportSecurity"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"headers/struct.Te.html\" title=\"struct headers::Te\">Te</a>","synthetic":true,"types":["headers::common::te::Te"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"headers/struct.TransferEncoding.html\" title=\"struct headers::TransferEncoding\">TransferEncoding</a>","synthetic":true,"types":["headers::common::transfer_encoding::TransferEncoding"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"headers/struct.Upgrade.html\" title=\"struct headers::Upgrade\">Upgrade</a>","synthetic":true,"types":["headers::common::upgrade::Upgrade"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"headers/struct.UserAgent.html\" title=\"struct headers::UserAgent\">UserAgent</a>","synthetic":true,"types":["headers::common::user_agent::UserAgent"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"headers/struct.Vary.html\" title=\"struct headers::Vary\">Vary</a>","synthetic":true,"types":["headers::common::vary::Vary"]}];
implementors["headers_core"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"headers_core/struct.Error.html\" title=\"struct headers_core::Error\">Error</a>","synthetic":true,"types":["headers_core::Error"]}];
implementors["hex"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"hex/enum.FromHexError.html\" title=\"enum hex::FromHexError\">FromHexError</a>","synthetic":true,"types":["hex::error::FromHexError"]}];
implementors["hkdf"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"hkdf/struct.InvalidPrkLength.html\" title=\"struct hkdf::InvalidPrkLength\">InvalidPrkLength</a>","synthetic":true,"types":["hkdf::InvalidPrkLength"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hkdf/struct.InvalidLength.html\" title=\"struct hkdf::InvalidLength\">InvalidLength</a>","synthetic":true,"types":["hkdf::InvalidLength"]},{"text":"impl&lt;D&gt; Freeze for <a class=\"struct\" href=\"hkdf/struct.HkdfExtract.html\" title=\"struct hkdf::HkdfExtract\">HkdfExtract</a>&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;D as <a class=\"trait\" href=\"digest/trait.BlockInput.html\" title=\"trait digest::BlockInput\">BlockInput</a>&gt;::<a class=\"associatedtype\" href=\"digest/trait.BlockInput.html#associatedtype.BlockSize\" title=\"type digest::BlockInput::BlockSize\">BlockSize</a> as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.61.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["hkdf::HkdfExtract"]},{"text":"impl&lt;D&gt; Freeze for <a class=\"struct\" href=\"hkdf/struct.Hkdf.html\" title=\"struct hkdf::Hkdf\">Hkdf</a>&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;D as <a class=\"trait\" href=\"digest/trait.BlockInput.html\" title=\"trait digest::BlockInput\">BlockInput</a>&gt;::<a class=\"associatedtype\" href=\"digest/trait.BlockInput.html#associatedtype.BlockSize\" title=\"type digest::BlockInput::BlockSize\">BlockSize</a> as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.61.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["hkdf::Hkdf"]}];
implementors["hmac"] = [{"text":"impl&lt;D&gt; Freeze for <a class=\"struct\" href=\"hmac/struct.Hmac.html\" title=\"struct hmac::Hmac\">Hmac</a>&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;D as BlockInput&gt;::BlockSize as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.61.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["hmac::Hmac"]}];
implementors["http"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.HeaderMap.html\" title=\"struct http::header::HeaderMap\">HeaderMap</a>&lt;T&gt;","synthetic":true,"types":["http::header::map::HeaderMap"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.Iter.html\" title=\"struct http::header::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.IterMut.html\" title=\"struct http::header::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::IterMut"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.IntoIter.html\" title=\"struct http::header::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["http::header::map::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.Keys.html\" title=\"struct http::header::Keys\">Keys</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::Keys"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.Values.html\" title=\"struct http::header::Values\">Values</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::Values"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.ValuesMut.html\" title=\"struct http::header::ValuesMut\">ValuesMut</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::ValuesMut"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.Drain.html\" title=\"struct http::header::Drain\">Drain</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::Drain"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.GetAll.html\" title=\"struct http::header::GetAll\">GetAll</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::GetAll"]},{"text":"impl&lt;'a, T&gt; !Freeze for <a class=\"enum\" href=\"http/header/enum.Entry.html\" title=\"enum http::header::Entry\">Entry</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::Entry"]},{"text":"impl&lt;'a, T&gt; !Freeze for <a class=\"struct\" href=\"http/header/struct.VacantEntry.html\" title=\"struct http::header::VacantEntry\">VacantEntry</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::VacantEntry"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.OccupiedEntry.html\" title=\"struct http::header::OccupiedEntry\">OccupiedEntry</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::OccupiedEntry"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.ValueIter.html\" title=\"struct http::header::ValueIter\">ValueIter</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::ValueIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.ValueIterMut.html\" title=\"struct http::header::ValueIterMut\">ValueIterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::ValueIterMut"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.ValueDrain.html\" title=\"struct http::header::ValueDrain\">ValueDrain</a>&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["http::header::map::ValueDrain"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/header/struct.HeaderName.html\" title=\"struct http::header::HeaderName\">HeaderName</a>","synthetic":true,"types":["http::header::name::HeaderName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/header/struct.InvalidHeaderName.html\" title=\"struct http::header::InvalidHeaderName\">InvalidHeaderName</a>","synthetic":true,"types":["http::header::name::InvalidHeaderName"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/header/struct.HeaderValue.html\" title=\"struct http::header::HeaderValue\">HeaderValue</a>","synthetic":true,"types":["http::header::value::HeaderValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/header/struct.InvalidHeaderValue.html\" title=\"struct http::header::InvalidHeaderValue\">InvalidHeaderValue</a>","synthetic":true,"types":["http::header::value::InvalidHeaderValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/header/struct.ToStrError.html\" title=\"struct http::header::ToStrError\">ToStrError</a>","synthetic":true,"types":["http::header::value::ToStrError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/method/struct.Method.html\" title=\"struct http::method::Method\">Method</a>","synthetic":true,"types":["http::method::Method"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/method/struct.InvalidMethod.html\" title=\"struct http::method::InvalidMethod\">InvalidMethod</a>","synthetic":true,"types":["http::method::InvalidMethod"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;T&gt;","synthetic":true,"types":["http::request::Request"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/request/struct.Parts.html\" title=\"struct http::request::Parts\">Parts</a>","synthetic":true,"types":["http::request::Parts"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/request/struct.Builder.html\" title=\"struct http::request::Builder\">Builder</a>","synthetic":true,"types":["http::request::Builder"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["http::response::Response"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/response/struct.Parts.html\" title=\"struct http::response::Parts\">Parts</a>","synthetic":true,"types":["http::response::Parts"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/response/struct.Builder.html\" title=\"struct http::response::Builder\">Builder</a>","synthetic":true,"types":["http::response::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/status/struct.StatusCode.html\" title=\"struct http::status::StatusCode\">StatusCode</a>","synthetic":true,"types":["http::status::StatusCode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/status/struct.InvalidStatusCode.html\" title=\"struct http::status::InvalidStatusCode\">InvalidStatusCode</a>","synthetic":true,"types":["http::status::InvalidStatusCode"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/uri/struct.Authority.html\" title=\"struct http::uri::Authority\">Authority</a>","synthetic":true,"types":["http::uri::authority::Authority"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/uri/struct.Builder.html\" title=\"struct http::uri::Builder\">Builder</a>","synthetic":true,"types":["http::uri::builder::Builder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/uri/struct.PathAndQuery.html\" title=\"struct http::uri::PathAndQuery\">PathAndQuery</a>","synthetic":true,"types":["http::uri::path::PathAndQuery"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"http/uri/struct.Port.html\" title=\"struct http::uri::Port\">Port</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["http::uri::port::Port"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/uri/struct.Scheme.html\" title=\"struct http::uri::Scheme\">Scheme</a>","synthetic":true,"types":["http::uri::scheme::Scheme"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/uri/struct.Uri.html\" title=\"struct http::uri::Uri\">Uri</a>","synthetic":true,"types":["http::uri::Uri"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/uri/struct.Parts.html\" title=\"struct http::uri::Parts\">Parts</a>","synthetic":true,"types":["http::uri::Parts"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/uri/struct.InvalidUri.html\" title=\"struct http::uri::InvalidUri\">InvalidUri</a>","synthetic":true,"types":["http::uri::InvalidUri"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/uri/struct.InvalidUriParts.html\" title=\"struct http::uri::InvalidUriParts\">InvalidUriParts</a>","synthetic":true,"types":["http::uri::InvalidUriParts"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/version/struct.Version.html\" title=\"struct http::version::Version\">Version</a>","synthetic":true,"types":["http::version::Version"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/struct.Error.html\" title=\"struct http::Error\">Error</a>","synthetic":true,"types":["http::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/struct.Extensions.html\" title=\"struct http::Extensions\">Extensions</a>","synthetic":true,"types":["http::extensions::Extensions"]}];
implementors["http_body"] = [{"text":"impl&lt;D&gt; Freeze for <a class=\"struct\" href=\"http_body/struct.Empty.html\" title=\"struct http_body::Empty\">Empty</a>&lt;D&gt;","synthetic":true,"types":["http_body::empty::Empty"]},{"text":"impl&lt;D&gt; Freeze for <a class=\"struct\" href=\"http_body/struct.Full.html\" title=\"struct http_body::Full\">Full</a>&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["http_body::full::Full"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"http_body/struct.Limited.html\" title=\"struct http_body::Limited\">Limited</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["http_body::limited::Limited"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http_body/struct.LengthLimitError.html\" title=\"struct http_body::LengthLimitError\">LengthLimitError</a>","synthetic":true,"types":["http_body::limited::LengthLimitError"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"http_body/struct.Data.html\" title=\"struct http_body::Data\">Data</a>&lt;'a, T&gt;","synthetic":true,"types":["http_body::next::Data"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"http_body/struct.Trailers.html\" title=\"struct http_body::Trailers\">Trailers</a>&lt;'a, T&gt;","synthetic":true,"types":["http_body::next::Trailers"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http_body/struct.SizeHint.html\" title=\"struct http_body::SizeHint\">SizeHint</a>","synthetic":true,"types":["http_body::size_hint::SizeHint"]},{"text":"impl&lt;D, E&gt; Freeze for <a class=\"struct\" href=\"http_body/combinators/struct.BoxBody.html\" title=\"struct http_body::combinators::BoxBody\">BoxBody</a>&lt;D, E&gt;","synthetic":true,"types":["http_body::combinators::box_body::BoxBody"]},{"text":"impl&lt;D, E&gt; Freeze for <a class=\"struct\" href=\"http_body/combinators/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;D, E&gt;","synthetic":true,"types":["http_body::combinators::box_body::UnsyncBoxBody"]},{"text":"impl&lt;B, F&gt; Freeze for <a class=\"struct\" href=\"http_body/combinators/struct.MapData.html\" title=\"struct http_body::combinators::MapData\">MapData</a>&lt;B, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["http_body::combinators::map_data::MapData"]},{"text":"impl&lt;B, F&gt; Freeze for <a class=\"struct\" href=\"http_body/combinators/struct.MapErr.html\" title=\"struct http_body::combinators::MapErr\">MapErr</a>&lt;B, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["http_body::combinators::map_err::MapErr"]}];
implementors["httparse"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"httparse/enum.Error.html\" title=\"enum httparse::Error\">Error</a>","synthetic":true,"types":["httparse::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"httparse/struct.InvalidChunkSize.html\" title=\"struct httparse::InvalidChunkSize\">InvalidChunkSize</a>","synthetic":true,"types":["httparse::InvalidChunkSize"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"httparse/enum.Status.html\" title=\"enum httparse::Status\">Status</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["httparse::Status"]},{"text":"impl Freeze for <a class=\"struct\" href=\"httparse/struct.ParserConfig.html\" title=\"struct httparse::ParserConfig\">ParserConfig</a>","synthetic":true,"types":["httparse::ParserConfig"]},{"text":"impl&lt;'headers, 'buf&gt; Freeze for <a class=\"struct\" href=\"httparse/struct.Request.html\" title=\"struct httparse::Request\">Request</a>&lt;'headers, 'buf&gt;","synthetic":true,"types":["httparse::Request"]},{"text":"impl&lt;'headers, 'buf&gt; Freeze for <a class=\"struct\" href=\"httparse/struct.Response.html\" title=\"struct httparse::Response\">Response</a>&lt;'headers, 'buf&gt;","synthetic":true,"types":["httparse::Response"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"httparse/struct.Header.html\" title=\"struct httparse::Header\">Header</a>&lt;'a&gt;","synthetic":true,"types":["httparse::Header"]}];
implementors["httpdate"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"httpdate/struct.HttpDate.html\" title=\"struct httpdate::HttpDate\">HttpDate</a>","synthetic":true,"types":["httpdate::date::HttpDate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"httpdate/struct.Error.html\" title=\"struct httpdate::Error\">Error</a>","synthetic":true,"types":["httpdate::Error"]}];
implementors["humansize"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"humansize/file_size_opts/enum.Kilo.html\" title=\"enum humansize::file_size_opts::Kilo\">Kilo</a>","synthetic":true,"types":["humansize::file_size_opts::Kilo"]},{"text":"impl Freeze for <a class=\"enum\" href=\"humansize/file_size_opts/enum.FixedAt.html\" title=\"enum humansize::file_size_opts::FixedAt\">FixedAt</a>","synthetic":true,"types":["humansize::file_size_opts::FixedAt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"humansize/file_size_opts/struct.FileSizeOpts.html\" title=\"struct humansize::file_size_opts::FileSizeOpts\">FileSizeOpts</a>","synthetic":true,"types":["humansize::file_size_opts::FileSizeOpts"]}];
implementors["hyper"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"hyper/body/struct.Body.html\" title=\"struct hyper::body::Body\">Body</a>","synthetic":true,"types":["hyper::body::body::Body"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hyper/body/struct.Sender.html\" title=\"struct hyper::body::Sender\">Sender</a>","synthetic":true,"types":["hyper::body::body::Sender"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hyper/struct.Error.html\" title=\"struct hyper::Error\">Error</a>","synthetic":true,"types":["hyper::error::Error"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"hyper/ext/struct.Protocol.html\" title=\"struct hyper::ext::Protocol\">Protocol</a>","synthetic":true,"types":["hyper::ext::Protocol"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"hyper/upgrade/struct.Upgraded.html\" title=\"struct hyper::upgrade::Upgraded\">Upgraded</a>","synthetic":true,"types":["hyper::upgrade::Upgraded"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hyper/upgrade/struct.OnUpgrade.html\" title=\"struct hyper::upgrade::OnUpgrade\">OnUpgrade</a>","synthetic":true,"types":["hyper::upgrade::OnUpgrade"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"hyper/upgrade/struct.Parts.html\" title=\"struct hyper::upgrade::Parts\">Parts</a>&lt;T&gt;","synthetic":true,"types":["hyper::upgrade::Parts"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hyper/client/connect/dns/struct.Name.html\" title=\"struct hyper::client::connect::dns::Name\">Name</a>","synthetic":true,"types":["hyper::client::connect::dns::Name"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hyper/client/connect/dns/struct.GaiResolver.html\" title=\"struct hyper::client::connect::dns::GaiResolver\">GaiResolver</a>","synthetic":true,"types":["hyper::client::connect::dns::GaiResolver"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hyper/client/connect/dns/struct.GaiAddrs.html\" title=\"struct hyper::client::connect::dns::GaiAddrs\">GaiAddrs</a>","synthetic":true,"types":["hyper::client::connect::dns::GaiAddrs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hyper/client/connect/dns/struct.GaiFuture.html\" title=\"struct hyper::client::connect::dns::GaiFuture\">GaiFuture</a>","synthetic":true,"types":["hyper::client::connect::dns::GaiFuture"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hyper/client/connect/dns/struct.InvalidNameError.html\" title=\"struct hyper::client::connect::dns::InvalidNameError\">InvalidNameError</a>","synthetic":true,"types":["hyper::client::connect::dns::InvalidNameError"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"hyper/client/connect/struct.HttpConnector.html\" title=\"struct hyper::client::connect::HttpConnector\">HttpConnector</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["hyper::client::connect::http::HttpConnector"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hyper/client/connect/struct.HttpInfo.html\" title=\"struct hyper::client::connect::HttpInfo\">HttpInfo</a>","synthetic":true,"types":["hyper::client::connect::http::HttpInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hyper/client/connect/struct.Connected.html\" title=\"struct hyper::client::connect::Connected\">Connected</a>","synthetic":true,"types":["hyper::client::connect::Connected"]},{"text":"impl&lt;C, B&gt; Freeze for <a class=\"struct\" href=\"hyper/client/struct.Client.html\" title=\"struct hyper::client::Client\">Client</a>&lt;C, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,&nbsp;</span>","synthetic":true,"types":["hyper::client::client::Client"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hyper/client/struct.ResponseFuture.html\" title=\"struct hyper::client::ResponseFuture\">ResponseFuture</a>","synthetic":true,"types":["hyper::client::client::ResponseFuture"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hyper/client/struct.Builder.html\" title=\"struct hyper::client::Builder\">Builder</a>","synthetic":true,"types":["hyper::client::client::Builder"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"hyper/client/conn/struct.SendRequest.html\" title=\"struct hyper::client::conn::SendRequest\">SendRequest</a>&lt;B&gt;","synthetic":true,"types":["hyper::client::conn::SendRequest"]},{"text":"impl&lt;T, B&gt; Freeze for <a class=\"struct\" href=\"hyper/client/conn/struct.Connection.html\" title=\"struct hyper::client::conn::Connection\">Connection</a>&lt;T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["hyper::client::conn::Connection"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hyper/client/conn/struct.Builder.html\" title=\"struct hyper::client::conn::Builder\">Builder</a>","synthetic":true,"types":["hyper::client::conn::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hyper/client/conn/struct.ResponseFuture.html\" title=\"struct hyper::client::conn::ResponseFuture\">ResponseFuture</a>","synthetic":true,"types":["hyper::client::conn::ResponseFuture"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"hyper/client/conn/struct.Parts.html\" title=\"struct hyper::client::conn::Parts\">Parts</a>&lt;T&gt;","synthetic":true,"types":["hyper::client::conn::Parts"]},{"text":"impl&lt;C, B, T&gt; Freeze for <a class=\"struct\" href=\"hyper/client/service/struct.Connect.html\" title=\"struct hyper::client::service::Connect\">Connect</a>&lt;C, B, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,&nbsp;</span>","synthetic":true,"types":["hyper::client::service::Connect"]},{"text":"impl&lt;I, F, E&gt; Freeze for <a class=\"struct\" href=\"hyper/server/conn/struct.Connecting.html\" title=\"struct hyper::server::conn::Connecting\">Connecting</a>&lt;I, F, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["hyper::server::server::Connecting"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"hyper/server/conn/struct.AddrIncoming.html\" title=\"struct hyper::server::conn::AddrIncoming\">AddrIncoming</a>","synthetic":true,"types":["hyper::server::tcp::AddrIncoming"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"hyper/server/conn/struct.AddrStream.html\" title=\"struct hyper::server::conn::AddrStream\">AddrStream</a>","synthetic":true,"types":["hyper::server::tcp::addr_stream::AddrStream"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"hyper/server/conn/struct.Http.html\" title=\"struct hyper::server::conn::Http\">Http</a>&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":["hyper::server::conn::Http"]},{"text":"impl&lt;T, S, E&nbsp;=&nbsp;Exec&gt; !Freeze for <a class=\"struct\" href=\"hyper/server/conn/struct.Connection.html\" title=\"struct hyper::server::conn::Connection\">Connection</a>&lt;T, S, E&gt;","synthetic":true,"types":["hyper::server::conn::Connection"]},{"text":"impl&lt;T, S&gt; !Freeze for <a class=\"struct\" href=\"hyper/server/conn/struct.Parts.html\" title=\"struct hyper::server::conn::Parts\">Parts</a>&lt;T, S&gt;","synthetic":true,"types":["hyper::server::conn::Parts"]},{"text":"impl&lt;I, S, E&gt; Freeze for <a class=\"struct\" href=\"hyper/server/struct.Server.html\" title=\"struct hyper::server::Server\">Server</a>&lt;I, S, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["hyper::server::server::Server"]},{"text":"impl&lt;I, E&gt; Freeze for <a class=\"struct\" href=\"hyper/server/struct.Builder.html\" title=\"struct hyper::server::Builder\">Builder</a>&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["hyper::server::server::Builder"]}];
implementors["hyper_tls"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"hyper_tls/struct.HttpsConnector.html\" title=\"struct hyper_tls::HttpsConnector\">HttpsConnector</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["hyper_tls::client::HttpsConnector"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"hyper_tls/struct.HttpsConnecting.html\" title=\"struct hyper_tls::HttpsConnecting\">HttpsConnecting</a>&lt;T&gt;","synthetic":true,"types":["hyper_tls::client::HttpsConnecting"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"hyper_tls/enum.MaybeHttpsStream.html\" title=\"enum hyper_tls::MaybeHttpsStream\">MaybeHttpsStream</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["hyper_tls::stream::MaybeHttpsStream"]}];
implementors["idna"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"idna/struct.Idna.html\" title=\"struct idna::Idna\">Idna</a>","synthetic":true,"types":["idna::uts46::Idna"]},{"text":"impl Freeze for <a class=\"struct\" href=\"idna/struct.Config.html\" title=\"struct idna::Config\">Config</a>","synthetic":true,"types":["idna::uts46::Config"]},{"text":"impl Freeze for <a class=\"struct\" href=\"idna/struct.Errors.html\" title=\"struct idna::Errors\">Errors</a>","synthetic":true,"types":["idna::uts46::Errors"]}];
implementors["ignore"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"ignore/gitignore/struct.Glob.html\" title=\"struct ignore::gitignore::Glob\">Glob</a>","synthetic":true,"types":["ignore::gitignore::Glob"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ignore/gitignore/struct.Gitignore.html\" title=\"struct ignore::gitignore::Gitignore\">Gitignore</a>","synthetic":true,"types":["ignore::gitignore::Gitignore"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ignore/gitignore/struct.GitignoreBuilder.html\" title=\"struct ignore::gitignore::GitignoreBuilder\">GitignoreBuilder</a>","synthetic":true,"types":["ignore::gitignore::GitignoreBuilder"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"ignore/overrides/struct.Glob.html\" title=\"struct ignore::overrides::Glob\">Glob</a>&lt;'a&gt;","synthetic":true,"types":["ignore::overrides::Glob"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ignore/overrides/struct.Override.html\" title=\"struct ignore::overrides::Override\">Override</a>","synthetic":true,"types":["ignore::overrides::Override"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ignore/overrides/struct.OverrideBuilder.html\" title=\"struct ignore::overrides::OverrideBuilder\">OverrideBuilder</a>","synthetic":true,"types":["ignore::overrides::OverrideBuilder"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"ignore/types/struct.Glob.html\" title=\"struct ignore::types::Glob\">Glob</a>&lt;'a&gt;","synthetic":true,"types":["ignore::types::Glob"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ignore/types/struct.FileTypeDef.html\" title=\"struct ignore::types::FileTypeDef\">FileTypeDef</a>","synthetic":true,"types":["ignore::types::FileTypeDef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ignore/types/struct.Types.html\" title=\"struct ignore::types::Types\">Types</a>","synthetic":true,"types":["ignore::types::Types"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ignore/types/struct.TypesBuilder.html\" title=\"struct ignore::types::TypesBuilder\">TypesBuilder</a>","synthetic":true,"types":["ignore::types::TypesBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ignore/struct.DirEntry.html\" title=\"struct ignore::DirEntry\">DirEntry</a>","synthetic":true,"types":["ignore::walk::DirEntry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ignore/struct.WalkBuilder.html\" title=\"struct ignore::WalkBuilder\">WalkBuilder</a>","synthetic":true,"types":["ignore::walk::WalkBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ignore/struct.Walk.html\" title=\"struct ignore::Walk\">Walk</a>","synthetic":true,"types":["ignore::walk::Walk"]},{"text":"impl Freeze for <a class=\"enum\" href=\"ignore/enum.WalkState.html\" title=\"enum ignore::WalkState\">WalkState</a>","synthetic":true,"types":["ignore::walk::WalkState"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ignore/struct.WalkParallel.html\" title=\"struct ignore::WalkParallel\">WalkParallel</a>","synthetic":true,"types":["ignore::walk::WalkParallel"]},{"text":"impl Freeze for <a class=\"enum\" href=\"ignore/enum.Error.html\" title=\"enum ignore::Error\">Error</a>","synthetic":true,"types":["ignore::Error"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"ignore/enum.Match.html\" title=\"enum ignore::Match\">Match</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["ignore::Match"]}];
implementors["im"] = [{"text":"impl&lt;'a, A&gt; Freeze for <a class=\"struct\" href=\"im/ordmap/struct.RangedIter.html\" title=\"struct im::ordmap::RangedIter\">Iter</a>&lt;'a, A&gt;","synthetic":true,"types":["im::nodes::btree::Iter"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"im/ordmap/struct.ConsumingIter.html\" title=\"struct im::ordmap::ConsumingIter\">ConsumingIter</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["im::nodes::btree::ConsumingIter"]},{"text":"impl&lt;'a, A&gt; Freeze for <a class=\"struct\" href=\"im/ordmap/struct.NodeDiffIter.html\" title=\"struct im::ordmap::NodeDiffIter\">DiffIter</a>&lt;'a, A&gt;","synthetic":true,"types":["im::nodes::btree::DiffIter"]},{"text":"impl&lt;'a, A&gt; Freeze for <a class=\"enum\" href=\"im/ordmap/enum.NodeDiffItem.html\" title=\"enum im::ordmap::NodeDiffItem\">DiffItem</a>&lt;'a, A&gt;","synthetic":true,"types":["im::nodes::btree::DiffItem"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"im/ordmap/struct.OrdMapPool.html\" title=\"struct im::ordmap::OrdMapPool\">OrdMapPool</a>&lt;K, V&gt;","synthetic":true,"types":["im::ord::map::OrdMapPool"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"im/ordmap/struct.OrdMap.html\" title=\"struct im::ordmap::OrdMap\">OrdMap</a>&lt;K, V&gt;","synthetic":true,"types":["im::ord::map::OrdMap"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"enum\" href=\"im/ordmap/enum.Entry.html\" title=\"enum im::ordmap::Entry\">Entry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["im::ord::map::Entry"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"im/ordmap/struct.OccupiedEntry.html\" title=\"struct im::ordmap::OccupiedEntry\">OccupiedEntry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["im::ord::map::OccupiedEntry"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"im/ordmap/struct.VacantEntry.html\" title=\"struct im::ordmap::VacantEntry\">VacantEntry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["im::ord::map::VacantEntry"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"im/ordmap/struct.Iter.html\" title=\"struct im::ordmap::Iter\">Iter</a>&lt;'a, K, V&gt;","synthetic":true,"types":["im::ord::map::Iter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"im/ordmap/struct.DiffIter.html\" title=\"struct im::ordmap::DiffIter\">DiffIter</a>&lt;'a, K, V&gt;","synthetic":true,"types":["im::ord::map::DiffIter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"enum\" href=\"im/ordmap/enum.DiffItem.html\" title=\"enum im::ordmap::DiffItem\">DiffItem</a>&lt;'a, K, V&gt;","synthetic":true,"types":["im::ord::map::DiffItem"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"im/ordmap/struct.Keys.html\" title=\"struct im::ordmap::Keys\">Keys</a>&lt;'a, K, V&gt;","synthetic":true,"types":["im::ord::map::Keys"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"im/ordmap/struct.Values.html\" title=\"struct im::ordmap::Values\">Values</a>&lt;'a, K, V&gt;","synthetic":true,"types":["im::ord::map::Values"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"im/ordset/struct.OrdSetPool.html\" title=\"struct im::ordset::OrdSetPool\">OrdSetPool</a>&lt;A&gt;","synthetic":true,"types":["im::ord::set::OrdSetPool"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"im/ordset/struct.OrdSet.html\" title=\"struct im::ordset::OrdSet\">OrdSet</a>&lt;A&gt;","synthetic":true,"types":["im::ord::set::OrdSet"]},{"text":"impl&lt;'a, A&gt; Freeze for <a class=\"struct\" href=\"im/ordset/struct.Iter.html\" title=\"struct im::ordset::Iter\">Iter</a>&lt;'a, A&gt;","synthetic":true,"types":["im::ord::set::Iter"]},{"text":"impl&lt;'a, A&gt; Freeze for <a class=\"struct\" href=\"im/ordset/struct.RangedIter.html\" title=\"struct im::ordset::RangedIter\">RangedIter</a>&lt;'a, A&gt;","synthetic":true,"types":["im::ord::set::RangedIter"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"im/ordset/struct.ConsumingIter.html\" title=\"struct im::ordset::ConsumingIter\">ConsumingIter</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["im::ord::set::ConsumingIter"]},{"text":"impl&lt;'a, A&gt; Freeze for <a class=\"struct\" href=\"im/ordset/struct.DiffIter.html\" title=\"struct im::ordset::DiffIter\">DiffIter</a>&lt;'a, A&gt;","synthetic":true,"types":["im::ord::set::DiffIter"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"im/hashmap/struct.HashMapPool.html\" title=\"struct im::hashmap::HashMapPool\">HashMapPool</a>&lt;K, V&gt;","synthetic":true,"types":["im::hash::map::HashMapPool"]},{"text":"impl&lt;K, V, S&gt; Freeze for <a class=\"struct\" href=\"im/hashmap/struct.HashMap.html\" title=\"struct im::hashmap::HashMap\">HashMap</a>&lt;K, V, S&gt;","synthetic":true,"types":["im::hash::map::HashMap"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"enum\" href=\"im/hashmap/enum.Entry.html\" title=\"enum im::hashmap::Entry\">Entry</a>&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["im::hash::map::Entry"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"im/hashmap/struct.OccupiedEntry.html\" title=\"struct im::hashmap::OccupiedEntry\">OccupiedEntry</a>&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["im::hash::map::OccupiedEntry"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"im/hashmap/struct.VacantEntry.html\" title=\"struct im::hashmap::VacantEntry\">VacantEntry</a>&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["im::hash::map::VacantEntry"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"im/hashmap/struct.Iter.html\" title=\"struct im::hashmap::Iter\">Iter</a>&lt;'a, K, V&gt;","synthetic":true,"types":["im::hash::map::Iter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"im/hashmap/struct.IterMut.html\" title=\"struct im::hashmap::IterMut\">IterMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["im::hash::map::IterMut"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"im/hashmap/struct.ConsumingIter.html\" title=\"struct im::hashmap::ConsumingIter\">ConsumingIter</a>&lt;A&gt;","synthetic":true,"types":["im::hash::map::ConsumingIter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"im/hashmap/struct.Keys.html\" title=\"struct im::hashmap::Keys\">Keys</a>&lt;'a, K, V&gt;","synthetic":true,"types":["im::hash::map::Keys"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"im/hashmap/struct.Values.html\" title=\"struct im::hashmap::Values\">Values</a>&lt;'a, K, V&gt;","synthetic":true,"types":["im::hash::map::Values"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"im/hashset/struct.HashSetPool.html\" title=\"struct im::hashset::HashSetPool\">HashSetPool</a>&lt;A&gt;","synthetic":true,"types":["im::hash::set::HashSetPool"]},{"text":"impl&lt;A, S&gt; Freeze for <a class=\"struct\" href=\"im/hashset/struct.HashSet.html\" title=\"struct im::hashset::HashSet\">HashSet</a>&lt;A, S&gt;","synthetic":true,"types":["im::hash::set::HashSet"]},{"text":"impl&lt;'a, A&gt; Freeze for <a class=\"struct\" href=\"im/hashset/struct.Iter.html\" title=\"struct im::hashset::Iter\">Iter</a>&lt;'a, A&gt;","synthetic":true,"types":["im::hash::set::Iter"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"im/hashset/struct.ConsumingIter.html\" title=\"struct im::hashset::ConsumingIter\">ConsumingIter</a>&lt;A&gt;","synthetic":true,"types":["im::hash::set::ConsumingIter"]},{"text":"impl&lt;'a, A&gt; Freeze for <a class=\"enum\" href=\"im/vector/enum.Focus.html\" title=\"enum im::vector::Focus\">Focus</a>&lt;'a, A&gt;","synthetic":true,"types":["im::vector::focus::Focus"]},{"text":"impl&lt;'a, A&gt; !Freeze for <a class=\"enum\" href=\"im/vector/enum.FocusMut.html\" title=\"enum im::vector::FocusMut\">FocusMut</a>&lt;'a, A&gt;","synthetic":true,"types":["im::vector::focus::FocusMut"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"im/vector/struct.RRBPool.html\" title=\"struct im::vector::RRBPool\">RRBPool</a>&lt;A&gt;","synthetic":true,"types":["im::vector::pool::RRBPool"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"im/struct.Vector.html\" title=\"struct im::Vector\">Vector</a>&lt;A&gt;","synthetic":true,"types":["im::vector::Vector"]},{"text":"impl&lt;'a, A&gt; Freeze for <a class=\"struct\" href=\"im/vector/struct.Iter.html\" title=\"struct im::vector::Iter\">Iter</a>&lt;'a, A&gt;","synthetic":true,"types":["im::vector::Iter"]},{"text":"impl&lt;'a, A&gt; !Freeze for <a class=\"struct\" href=\"im/vector/struct.IterMut.html\" title=\"struct im::vector::IterMut\">IterMut</a>&lt;'a, A&gt;","synthetic":true,"types":["im::vector::IterMut"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"im/vector/struct.ConsumingIter.html\" title=\"struct im::vector::ConsumingIter\">ConsumingIter</a>&lt;A&gt;","synthetic":true,"types":["im::vector::ConsumingIter"]},{"text":"impl&lt;'a, A&gt; Freeze for <a class=\"struct\" href=\"im/vector/struct.Chunks.html\" title=\"struct im::vector::Chunks\">Chunks</a>&lt;'a, A&gt;","synthetic":true,"types":["im::vector::Chunks"]},{"text":"impl&lt;'a, A&gt; !Freeze for <a class=\"struct\" href=\"im/vector/struct.ChunksMut.html\" title=\"struct im::vector::ChunksMut\">ChunksMut</a>&lt;'a, A&gt;","synthetic":true,"types":["im::vector::ChunksMut"]}];
implementors["include_dir"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"include_dir/struct.Dir.html\" title=\"struct include_dir::Dir\">Dir</a>&lt;'a&gt;","synthetic":true,"types":["include_dir::dir::Dir"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"include_dir/enum.DirEntry.html\" title=\"enum include_dir::DirEntry\">DirEntry</a>&lt;'a&gt;","synthetic":true,"types":["include_dir::dir_entry::DirEntry"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"include_dir/struct.File.html\" title=\"struct include_dir::File\">File</a>&lt;'a&gt;","synthetic":true,"types":["include_dir::file::File"]}];
implementors["indexmap"] = [{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.OccupiedEntry.html\" title=\"struct indexmap::map::OccupiedEntry\">OccupiedEntry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["indexmap::map::core::raw::OccupiedEntry"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"enum\" href=\"indexmap/map/enum.Entry.html\" title=\"enum indexmap::map::Entry\">Entry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["indexmap::map::core::Entry"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.VacantEntry.html\" title=\"struct indexmap::map::VacantEntry\">VacantEntry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["indexmap::map::core::VacantEntry"]},{"text":"impl&lt;K, V, S&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.IndexMap.html\" title=\"struct indexmap::map::IndexMap\">IndexMap</a>&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["indexmap::map::IndexMap"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.Keys.html\" title=\"struct indexmap::map::Keys\">Keys</a>&lt;'a, K, V&gt;","synthetic":true,"types":["indexmap::map::Keys"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.IntoKeys.html\" title=\"struct indexmap::map::IntoKeys\">IntoKeys</a>&lt;K, V&gt;","synthetic":true,"types":["indexmap::map::IntoKeys"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.Values.html\" title=\"struct indexmap::map::Values\">Values</a>&lt;'a, K, V&gt;","synthetic":true,"types":["indexmap::map::Values"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.ValuesMut.html\" title=\"struct indexmap::map::ValuesMut\">ValuesMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["indexmap::map::ValuesMut"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.IntoValues.html\" title=\"struct indexmap::map::IntoValues\">IntoValues</a>&lt;K, V&gt;","synthetic":true,"types":["indexmap::map::IntoValues"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.Iter.html\" title=\"struct indexmap::map::Iter\">Iter</a>&lt;'a, K, V&gt;","synthetic":true,"types":["indexmap::map::Iter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.IterMut.html\" title=\"struct indexmap::map::IterMut\">IterMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["indexmap::map::IterMut"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.IntoIter.html\" title=\"struct indexmap::map::IntoIter\">IntoIter</a>&lt;K, V&gt;","synthetic":true,"types":["indexmap::map::IntoIter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.Drain.html\" title=\"struct indexmap::map::Drain\">Drain</a>&lt;'a, K, V&gt;","synthetic":true,"types":["indexmap::map::Drain"]},{"text":"impl&lt;T, S&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["indexmap::set::IndexSet"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.IntoIter.html\" title=\"struct indexmap::set::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["indexmap::set::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.Iter.html\" title=\"struct indexmap::set::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["indexmap::set::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.Drain.html\" title=\"struct indexmap::set::Drain\">Drain</a>&lt;'a, T&gt;","synthetic":true,"types":["indexmap::set::Drain"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.Difference.html\" title=\"struct indexmap::set::Difference\">Difference</a>&lt;'a, T, S&gt;","synthetic":true,"types":["indexmap::set::Difference"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.Intersection.html\" title=\"struct indexmap::set::Intersection\">Intersection</a>&lt;'a, T, S&gt;","synthetic":true,"types":["indexmap::set::Intersection"]},{"text":"impl&lt;'a, T, S1, S2&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.SymmetricDifference.html\" title=\"struct indexmap::set::SymmetricDifference\">SymmetricDifference</a>&lt;'a, T, S1, S2&gt;","synthetic":true,"types":["indexmap::set::SymmetricDifference"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.Union.html\" title=\"struct indexmap::set::Union\">Union</a>&lt;'a, T, S&gt;","synthetic":true,"types":["indexmap::set::Union"]}];
implementors["ini"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"ini/ini/enum.EscapePolicy.html\" title=\"enum ini::ini::EscapePolicy\">EscapePolicy</a>","synthetic":true,"types":["ini::ini::EscapePolicy"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ini/ini/struct.ParseOption.html\" title=\"struct ini::ini::ParseOption\">ParseOption</a>","synthetic":true,"types":["ini::ini::ParseOption"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"ini/ini/struct.SectionSetter.html\" title=\"struct ini::ini::SectionSetter\">SectionSetter</a>&lt;'a&gt;","synthetic":true,"types":["ini::ini::SectionSetter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ini/ini/struct.Ini.html\" title=\"struct ini::ini::Ini\">Ini</a>","synthetic":true,"types":["ini::ini::Ini"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"ini/ini/struct.SectionIterator.html\" title=\"struct ini::ini::SectionIterator\">SectionIterator</a>&lt;'a&gt;","synthetic":true,"types":["ini::ini::SectionIterator"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"ini/ini/struct.SectionMutIterator.html\" title=\"struct ini::ini::SectionMutIterator\">SectionMutIterator</a>&lt;'a&gt;","synthetic":true,"types":["ini::ini::SectionMutIterator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ini/ini/struct.SectionIntoIter.html\" title=\"struct ini::ini::SectionIntoIter\">SectionIntoIter</a>","synthetic":true,"types":["ini::ini::SectionIntoIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ini/ini/struct.ParseError.html\" title=\"struct ini::ini::ParseError\">ParseError</a>","synthetic":true,"types":["ini::ini::ParseError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"ini/ini/enum.Error.html\" title=\"enum ini::ini::Error\">Error</a>","synthetic":true,"types":["ini::ini::Error"]}];
implementors["internment"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"internment/struct.Intern.html\" title=\"struct internment::Intern\">Intern</a>&lt;T&gt;","synthetic":true,"types":["internment::Intern"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"internment/struct.ArcIntern.html\" title=\"struct internment::ArcIntern\">ArcIntern</a>&lt;T&gt;","synthetic":true,"types":["internment::ArcIntern"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"internment/struct.LocalIntern.html\" title=\"struct internment::LocalIntern\">LocalIntern</a>&lt;T&gt;","synthetic":true,"types":["internment::LocalIntern"]}];
implementors["ipnet"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"ipnet/enum.IpAddrRange.html\" title=\"enum ipnet::IpAddrRange\">IpAddrRange</a>","synthetic":true,"types":["ipnet::ipext::IpAddrRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ipnet/struct.Ipv4AddrRange.html\" title=\"struct ipnet::Ipv4AddrRange\">Ipv4AddrRange</a>","synthetic":true,"types":["ipnet::ipext::Ipv4AddrRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ipnet/struct.Ipv6AddrRange.html\" title=\"struct ipnet::Ipv6AddrRange\">Ipv6AddrRange</a>","synthetic":true,"types":["ipnet::ipext::Ipv6AddrRange"]},{"text":"impl Freeze for <a class=\"enum\" href=\"ipnet/enum.IpNet.html\" title=\"enum ipnet::IpNet\">IpNet</a>","synthetic":true,"types":["ipnet::ipnet::IpNet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ipnet/struct.Ipv4Net.html\" title=\"struct ipnet::Ipv4Net\">Ipv4Net</a>","synthetic":true,"types":["ipnet::ipnet::Ipv4Net"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ipnet/struct.Ipv6Net.html\" title=\"struct ipnet::Ipv6Net\">Ipv6Net</a>","synthetic":true,"types":["ipnet::ipnet::Ipv6Net"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ipnet/struct.PrefixLenError.html\" title=\"struct ipnet::PrefixLenError\">PrefixLenError</a>","synthetic":true,"types":["ipnet::ipnet::PrefixLenError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"ipnet/enum.IpSubnets.html\" title=\"enum ipnet::IpSubnets\">IpSubnets</a>","synthetic":true,"types":["ipnet::ipnet::IpSubnets"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ipnet/struct.Ipv4Subnets.html\" title=\"struct ipnet::Ipv4Subnets\">Ipv4Subnets</a>","synthetic":true,"types":["ipnet::ipnet::Ipv4Subnets"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ipnet/struct.Ipv6Subnets.html\" title=\"struct ipnet::Ipv6Subnets\">Ipv6Subnets</a>","synthetic":true,"types":["ipnet::ipnet::Ipv6Subnets"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ipnet/struct.AddrParseError.html\" title=\"struct ipnet::AddrParseError\">AddrParseError</a>","synthetic":true,"types":["ipnet::parser::AddrParseError"]}];
implementors["itertools"] = [{"text":"impl&lt;I, J&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Interleave.html\" title=\"struct itertools::structs::Interleave\">Interleave</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::Interleave"]},{"text":"impl&lt;I, J&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.InterleaveShortest.html\" title=\"struct itertools::structs::InterleaveShortest\">InterleaveShortest</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::InterleaveShortest"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.FilterMapOk.html\" title=\"struct itertools::structs::FilterMapOk\">FilterMapOk</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::FilterMapOk"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.FilterOk.html\" title=\"struct itertools::structs::FilterOk\">FilterOk</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::FilterOk"]},{"text":"impl&lt;I, J&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Product.html\" title=\"struct itertools::structs::Product\">Product</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.61.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::Product"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.PutBack.html\" title=\"struct itertools::structs::PutBack\">PutBack</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.61.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::PutBack"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Batching.html\" title=\"struct itertools::structs::Batching\">Batching</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::Batching"]},{"text":"impl&lt;I, J, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.MergeBy.html\" title=\"struct itertools::structs::MergeBy\">MergeBy</a>&lt;I, J, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.61.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::MergeBy"]},{"text":"impl&lt;'a, I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.TakeWhileRef.html\" title=\"struct itertools::structs::TakeWhileRef\">TakeWhileRef</a>&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::TakeWhileRef"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.WhileSome.html\" title=\"struct itertools::structs::WhileSome\">WhileSome</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::WhileSome"]},{"text":"impl&lt;I, T&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.TupleCombinations.html\" title=\"struct itertools::structs::TupleCombinations\">TupleCombinations</a>&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as HasCombination&lt;I&gt;&gt;::Combination: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::TupleCombinations"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Positions.html\" title=\"struct itertools::structs::Positions\">Positions</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::Positions"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Update.html\" title=\"struct itertools::structs::Update\">Update</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::Update"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Step.html\" title=\"struct itertools::structs::Step\">Step</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::Step"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.MultiProduct.html\" title=\"struct itertools::structs::MultiProduct\">MultiProduct</a>&lt;I&gt;","synthetic":true,"types":["itertools::adaptors::multi_product::MultiProduct"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Combinations.html\" title=\"struct itertools::structs::Combinations\">Combinations</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::combinations::Combinations"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.CombinationsWithReplacement.html\" title=\"struct itertools::structs::CombinationsWithReplacement\">CombinationsWithReplacement</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::combinations_with_replacement::CombinationsWithReplacement"]},{"text":"impl&lt;I, J&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.ConsTuples.html\" title=\"struct itertools::structs::ConsTuples\">ConsTuples</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::cons_tuples_impl::ConsTuples"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.ExactlyOneError.html\" title=\"struct itertools::structs::ExactlyOneError\">ExactlyOneError</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.61.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::exactly_one_err::ExactlyOneError"]},{"text":"impl&lt;'a, I&gt; !Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Format.html\" title=\"struct itertools::structs::Format\">Format</a>&lt;'a, I&gt;","synthetic":true,"types":["itertools::format::Format"]},{"text":"impl&lt;'a, I, F&gt; !Freeze for <a class=\"struct\" href=\"itertools/structs/struct.FormatWith.html\" title=\"struct itertools::structs::FormatWith\">FormatWith</a>&lt;'a, I, F&gt;","synthetic":true,"types":["itertools::format::FormatWith"]},{"text":"impl&lt;I, T, E&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.FlattenOk.html\" title=\"struct itertools::structs::FlattenOk\">FlattenOk</a>&lt;I, T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.61.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::flatten_ok::FlattenOk"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.GroupingMap.html\" title=\"struct itertools::structs::GroupingMap\">GroupingMap</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::grouping_map::GroupingMap"]},{"text":"impl&lt;I&gt; !Freeze for <a class=\"struct\" href=\"itertools/structs/struct.IntoChunks.html\" title=\"struct itertools::structs::IntoChunks\">IntoChunks</a>&lt;I&gt;","synthetic":true,"types":["itertools::groupbylazy::IntoChunks"]},{"text":"impl&lt;'a, I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Chunk.html\" title=\"struct itertools::structs::Chunk\">Chunk</a>&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.61.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::groupbylazy::Chunk"]},{"text":"impl&lt;'a, I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Chunks.html\" title=\"struct itertools::structs::Chunks\">Chunks</a>&lt;'a, I&gt;","synthetic":true,"types":["itertools::groupbylazy::Chunks"]},{"text":"impl&lt;K, I, F&gt; !Freeze for <a class=\"struct\" href=\"itertools/structs/struct.GroupBy.html\" title=\"struct itertools::structs::GroupBy\">GroupBy</a>&lt;K, I, F&gt;","synthetic":true,"types":["itertools::groupbylazy::GroupBy"]},{"text":"impl&lt;'a, K, I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Group.html\" title=\"struct itertools::structs::Group\">Group</a>&lt;'a, K, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.61.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::groupbylazy::Group"]},{"text":"impl&lt;'a, K, I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Groups.html\" title=\"struct itertools::structs::Groups\">Groups</a>&lt;'a, K, I, F&gt;","synthetic":true,"types":["itertools::groupbylazy::Groups"]},{"text":"impl&lt;I, ElemF&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.IntersperseWith.html\" title=\"struct itertools::structs::IntersperseWith\">IntersperseWith</a>&lt;I, ElemF&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ElemF: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.61.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::intersperse::IntersperseWith"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.KMergeBy.html\" title=\"struct itertools::structs::KMergeBy\">KMergeBy</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::kmerge_impl::KMergeBy"]},{"text":"impl&lt;I, J, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.MergeJoinBy.html\" title=\"struct itertools::structs::MergeJoinBy\">MergeJoinBy</a>&lt;I, J, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.61.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;J as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.61.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::merge_join::MergeJoinBy"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.MultiPeek.html\" title=\"struct itertools::structs::MultiPeek\">MultiPeek</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::multipeek_impl::MultiPeek"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.PeekNth.html\" title=\"struct itertools::structs::PeekNth\">PeekNth</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::peek_nth::PeekNth"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.PadUsing.html\" title=\"struct itertools::structs::PadUsing\">PadUsing</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::pad_tail::PadUsing"]},{"text":"impl&lt;'a, I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.PeekingTakeWhile.html\" title=\"struct itertools::structs::PeekingTakeWhile\">PeekingTakeWhile</a>&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::peeking_take_while::PeekingTakeWhile"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Permutations.html\" title=\"struct itertools::structs::Permutations\">Permutations</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::permutations::Permutations"]},{"text":"impl&lt;'a, I, E&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.ProcessResults.html\" title=\"struct itertools::structs::ProcessResults\">ProcessResults</a>&lt;'a, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::process_results_impl::ProcessResults"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Powerset.html\" title=\"struct itertools::structs::Powerset\">Powerset</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::powerset::Powerset"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.PutBackN.html\" title=\"struct itertools::structs::PutBackN\">PutBackN</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::put_back_n_impl::PutBackN"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.RcIter.html\" title=\"struct itertools::structs::RcIter\">RcIter</a>&lt;I&gt;","synthetic":true,"types":["itertools::rciter_impl::RcIter"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.RepeatN.html\" title=\"struct itertools::structs::RepeatN\">RepeatN</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::repeatn::RepeatN"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.RepeatCall.html\" title=\"struct itertools::structs::RepeatCall\">RepeatCall</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::sources::RepeatCall"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Unfold.html\" title=\"struct itertools::structs::Unfold\">Unfold</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::sources::Unfold"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Iterate.html\" title=\"struct itertools::structs::Iterate\">Iterate</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::sources::Iterate"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Tee.html\" title=\"struct itertools::structs::Tee\">Tee</a>&lt;I&gt;","synthetic":true,"types":["itertools::tee::Tee"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.TupleBuffer.html\" title=\"struct itertools::structs::TupleBuffer\">TupleBuffer</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as TupleCollect&gt;::Buffer: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::tuple_impl::TupleBuffer"]},{"text":"impl&lt;I, T&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.TupleWindows.html\" title=\"struct itertools::structs::TupleWindows\">TupleWindows</a>&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::tuple_impl::TupleWindows"]},{"text":"impl&lt;I, T&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.CircularTupleWindows.html\" title=\"struct itertools::structs::CircularTupleWindows\">CircularTupleWindows</a>&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::tuple_impl::CircularTupleWindows"]},{"text":"impl&lt;I, T&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Tuples.html\" title=\"struct itertools::structs::Tuples\">Tuples</a>&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as TupleCollect&gt;::Buffer: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::tuple_impl::Tuples"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Unique.html\" title=\"struct itertools::structs::Unique\">Unique</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::unique_impl::Unique"]},{"text":"impl&lt;I, V, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.UniqueBy.html\" title=\"struct itertools::structs::UniqueBy\">UniqueBy</a>&lt;I, V, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::unique_impl::UniqueBy"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.WithPosition.html\" title=\"struct itertools::structs::WithPosition\">WithPosition</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.61.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::with_position::WithPosition"]},{"text":"impl&lt;I, J&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.ZipEq.html\" title=\"struct itertools::structs::ZipEq\">ZipEq</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::zip_eq_impl::ZipEq"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.ZipLongest.html\" title=\"struct itertools::structs::ZipLongest\">ZipLongest</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::zip_longest::ZipLongest"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Zip.html\" title=\"struct itertools::structs::Zip\">Zip</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::ziptuple::Zip"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"enum\" href=\"itertools/enum.EitherOrBoth.html\" title=\"enum itertools::EitherOrBoth\">EitherOrBoth</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::either_or_both::EitherOrBoth"]},{"text":"impl&lt;I, J&gt; Freeze for <a class=\"enum\" href=\"itertools/enum.Diff.html\" title=\"enum itertools::Diff\">Diff</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.61.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;J as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.61.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::diff::Diff"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"itertools/enum.MinMaxResult.html\" title=\"enum itertools::MinMaxResult\">MinMaxResult</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::minmax::MinMaxResult"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"itertools/enum.Position.html\" title=\"enum itertools::Position\">Position</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::with_position::Position"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"itertools/enum.FoldWhile.html\" title=\"enum itertools::FoldWhile\">FoldWhile</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::FoldWhile"]}];
implementors["itoa"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"itoa/struct.Buffer.html\" title=\"struct itoa::Buffer\">Buffer</a>","synthetic":true,"types":["itoa::Buffer"]}];
implementors["lexical_core"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"lexical_core/enum.ErrorCode.html\" title=\"enum lexical_core::ErrorCode\">ErrorCode</a>","synthetic":true,"types":["lexical_core::util::error::ErrorCode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"lexical_core/struct.Error.html\" title=\"struct lexical_core::Error\">Error</a>","synthetic":true,"types":["lexical_core::util::error::Error"]}];
implementors["libc"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statvfs.html\" title=\"struct libc::statvfs\">statvfs</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::not_x32::statvfs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.max_align_t.html\" title=\"struct libc::max_align_t\">max_align_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::align::max_align_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigaction.html\" title=\"struct libc::sigaction\">sigaction</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::sigaction"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statfs.html\" title=\"struct libc::statfs\">statfs</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::statfs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.flock.html\" title=\"struct libc::flock\">flock</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::flock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.flock64.html\" title=\"struct libc::flock64\">flock64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::flock64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.siginfo_t.html\" title=\"struct libc::siginfo_t\">siginfo_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::siginfo_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.stack_t.html\" title=\"struct libc::stack_t\">stack_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::stack_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.stat.html\" title=\"struct libc::stat\">stat</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::stat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.stat64.html\" title=\"struct libc::stat64\">stat64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::stat64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statfs64.html\" title=\"struct libc::statfs64\">statfs64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::statfs64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statvfs64.html\" title=\"struct libc::statvfs64\">statvfs64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::statvfs64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_attr_t.html\" title=\"struct libc::pthread_attr_t\">pthread_attr_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::pthread_attr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct._libc_fpxreg.html\" title=\"struct libc::_libc_fpxreg\">_libc_fpxreg</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::_libc_fpxreg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct._libc_xmmreg.html\" title=\"struct libc::_libc_xmmreg\">_libc_xmmreg</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::_libc_xmmreg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct._libc_fpstate.html\" title=\"struct libc::_libc_fpstate\">_libc_fpstate</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::_libc_fpstate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.user_regs_struct.html\" title=\"struct libc::user_regs_struct\">user_regs_struct</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::user_regs_struct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.user.html\" title=\"struct libc::user\">user</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::user"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mcontext_t.html\" title=\"struct libc::mcontext_t\">mcontext_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::mcontext_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ipc_perm.html\" title=\"struct libc::ipc_perm\">ipc_perm</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::ipc_perm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.shmid_ds.html\" title=\"struct libc::shmid_ds\">shmid_ds</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::shmid_ds"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.seccomp_notif_sizes.html\" title=\"struct libc::seccomp_notif_sizes\">seccomp_notif_sizes</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::seccomp_notif_sizes"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.user_fpregs_struct.html\" title=\"struct libc::user_fpregs_struct\">user_fpregs_struct</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::user_fpregs_struct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ucontext_t.html\" title=\"struct libc::ucontext_t\">ucontext_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::ucontext_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigset_t.html\" title=\"struct libc::sigset_t\">sigset_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::sigset_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sysinfo.html\" title=\"struct libc::sysinfo\">sysinfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::sysinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.msqid_ds.html\" title=\"struct libc::msqid_ds\">msqid_ds</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::msqid_ds"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.semid_ds.html\" title=\"struct libc::semid_ds\">semid_ds</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::semid_ds"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sem_t.html\" title=\"struct libc::sem_t\">sem_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::align::sem_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statx.html\" title=\"struct libc::statx\">statx</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::statx"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statx_timestamp.html\" title=\"struct libc::statx_timestamp\">statx_timestamp</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::statx_timestamp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.aiocb.html\" title=\"struct libc::aiocb\">aiocb</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::aiocb"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__exit_status.html\" title=\"struct libc::__exit_status\">__exit_status</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::__exit_status"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__timeval.html\" title=\"struct libc::__timeval\">__timeval</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::__timeval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.glob64_t.html\" title=\"struct libc::glob64_t\">glob64_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::glob64_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.msghdr.html\" title=\"struct libc::msghdr\">msghdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::msghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.cmsghdr.html\" title=\"struct libc::cmsghdr\">cmsghdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::cmsghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.termios.html\" title=\"struct libc::termios\">termios</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::termios"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mallinfo.html\" title=\"struct libc::mallinfo\">mallinfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::mallinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mallinfo2.html\" title=\"struct libc::mallinfo2\">mallinfo2</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::mallinfo2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nl_pktinfo.html\" title=\"struct libc::nl_pktinfo\">nl_pktinfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::nl_pktinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nl_mmap_req.html\" title=\"struct libc::nl_mmap_req\">nl_mmap_req</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::nl_mmap_req"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nl_mmap_hdr.html\" title=\"struct libc::nl_mmap_hdr\">nl_mmap_hdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::nl_mmap_hdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rtentry.html\" title=\"struct libc::rtentry\">rtentry</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::rtentry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.timex.html\" title=\"struct libc::timex\">timex</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::timex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ntptimeval.html\" title=\"struct libc::ntptimeval\">ntptimeval</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::ntptimeval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.regex_t.html\" title=\"struct libc::regex_t\">regex_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::regex_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Chdr.html\" title=\"struct libc::Elf64_Chdr\">Elf64_Chdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::Elf64_Chdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Chdr.html\" title=\"struct libc::Elf32_Chdr\">Elf32_Chdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::Elf32_Chdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.seminfo.html\" title=\"struct libc::seminfo\">seminfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::seminfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ptrace_peeksiginfo_args.html\" title=\"struct libc::ptrace_peeksiginfo_args\">ptrace_peeksiginfo_args</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::ptrace_peeksiginfo_args"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__c_anonymous_ptrace_syscall_info_entry.html\" title=\"struct libc::__c_anonymous_ptrace_syscall_info_entry\">__c_anonymous_ptrace_syscall_info_entry</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::__c_anonymous_ptrace_syscall_info_entry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__c_anonymous_ptrace_syscall_info_exit.html\" title=\"struct libc::__c_anonymous_ptrace_syscall_info_exit\">__c_anonymous_ptrace_syscall_info_exit</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::__c_anonymous_ptrace_syscall_info_exit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__c_anonymous_ptrace_syscall_info_seccomp.html\" title=\"struct libc::__c_anonymous_ptrace_syscall_info_seccomp\">__c_anonymous_ptrace_syscall_info_seccomp</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::__c_anonymous_ptrace_syscall_info_seccomp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ptrace_syscall_info.html\" title=\"struct libc::ptrace_syscall_info\">ptrace_syscall_info</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::ptrace_syscall_info"]},{"text":"impl Freeze for <a class=\"union\" href=\"libc/union.__c_anonymous_ptrace_syscall_info_data.html\" title=\"union libc::__c_anonymous_ptrace_syscall_info_data\">__c_anonymous_ptrace_syscall_info_data</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::__c_anonymous_ptrace_syscall_info_data"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.utmpx.html\" title=\"struct libc::utmpx\">utmpx</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::utmpx"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.termios2.html\" title=\"struct libc::termios2\">termios2</a>","synthetic":true,"types":["libc::unix::linux_like::linux::arch::generic::termios2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.open_how.html\" title=\"struct libc::open_how\">open_how</a>","synthetic":true,"types":["libc::unix::linux_like::linux::non_exhaustive::open_how"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.fpos64_t.html\" title=\"enum libc::fpos64_t\">fpos64_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::fpos64_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rlimit64.html\" title=\"struct libc::rlimit64\">rlimit64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::rlimit64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.glob_t.html\" title=\"struct libc::glob_t\">glob_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::glob_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.passwd.html\" title=\"struct libc::passwd\">passwd</a>","synthetic":true,"types":["libc::unix::linux_like::linux::passwd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.spwd.html\" title=\"struct libc::spwd\">spwd</a>","synthetic":true,"types":["libc::unix::linux_like::linux::spwd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.dqblk.html\" title=\"struct libc::dqblk\">dqblk</a>","synthetic":true,"types":["libc::unix::linux_like::linux::dqblk"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.signalfd_siginfo.html\" title=\"struct libc::signalfd_siginfo\">signalfd_siginfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::signalfd_siginfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.itimerspec.html\" title=\"struct libc::itimerspec\">itimerspec</a>","synthetic":true,"types":["libc::unix::linux_like::linux::itimerspec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.fsid_t.html\" title=\"struct libc::fsid_t\">fsid_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::fsid_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.packet_mreq.html\" title=\"struct libc::packet_mreq\">packet_mreq</a>","synthetic":true,"types":["libc::unix::linux_like::linux::packet_mreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.cpu_set_t.html\" title=\"struct libc::cpu_set_t\">cpu_set_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::cpu_set_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.if_nameindex.html\" title=\"struct libc::if_nameindex\">if_nameindex</a>","synthetic":true,"types":["libc::unix::linux_like::linux::if_nameindex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.msginfo.html\" title=\"struct libc::msginfo\">msginfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::msginfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sembuf.html\" title=\"struct libc::sembuf\">sembuf</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sembuf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_event.html\" title=\"struct libc::input_event\">input_event</a>","synthetic":true,"types":["libc::unix::linux_like::linux::input_event"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_id.html\" title=\"struct libc::input_id\">input_id</a>","synthetic":true,"types":["libc::unix::linux_like::linux::input_id"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_absinfo.html\" title=\"struct libc::input_absinfo\">input_absinfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::input_absinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_keymap_entry.html\" title=\"struct libc::input_keymap_entry\">input_keymap_entry</a>","synthetic":true,"types":["libc::unix::linux_like::linux::input_keymap_entry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_mask.html\" title=\"struct libc::input_mask\">input_mask</a>","synthetic":true,"types":["libc::unix::linux_like::linux::input_mask"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_replay.html\" title=\"struct libc::ff_replay\">ff_replay</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_replay"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_trigger.html\" title=\"struct libc::ff_trigger\">ff_trigger</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_trigger"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_envelope.html\" title=\"struct libc::ff_envelope\">ff_envelope</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_envelope"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_constant_effect.html\" title=\"struct libc::ff_constant_effect\">ff_constant_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_constant_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_ramp_effect.html\" title=\"struct libc::ff_ramp_effect\">ff_ramp_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_ramp_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_condition_effect.html\" title=\"struct libc::ff_condition_effect\">ff_condition_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_condition_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_periodic_effect.html\" title=\"struct libc::ff_periodic_effect\">ff_periodic_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_periodic_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_rumble_effect.html\" title=\"struct libc::ff_rumble_effect\">ff_rumble_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_rumble_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_effect.html\" title=\"struct libc::ff_effect\">ff_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.uinput_ff_upload.html\" title=\"struct libc::uinput_ff_upload\">uinput_ff_upload</a>","synthetic":true,"types":["libc::unix::linux_like::linux::uinput_ff_upload"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.uinput_ff_erase.html\" title=\"struct libc::uinput_ff_erase\">uinput_ff_erase</a>","synthetic":true,"types":["libc::unix::linux_like::linux::uinput_ff_erase"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.uinput_abs_setup.html\" title=\"struct libc::uinput_abs_setup\">uinput_abs_setup</a>","synthetic":true,"types":["libc::unix::linux_like::linux::uinput_abs_setup"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.dl_phdr_info.html\" title=\"struct libc::dl_phdr_info\">dl_phdr_info</a>","synthetic":true,"types":["libc::unix::linux_like::linux::dl_phdr_info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Ehdr.html\" title=\"struct libc::Elf32_Ehdr\">Elf32_Ehdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf32_Ehdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Ehdr.html\" title=\"struct libc::Elf64_Ehdr\">Elf64_Ehdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf64_Ehdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Sym.html\" title=\"struct libc::Elf32_Sym\">Elf32_Sym</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf32_Sym"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Sym.html\" title=\"struct libc::Elf64_Sym\">Elf64_Sym</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf64_Sym"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Phdr.html\" title=\"struct libc::Elf32_Phdr\">Elf32_Phdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf32_Phdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Phdr.html\" title=\"struct libc::Elf64_Phdr\">Elf64_Phdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf64_Phdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Shdr.html\" title=\"struct libc::Elf32_Shdr\">Elf32_Shdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf32_Shdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Shdr.html\" title=\"struct libc::Elf64_Shdr\">Elf64_Shdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf64_Shdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ucred.html\" title=\"struct libc::ucred\">ucred</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ucred"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mntent.html\" title=\"struct libc::mntent\">mntent</a>","synthetic":true,"types":["libc::unix::linux_like::linux::mntent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.posix_spawn_file_actions_t.html\" title=\"struct libc::posix_spawn_file_actions_t\">posix_spawn_file_actions_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::posix_spawn_file_actions_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.posix_spawnattr_t.html\" title=\"struct libc::posix_spawnattr_t\">posix_spawnattr_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::posix_spawnattr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.genlmsghdr.html\" title=\"struct libc::genlmsghdr\">genlmsghdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::genlmsghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in6_pktinfo.html\" title=\"struct libc::in6_pktinfo\">in6_pktinfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::in6_pktinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.arpd_request.html\" title=\"struct libc::arpd_request\">arpd_request</a>","synthetic":true,"types":["libc::unix::linux_like::linux::arpd_request"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.inotify_event.html\" title=\"struct libc::inotify_event\">inotify_event</a>","synthetic":true,"types":["libc::unix::linux_like::linux::inotify_event"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.fanotify_response.html\" title=\"struct libc::fanotify_response\">fanotify_response</a>","synthetic":true,"types":["libc::unix::linux_like::linux::fanotify_response"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_vm.html\" title=\"struct libc::sockaddr_vm\">sockaddr_vm</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sockaddr_vm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.regmatch_t.html\" title=\"struct libc::regmatch_t\">regmatch_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::regmatch_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sock_extended_err.html\" title=\"struct libc::sock_extended_err\">sock_extended_err</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sock_extended_err"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__c_anonymous_sockaddr_can_tp.html\" title=\"struct libc::__c_anonymous_sockaddr_can_tp\">__c_anonymous_sockaddr_can_tp</a>","synthetic":true,"types":["libc::unix::linux_like::linux::__c_anonymous_sockaddr_can_tp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__c_anonymous_sockaddr_can_j1939.html\" title=\"struct libc::__c_anonymous_sockaddr_can_j1939\">__c_anonymous_sockaddr_can_j1939</a>","synthetic":true,"types":["libc::unix::linux_like::linux::__c_anonymous_sockaddr_can_j1939"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.can_filter.html\" title=\"struct libc::can_filter\">can_filter</a>","synthetic":true,"types":["libc::unix::linux_like::linux::can_filter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.j1939_filter.html\" title=\"struct libc::j1939_filter\">j1939_filter</a>","synthetic":true,"types":["libc::unix::linux_like::linux::j1939_filter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sock_filter.html\" title=\"struct libc::sock_filter\">sock_filter</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sock_filter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sock_fprog.html\" title=\"struct libc::sock_fprog\">sock_fprog</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sock_fprog"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.seccomp_data.html\" title=\"struct libc::seccomp_data\">seccomp_data</a>","synthetic":true,"types":["libc::unix::linux_like::linux::seccomp_data"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nlmsghdr.html\" title=\"struct libc::nlmsghdr\">nlmsghdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::nlmsghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nlmsgerr.html\" title=\"struct libc::nlmsgerr\">nlmsgerr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::nlmsgerr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nlattr.html\" title=\"struct libc::nlattr\">nlattr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::nlattr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_nl.html\" title=\"struct libc::sockaddr_nl\">sockaddr_nl</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sockaddr_nl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.dirent.html\" title=\"struct libc::dirent\">dirent</a>","synthetic":true,"types":["libc::unix::linux_like::linux::dirent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.dirent64.html\" title=\"struct libc::dirent64\">dirent64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::dirent64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_alg.html\" title=\"struct libc::sockaddr_alg\">sockaddr_alg</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sockaddr_alg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.uinput_setup.html\" title=\"struct libc::uinput_setup\">uinput_setup</a>","synthetic":true,"types":["libc::unix::linux_like::linux::uinput_setup"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.uinput_user_dev.html\" title=\"struct libc::uinput_user_dev\">uinput_user_dev</a>","synthetic":true,"types":["libc::unix::linux_like::linux::uinput_user_dev"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.af_alg_iv.html\" title=\"struct libc::af_alg_iv\">af_alg_iv</a>","synthetic":true,"types":["libc::unix::linux_like::linux::af_alg_iv"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mq_attr.html\" title=\"struct libc::mq_attr\">mq_attr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::mq_attr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sock_txtime.html\" title=\"struct libc::sock_txtime\">sock_txtime</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sock_txtime"]},{"text":"impl Freeze for <a class=\"union\" href=\"libc/union.__c_anonymous_sockaddr_can_can_addr.html\" title=\"union libc::__c_anonymous_sockaddr_can_can_addr\">__c_anonymous_sockaddr_can_can_addr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::__c_anonymous_sockaddr_can_can_addr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_can.html\" title=\"struct libc::sockaddr_can\">sockaddr_can</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sockaddr_can"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_mutexattr_t.html\" title=\"struct libc::pthread_mutexattr_t\">pthread_mutexattr_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_mutexattr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_rwlockattr_t.html\" title=\"struct libc::pthread_rwlockattr_t\">pthread_rwlockattr_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_rwlockattr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_condattr_t.html\" title=\"struct libc::pthread_condattr_t\">pthread_condattr_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_condattr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.fanotify_event_metadata.html\" title=\"struct libc::fanotify_event_metadata\">fanotify_event_metadata</a>","synthetic":true,"types":["libc::unix::linux_like::linux::fanotify_event_metadata"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_cond_t.html\" title=\"struct libc::pthread_cond_t\">pthread_cond_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_cond_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_mutex_t.html\" title=\"struct libc::pthread_mutex_t\">pthread_mutex_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_mutex_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_rwlock_t.html\" title=\"struct libc::pthread_rwlock_t\">pthread_rwlock_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_rwlock_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.can_frame.html\" title=\"struct libc::can_frame\">can_frame</a>","synthetic":true,"types":["libc::unix::linux_like::linux::can_frame"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.canfd_frame.html\" title=\"struct libc::canfd_frame\">canfd_frame</a>","synthetic":true,"types":["libc::unix::linux_like::linux::canfd_frame"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.timezone.html\" title=\"enum libc::timezone\">timezone</a>","synthetic":true,"types":["libc::unix::linux_like::timezone"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in_addr.html\" title=\"struct libc::in_addr\">in_addr</a>","synthetic":true,"types":["libc::unix::linux_like::in_addr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ip_mreq.html\" title=\"struct libc::ip_mreq\">ip_mreq</a>","synthetic":true,"types":["libc::unix::linux_like::ip_mreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ip_mreqn.html\" title=\"struct libc::ip_mreqn\">ip_mreqn</a>","synthetic":true,"types":["libc::unix::linux_like::ip_mreqn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ip_mreq_source.html\" title=\"struct libc::ip_mreq_source\">ip_mreq_source</a>","synthetic":true,"types":["libc::unix::linux_like::ip_mreq_source"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr.html\" title=\"struct libc::sockaddr\">sockaddr</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_in.html\" title=\"struct libc::sockaddr_in\">sockaddr_in</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr_in"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_in6.html\" title=\"struct libc::sockaddr_in6\">sockaddr_in6</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr_in6"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.addrinfo.html\" title=\"struct libc::addrinfo\">addrinfo</a>","synthetic":true,"types":["libc::unix::linux_like::addrinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_ll.html\" title=\"struct libc::sockaddr_ll\">sockaddr_ll</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr_ll"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.fd_set.html\" title=\"struct libc::fd_set\">fd_set</a>","synthetic":true,"types":["libc::unix::linux_like::fd_set"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.tm.html\" title=\"struct libc::tm\">tm</a>","synthetic":true,"types":["libc::unix::linux_like::tm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sched_param.html\" title=\"struct libc::sched_param\">sched_param</a>","synthetic":true,"types":["libc::unix::linux_like::sched_param"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Dl_info.html\" title=\"struct libc::Dl_info\">Dl_info</a>","synthetic":true,"types":["libc::unix::linux_like::Dl_info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.lconv.html\" title=\"struct libc::lconv\">lconv</a>","synthetic":true,"types":["libc::unix::linux_like::lconv"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in_pktinfo.html\" title=\"struct libc::in_pktinfo\">in_pktinfo</a>","synthetic":true,"types":["libc::unix::linux_like::in_pktinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ifaddrs.html\" title=\"struct libc::ifaddrs\">ifaddrs</a>","synthetic":true,"types":["libc::unix::linux_like::ifaddrs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in6_rtmsg.html\" title=\"struct libc::in6_rtmsg\">in6_rtmsg</a>","synthetic":true,"types":["libc::unix::linux_like::in6_rtmsg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.arpreq.html\" title=\"struct libc::arpreq\">arpreq</a>","synthetic":true,"types":["libc::unix::linux_like::arpreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.arpreq_old.html\" title=\"struct libc::arpreq_old\">arpreq_old</a>","synthetic":true,"types":["libc::unix::linux_like::arpreq_old"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.arphdr.html\" title=\"struct libc::arphdr\">arphdr</a>","synthetic":true,"types":["libc::unix::linux_like::arphdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mmsghdr.html\" title=\"struct libc::mmsghdr\">mmsghdr</a>","synthetic":true,"types":["libc::unix::linux_like::mmsghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.epoll_event.html\" title=\"struct libc::epoll_event\">epoll_event</a>","synthetic":true,"types":["libc::unix::linux_like::epoll_event"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_un.html\" title=\"struct libc::sockaddr_un\">sockaddr_un</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr_un"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_storage.html\" title=\"struct libc::sockaddr_storage\">sockaddr_storage</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr_storage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.utsname.html\" title=\"struct libc::utsname\">utsname</a>","synthetic":true,"types":["libc::unix::linux_like::utsname"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigevent.html\" title=\"struct libc::sigevent\">sigevent</a>","synthetic":true,"types":["libc::unix::linux_like::sigevent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in6_addr.html\" title=\"struct libc::in6_addr\">in6_addr</a>","synthetic":true,"types":["libc::unix::align::in6_addr"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.DIR.html\" title=\"enum libc::DIR\">DIR</a>","synthetic":true,"types":["libc::unix::DIR"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.group.html\" title=\"struct libc::group\">group</a>","synthetic":true,"types":["libc::unix::group"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.utimbuf.html\" title=\"struct libc::utimbuf\">utimbuf</a>","synthetic":true,"types":["libc::unix::utimbuf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.timeval.html\" title=\"struct libc::timeval\">timeval</a>","synthetic":true,"types":["libc::unix::timeval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.timespec.html\" title=\"struct libc::timespec\">timespec</a>","synthetic":true,"types":["libc::unix::timespec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rlimit.html\" title=\"struct libc::rlimit\">rlimit</a>","synthetic":true,"types":["libc::unix::rlimit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rusage.html\" title=\"struct libc::rusage\">rusage</a>","synthetic":true,"types":["libc::unix::rusage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ipv6_mreq.html\" title=\"struct libc::ipv6_mreq\">ipv6_mreq</a>","synthetic":true,"types":["libc::unix::ipv6_mreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.hostent.html\" title=\"struct libc::hostent\">hostent</a>","synthetic":true,"types":["libc::unix::hostent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.iovec.html\" title=\"struct libc::iovec\">iovec</a>","synthetic":true,"types":["libc::unix::iovec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pollfd.html\" title=\"struct libc::pollfd\">pollfd</a>","synthetic":true,"types":["libc::unix::pollfd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.winsize.html\" title=\"struct libc::winsize\">winsize</a>","synthetic":true,"types":["libc::unix::winsize"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.linger.html\" title=\"struct libc::linger\">linger</a>","synthetic":true,"types":["libc::unix::linger"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigval.html\" title=\"struct libc::sigval\">sigval</a>","synthetic":true,"types":["libc::unix::sigval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.itimerval.html\" title=\"struct libc::itimerval\">itimerval</a>","synthetic":true,"types":["libc::unix::itimerval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.tms.html\" title=\"struct libc::tms\">tms</a>","synthetic":true,"types":["libc::unix::tms"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.servent.html\" title=\"struct libc::servent\">servent</a>","synthetic":true,"types":["libc::unix::servent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.protoent.html\" title=\"struct libc::protoent\">protoent</a>","synthetic":true,"types":["libc::unix::protoent"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.FILE.html\" title=\"enum libc::FILE\">FILE</a>","synthetic":true,"types":["libc::unix::FILE"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.fpos_t.html\" title=\"enum libc::fpos_t\">fpos_t</a>","synthetic":true,"types":["libc::unix::fpos_t"]}];
implementors["linked_hash_map"] = [{"text":"impl&lt;K, V, S&gt; Freeze for <a class=\"struct\" href=\"linked_hash_map/struct.LinkedHashMap.html\" title=\"struct linked_hash_map::LinkedHashMap\">LinkedHashMap</a>&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["linked_hash_map::LinkedHashMap"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"linked_hash_map/struct.Iter.html\" title=\"struct linked_hash_map::Iter\">Iter</a>&lt;'a, K, V&gt;","synthetic":true,"types":["linked_hash_map::Iter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"linked_hash_map/struct.IterMut.html\" title=\"struct linked_hash_map::IterMut\">IterMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["linked_hash_map::IterMut"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"linked_hash_map/struct.IntoIter.html\" title=\"struct linked_hash_map::IntoIter\">IntoIter</a>&lt;K, V&gt;","synthetic":true,"types":["linked_hash_map::IntoIter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"linked_hash_map/struct.Drain.html\" title=\"struct linked_hash_map::Drain\">Drain</a>&lt;'a, K, V&gt;","synthetic":true,"types":["linked_hash_map::Drain"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"linked_hash_map/struct.Entries.html\" title=\"struct linked_hash_map::Entries\">Entries</a>&lt;'a, K, V, S&gt;","synthetic":true,"types":["linked_hash_map::Entries"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"linked_hash_map/struct.Keys.html\" title=\"struct linked_hash_map::Keys\">Keys</a>&lt;'a, K, V&gt;","synthetic":true,"types":["linked_hash_map::Keys"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"linked_hash_map/struct.Values.html\" title=\"struct linked_hash_map::Values\">Values</a>&lt;'a, K, V&gt;","synthetic":true,"types":["linked_hash_map::Values"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"enum\" href=\"linked_hash_map/enum.Entry.html\" title=\"enum linked_hash_map::Entry\">Entry</a>&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["linked_hash_map::Entry"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"linked_hash_map/struct.OccupiedEntry.html\" title=\"struct linked_hash_map::OccupiedEntry\">OccupiedEntry</a>&lt;'a, K, V, S&gt;","synthetic":true,"types":["linked_hash_map::OccupiedEntry"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"linked_hash_map/struct.VacantEntry.html\" title=\"struct linked_hash_map::VacantEntry\">VacantEntry</a>&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["linked_hash_map::VacantEntry"]}];
implementors["lock_api"] = [{"text":"impl&lt;R, T&gt; !Freeze for <a class=\"struct\" href=\"lock_api/struct.Mutex.html\" title=\"struct lock_api::Mutex\">Mutex</a>&lt;R, T&gt;","synthetic":true,"types":["lock_api::mutex::Mutex"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.MutexGuard.html\" title=\"struct lock_api::MutexGuard\">MutexGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::mutex::MutexGuard"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.MappedMutexGuard.html\" title=\"struct lock_api::MappedMutexGuard\">MappedMutexGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::mutex::MappedMutexGuard"]},{"text":"impl&lt;R, G&gt; !Freeze for <a class=\"struct\" href=\"lock_api/struct.RawReentrantMutex.html\" title=\"struct lock_api::RawReentrantMutex\">RawReentrantMutex</a>&lt;R, G&gt;","synthetic":true,"types":["lock_api::remutex::RawReentrantMutex"]},{"text":"impl&lt;R, G, T&gt; !Freeze for <a class=\"struct\" href=\"lock_api/struct.ReentrantMutex.html\" title=\"struct lock_api::ReentrantMutex\">ReentrantMutex</a>&lt;R, G, T&gt;","synthetic":true,"types":["lock_api::remutex::ReentrantMutex"]},{"text":"impl&lt;'a, R, G, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.ReentrantMutexGuard.html\" title=\"struct lock_api::ReentrantMutexGuard\">ReentrantMutexGuard</a>&lt;'a, R, G, T&gt;","synthetic":true,"types":["lock_api::remutex::ReentrantMutexGuard"]},{"text":"impl&lt;'a, R, G, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.MappedReentrantMutexGuard.html\" title=\"struct lock_api::MappedReentrantMutexGuard\">MappedReentrantMutexGuard</a>&lt;'a, R, G, T&gt;","synthetic":true,"types":["lock_api::remutex::MappedReentrantMutexGuard"]},{"text":"impl&lt;R, T&gt; !Freeze for <a class=\"struct\" href=\"lock_api/struct.RwLock.html\" title=\"struct lock_api::RwLock\">RwLock</a>&lt;R, T&gt;","synthetic":true,"types":["lock_api::rwlock::RwLock"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.RwLockReadGuard.html\" title=\"struct lock_api::RwLockReadGuard\">RwLockReadGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::rwlock::RwLockReadGuard"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.RwLockWriteGuard.html\" title=\"struct lock_api::RwLockWriteGuard\">RwLockWriteGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::rwlock::RwLockWriteGuard"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.RwLockUpgradableReadGuard.html\" title=\"struct lock_api::RwLockUpgradableReadGuard\">RwLockUpgradableReadGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::rwlock::RwLockUpgradableReadGuard"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.MappedRwLockReadGuard.html\" title=\"struct lock_api::MappedRwLockReadGuard\">MappedRwLockReadGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::rwlock::MappedRwLockReadGuard"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.MappedRwLockWriteGuard.html\" title=\"struct lock_api::MappedRwLockWriteGuard\">MappedRwLockWriteGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::rwlock::MappedRwLockWriteGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"lock_api/struct.GuardSend.html\" title=\"struct lock_api::GuardSend\">GuardSend</a>","synthetic":true,"types":["lock_api::GuardSend"]},{"text":"impl Freeze for <a class=\"struct\" href=\"lock_api/struct.GuardNoSend.html\" title=\"struct lock_api::GuardNoSend\">GuardNoSend</a>","synthetic":true,"types":["lock_api::GuardNoSend"]}];
implementors["log"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"log/enum.Level.html\" title=\"enum log::Level\">Level</a>","synthetic":true,"types":["log::Level"]},{"text":"impl Freeze for <a class=\"enum\" href=\"log/enum.LevelFilter.html\" title=\"enum log::LevelFilter\">LevelFilter</a>","synthetic":true,"types":["log::LevelFilter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.Record.html\" title=\"struct log::Record\">Record</a>&lt;'a&gt;","synthetic":true,"types":["log::Record"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.RecordBuilder.html\" title=\"struct log::RecordBuilder\">RecordBuilder</a>&lt;'a&gt;","synthetic":true,"types":["log::RecordBuilder"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.Metadata.html\" title=\"struct log::Metadata\">Metadata</a>&lt;'a&gt;","synthetic":true,"types":["log::Metadata"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.MetadataBuilder.html\" title=\"struct log::MetadataBuilder\">MetadataBuilder</a>&lt;'a&gt;","synthetic":true,"types":["log::MetadataBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"log/struct.SetLoggerError.html\" title=\"struct log::SetLoggerError\">SetLoggerError</a>","synthetic":true,"types":["log::SetLoggerError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"log/struct.ParseLevelError.html\" title=\"struct log::ParseLevelError\">ParseLevelError</a>","synthetic":true,"types":["log::ParseLevelError"]}];
implementors["memchr"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"memchr/struct.Memchr.html\" title=\"struct memchr::Memchr\">Memchr</a>&lt;'a&gt;","synthetic":true,"types":["memchr::memchr::iter::Memchr"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"memchr/struct.Memchr2.html\" title=\"struct memchr::Memchr2\">Memchr2</a>&lt;'a&gt;","synthetic":true,"types":["memchr::memchr::iter::Memchr2"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"memchr/struct.Memchr3.html\" title=\"struct memchr::Memchr3\">Memchr3</a>&lt;'a&gt;","synthetic":true,"types":["memchr::memchr::iter::Memchr3"]},{"text":"impl Freeze for <a class=\"enum\" href=\"memchr/memmem/enum.Prefilter.html\" title=\"enum memchr::memmem::Prefilter\">Prefilter</a>","synthetic":true,"types":["memchr::memmem::prefilter::Prefilter"]},{"text":"impl&lt;'h, 'n&gt; Freeze for <a class=\"struct\" href=\"memchr/memmem/struct.FindIter.html\" title=\"struct memchr::memmem::FindIter\">FindIter</a>&lt;'h, 'n&gt;","synthetic":true,"types":["memchr::memmem::FindIter"]},{"text":"impl&lt;'h, 'n&gt; Freeze for <a class=\"struct\" href=\"memchr/memmem/struct.FindRevIter.html\" title=\"struct memchr::memmem::FindRevIter\">FindRevIter</a>&lt;'h, 'n&gt;","synthetic":true,"types":["memchr::memmem::FindRevIter"]},{"text":"impl&lt;'n&gt; Freeze for <a class=\"struct\" href=\"memchr/memmem/struct.Finder.html\" title=\"struct memchr::memmem::Finder\">Finder</a>&lt;'n&gt;","synthetic":true,"types":["memchr::memmem::Finder"]},{"text":"impl&lt;'n&gt; Freeze for <a class=\"struct\" href=\"memchr/memmem/struct.FinderRev.html\" title=\"struct memchr::memmem::FinderRev\">FinderRev</a>&lt;'n&gt;","synthetic":true,"types":["memchr::memmem::FinderRev"]},{"text":"impl Freeze for <a class=\"struct\" href=\"memchr/memmem/struct.FinderBuilder.html\" title=\"struct memchr::memmem::FinderBuilder\">FinderBuilder</a>","synthetic":true,"types":["memchr::memmem::FinderBuilder"]}];
implementors["mime"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"mime/struct.Mime.html\" title=\"struct mime::Mime\">Mime</a>","synthetic":true,"types":["mime::Mime"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"mime/struct.Name.html\" title=\"struct mime::Name\">Name</a>&lt;'a&gt;","synthetic":true,"types":["mime::Name"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mime/struct.FromStrError.html\" title=\"struct mime::FromStrError\">FromStrError</a>","synthetic":true,"types":["mime::FromStrError"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"mime/struct.Params.html\" title=\"struct mime::Params\">Params</a>&lt;'a&gt;","synthetic":true,"types":["mime::Params"]}];
implementors["mime_guess"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"mime_guess/struct.MimeGuess.html\" title=\"struct mime_guess::MimeGuess\">MimeGuess</a>","synthetic":true,"types":["mime_guess::MimeGuess"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mime_guess/struct.Iter.html\" title=\"struct mime_guess::Iter\">Iter</a>","synthetic":true,"types":["mime_guess::Iter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mime_guess/struct.IterRaw.html\" title=\"struct mime_guess::IterRaw\">IterRaw</a>","synthetic":true,"types":["mime_guess::IterRaw"]}];
implementors["miniz_oxide"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/deflate/core/enum.CompressionStrategy.html\" title=\"enum miniz_oxide::deflate::core::CompressionStrategy\">CompressionStrategy</a>","synthetic":true,"types":["miniz_oxide::deflate::core::CompressionStrategy"]},{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/deflate/core/enum.TDEFLFlush.html\" title=\"enum miniz_oxide::deflate::core::TDEFLFlush\">TDEFLFlush</a>","synthetic":true,"types":["miniz_oxide::deflate::core::TDEFLFlush"]},{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/deflate/core/enum.TDEFLStatus.html\" title=\"enum miniz_oxide::deflate::core::TDEFLStatus\">TDEFLStatus</a>","synthetic":true,"types":["miniz_oxide::deflate::core::TDEFLStatus"]},{"text":"impl Freeze for <a class=\"struct\" href=\"miniz_oxide/deflate/core/struct.CompressorOxide.html\" title=\"struct miniz_oxide::deflate::core::CompressorOxide\">CompressorOxide</a>","synthetic":true,"types":["miniz_oxide::deflate::core::CompressorOxide"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"miniz_oxide/deflate/core/struct.CallbackFunc.html\" title=\"struct miniz_oxide::deflate::core::CallbackFunc\">CallbackFunc</a>&lt;'a&gt;","synthetic":true,"types":["miniz_oxide::deflate::core::CallbackFunc"]},{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/deflate/enum.CompressionLevel.html\" title=\"enum miniz_oxide::deflate::CompressionLevel\">CompressionLevel</a>","synthetic":true,"types":["miniz_oxide::deflate::CompressionLevel"]},{"text":"impl Freeze for <a class=\"struct\" href=\"miniz_oxide/inflate/core/struct.DecompressorOxide.html\" title=\"struct miniz_oxide::inflate::core::DecompressorOxide\">DecompressorOxide</a>","synthetic":true,"types":["miniz_oxide::inflate::core::DecompressorOxide"]},{"text":"impl Freeze for <a class=\"struct\" href=\"miniz_oxide/inflate/stream/struct.MinReset.html\" title=\"struct miniz_oxide::inflate::stream::MinReset\">MinReset</a>","synthetic":true,"types":["miniz_oxide::inflate::stream::MinReset"]},{"text":"impl Freeze for <a class=\"struct\" href=\"miniz_oxide/inflate/stream/struct.ZeroReset.html\" title=\"struct miniz_oxide::inflate::stream::ZeroReset\">ZeroReset</a>","synthetic":true,"types":["miniz_oxide::inflate::stream::ZeroReset"]},{"text":"impl Freeze for <a class=\"struct\" href=\"miniz_oxide/inflate/stream/struct.FullReset.html\" title=\"struct miniz_oxide::inflate::stream::FullReset\">FullReset</a>","synthetic":true,"types":["miniz_oxide::inflate::stream::FullReset"]},{"text":"impl Freeze for <a class=\"struct\" href=\"miniz_oxide/inflate/stream/struct.InflateState.html\" title=\"struct miniz_oxide::inflate::stream::InflateState\">InflateState</a>","synthetic":true,"types":["miniz_oxide::inflate::stream::InflateState"]},{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/inflate/enum.TINFLStatus.html\" title=\"enum miniz_oxide::inflate::TINFLStatus\">TINFLStatus</a>","synthetic":true,"types":["miniz_oxide::inflate::TINFLStatus"]},{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/enum.MZFlush.html\" title=\"enum miniz_oxide::MZFlush\">MZFlush</a>","synthetic":true,"types":["miniz_oxide::MZFlush"]},{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/enum.MZStatus.html\" title=\"enum miniz_oxide::MZStatus\">MZStatus</a>","synthetic":true,"types":["miniz_oxide::MZStatus"]},{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/enum.MZError.html\" title=\"enum miniz_oxide::MZError\">MZError</a>","synthetic":true,"types":["miniz_oxide::MZError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/enum.DataFormat.html\" title=\"enum miniz_oxide::DataFormat\">DataFormat</a>","synthetic":true,"types":["miniz_oxide::DataFormat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"miniz_oxide/struct.StreamResult.html\" title=\"struct miniz_oxide::StreamResult\">StreamResult</a>","synthetic":true,"types":["miniz_oxide::StreamResult"]}];
implementors["mio"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"mio/struct.Interest.html\" title=\"struct mio::Interest\">Interest</a>","synthetic":true,"types":["mio::interest::Interest"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/struct.Poll.html\" title=\"struct mio::Poll\">Poll</a>","synthetic":true,"types":["mio::poll::Poll"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/struct.Registry.html\" title=\"struct mio::Registry\">Registry</a>","synthetic":true,"types":["mio::poll::Registry"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"mio/unix/struct.SourceFd.html\" title=\"struct mio::unix::SourceFd\">SourceFd</a>&lt;'a&gt;","synthetic":true,"types":["mio::sys::unix::sourcefd::SourceFd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio/net/struct.SocketAddr.html\" title=\"struct mio::net::SocketAddr\">SocketAddr</a>","synthetic":true,"types":["mio::sys::unix::uds::socketaddr::SocketAddr"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/unix/pipe/struct.Sender.html\" title=\"struct mio::unix::pipe::Sender\">Sender</a>","synthetic":true,"types":["mio::sys::unix::pipe::Sender"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/unix/pipe/struct.Receiver.html\" title=\"struct mio::unix::pipe::Receiver\">Receiver</a>","synthetic":true,"types":["mio::sys::unix::pipe::Receiver"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio/struct.Token.html\" title=\"struct mio::Token\">Token</a>","synthetic":true,"types":["mio::token::Token"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio/struct.Waker.html\" title=\"struct mio::Waker\">Waker</a>","synthetic":true,"types":["mio::waker::Waker"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio/event/struct.Event.html\" title=\"struct mio::event::Event\">Event</a>","synthetic":true,"types":["mio::event::event::Event"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio/event/struct.Events.html\" title=\"struct mio::event::Events\">Events</a>","synthetic":true,"types":["mio::event::events::Events"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"mio/event/struct.Iter.html\" title=\"struct mio::event::Iter\">Iter</a>&lt;'a&gt;","synthetic":true,"types":["mio::event::events::Iter"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/net/struct.TcpListener.html\" title=\"struct mio::net::TcpListener\">TcpListener</a>","synthetic":true,"types":["mio::net::tcp::listener::TcpListener"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/net/struct.TcpStream.html\" title=\"struct mio::net::TcpStream\">TcpStream</a>","synthetic":true,"types":["mio::net::tcp::stream::TcpStream"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/net/struct.UdpSocket.html\" title=\"struct mio::net::UdpSocket\">UdpSocket</a>","synthetic":true,"types":["mio::net::udp::UdpSocket"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/net/struct.UnixDatagram.html\" title=\"struct mio::net::UnixDatagram\">UnixDatagram</a>","synthetic":true,"types":["mio::net::uds::datagram::UnixDatagram"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/net/struct.UnixListener.html\" title=\"struct mio::net::UnixListener\">UnixListener</a>","synthetic":true,"types":["mio::net::uds::listener::UnixListener"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/net/struct.UnixStream.html\" title=\"struct mio::net::UnixStream\">UnixStream</a>","synthetic":true,"types":["mio::net::uds::stream::UnixStream"]}];
implementors["mirai_annotations"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"mirai_annotations/enum.TagPropagation.html\" title=\"enum mirai_annotations::TagPropagation\">TagPropagation</a>","synthetic":true,"types":["mirai_annotations::TagPropagation"]}];
implementors["move_abigen"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"move_abigen/struct.AbigenOptions.html\" title=\"struct move_abigen::AbigenOptions\">AbigenOptions</a>","synthetic":true,"types":["move_abigen::abigen::AbigenOptions"]},{"text":"impl&lt;'env&gt; Freeze for <a class=\"struct\" href=\"move_abigen/struct.Abigen.html\" title=\"struct move_abigen::Abigen\">Abigen</a>&lt;'env&gt;","synthetic":true,"types":["move_abigen::abigen::Abigen"]}];
implementors["move_binary_format"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"move_binary_format/binary_views/enum.BinaryIndexedView.html\" title=\"enum move_binary_format::binary_views::BinaryIndexedView\">BinaryIndexedView</a>&lt;'a&gt;","synthetic":true,"types":["move_binary_format::binary_views::BinaryIndexedView"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_binary_format/binary_views/struct.FunctionView.html\" title=\"struct move_binary_format::binary_views::FunctionView\">FunctionView</a>&lt;'a&gt;","synthetic":true,"types":["move_binary_format::binary_views::FunctionView"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_binary_format/check_bounds/struct.BoundsChecker.html\" title=\"struct move_binary_format::check_bounds::BoundsChecker\">BoundsChecker</a>&lt;'a&gt;","synthetic":true,"types":["move_binary_format::check_bounds::BoundsChecker"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/compatibility/struct.Compatibility.html\" title=\"struct move_binary_format::compatibility::Compatibility\">Compatibility</a>","synthetic":true,"types":["move_binary_format::compatibility::Compatibility"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_binary_format/errors/enum.Location.html\" title=\"enum move_binary_format::errors::Location\">Location</a>","synthetic":true,"types":["move_binary_format::errors::Location"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/errors/struct.ExecutionState.html\" title=\"struct move_binary_format::errors::ExecutionState\">ExecutionState</a>","synthetic":true,"types":["move_binary_format::errors::ExecutionState"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/errors/struct.VMError.html\" title=\"struct move_binary_format::errors::VMError\">VMError</a>","synthetic":true,"types":["move_binary_format::errors::VMError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/errors/struct.PartialVMError.html\" title=\"struct move_binary_format::errors::PartialVMError\">PartialVMError</a>","synthetic":true,"types":["move_binary_format::errors::PartialVMError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/control_flow_graph/struct.VMControlFlowGraph.html\" title=\"struct move_binary_format::control_flow_graph::VMControlFlowGraph\">VMControlFlowGraph</a>","synthetic":true,"types":["move_binary_format::control_flow_graph::VMControlFlowGraph"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_binary_format/deserializer/enum.DeprecatedNominalResourceFlag.html\" title=\"enum move_binary_format::deserializer::DeprecatedNominalResourceFlag\">DeprecatedNominalResourceFlag</a>","synthetic":true,"types":["move_binary_format::deserializer::DeprecatedNominalResourceFlag"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/file_format/struct.ModuleHandleIndex.html\" title=\"struct move_binary_format::file_format::ModuleHandleIndex\">ModuleHandleIndex</a>","synthetic":true,"types":["move_binary_format::file_format::ModuleHandleIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/file_format/struct.StructHandleIndex.html\" title=\"struct move_binary_format::file_format::StructHandleIndex\">StructHandleIndex</a>","synthetic":true,"types":["move_binary_format::file_format::StructHandleIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/file_format/struct.FunctionHandleIndex.html\" title=\"struct move_binary_format::file_format::FunctionHandleIndex\">FunctionHandleIndex</a>","synthetic":true,"types":["move_binary_format::file_format::FunctionHandleIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/file_format/struct.FieldHandleIndex.html\" title=\"struct move_binary_format::file_format::FieldHandleIndex\">FieldHandleIndex</a>","synthetic":true,"types":["move_binary_format::file_format::FieldHandleIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/file_format/struct.StructDefInstantiationIndex.html\" title=\"struct move_binary_format::file_format::StructDefInstantiationIndex\">StructDefInstantiationIndex</a>","synthetic":true,"types":["move_binary_format::file_format::StructDefInstantiationIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/file_format/struct.FunctionInstantiationIndex.html\" title=\"struct move_binary_format::file_format::FunctionInstantiationIndex\">FunctionInstantiationIndex</a>","synthetic":true,"types":["move_binary_format::file_format::FunctionInstantiationIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/file_format/struct.FieldInstantiationIndex.html\" title=\"struct move_binary_format::file_format::FieldInstantiationIndex\">FieldInstantiationIndex</a>","synthetic":true,"types":["move_binary_format::file_format::FieldInstantiationIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/file_format/struct.IdentifierIndex.html\" title=\"struct move_binary_format::file_format::IdentifierIndex\">IdentifierIndex</a>","synthetic":true,"types":["move_binary_format::file_format::IdentifierIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/file_format/struct.AddressIdentifierIndex.html\" title=\"struct move_binary_format::file_format::AddressIdentifierIndex\">AddressIdentifierIndex</a>","synthetic":true,"types":["move_binary_format::file_format::AddressIdentifierIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/file_format/struct.ConstantPoolIndex.html\" title=\"struct move_binary_format::file_format::ConstantPoolIndex\">ConstantPoolIndex</a>","synthetic":true,"types":["move_binary_format::file_format::ConstantPoolIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/file_format/struct.SignatureIndex.html\" title=\"struct move_binary_format::file_format::SignatureIndex\">SignatureIndex</a>","synthetic":true,"types":["move_binary_format::file_format::SignatureIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/file_format/struct.StructDefinitionIndex.html\" title=\"struct move_binary_format::file_format::StructDefinitionIndex\">StructDefinitionIndex</a>","synthetic":true,"types":["move_binary_format::file_format::StructDefinitionIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/file_format/struct.FunctionDefinitionIndex.html\" title=\"struct move_binary_format::file_format::FunctionDefinitionIndex\">FunctionDefinitionIndex</a>","synthetic":true,"types":["move_binary_format::file_format::FunctionDefinitionIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/file_format/struct.ModuleHandle.html\" title=\"struct move_binary_format::file_format::ModuleHandle\">ModuleHandle</a>","synthetic":true,"types":["move_binary_format::file_format::ModuleHandle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/file_format/struct.StructHandle.html\" title=\"struct move_binary_format::file_format::StructHandle\">StructHandle</a>","synthetic":true,"types":["move_binary_format::file_format::StructHandle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/file_format/struct.StructTypeParameter.html\" title=\"struct move_binary_format::file_format::StructTypeParameter\">StructTypeParameter</a>","synthetic":true,"types":["move_binary_format::file_format::StructTypeParameter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/file_format/struct.FunctionHandle.html\" title=\"struct move_binary_format::file_format::FunctionHandle\">FunctionHandle</a>","synthetic":true,"types":["move_binary_format::file_format::FunctionHandle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/file_format/struct.FieldHandle.html\" title=\"struct move_binary_format::file_format::FieldHandle\">FieldHandle</a>","synthetic":true,"types":["move_binary_format::file_format::FieldHandle"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_binary_format/file_format/enum.StructFieldInformation.html\" title=\"enum move_binary_format::file_format::StructFieldInformation\">StructFieldInformation</a>","synthetic":true,"types":["move_binary_format::file_format::StructFieldInformation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/file_format/struct.StructDefInstantiation.html\" title=\"struct move_binary_format::file_format::StructDefInstantiation\">StructDefInstantiation</a>","synthetic":true,"types":["move_binary_format::file_format::StructDefInstantiation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/file_format/struct.FunctionInstantiation.html\" title=\"struct move_binary_format::file_format::FunctionInstantiation\">FunctionInstantiation</a>","synthetic":true,"types":["move_binary_format::file_format::FunctionInstantiation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/file_format/struct.FieldInstantiation.html\" title=\"struct move_binary_format::file_format::FieldInstantiation\">FieldInstantiation</a>","synthetic":true,"types":["move_binary_format::file_format::FieldInstantiation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/file_format/struct.StructDefinition.html\" title=\"struct move_binary_format::file_format::StructDefinition\">StructDefinition</a>","synthetic":true,"types":["move_binary_format::file_format::StructDefinition"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/file_format/struct.FieldDefinition.html\" title=\"struct move_binary_format::file_format::FieldDefinition\">FieldDefinition</a>","synthetic":true,"types":["move_binary_format::file_format::FieldDefinition"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_binary_format/file_format/enum.Visibility.html\" title=\"enum move_binary_format::file_format::Visibility\">Visibility</a>","synthetic":true,"types":["move_binary_format::file_format::Visibility"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/file_format/struct.FunctionDefinition.html\" title=\"struct move_binary_format::file_format::FunctionDefinition\">FunctionDefinition</a>","synthetic":true,"types":["move_binary_format::file_format::FunctionDefinition"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/file_format/struct.TypeSignature.html\" title=\"struct move_binary_format::file_format::TypeSignature\">TypeSignature</a>","synthetic":true,"types":["move_binary_format::file_format::TypeSignature"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/file_format/struct.FunctionSignature.html\" title=\"struct move_binary_format::file_format::FunctionSignature\">FunctionSignature</a>","synthetic":true,"types":["move_binary_format::file_format::FunctionSignature"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/file_format/struct.Signature.html\" title=\"struct move_binary_format::file_format::Signature\">Signature</a>","synthetic":true,"types":["move_binary_format::file_format::Signature"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_binary_format/file_format/enum.Ability.html\" title=\"enum move_binary_format::file_format::Ability\">Ability</a>","synthetic":true,"types":["move_binary_format::file_format::Ability"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/file_format/struct.AbilitySet.html\" title=\"struct move_binary_format::file_format::AbilitySet\">AbilitySet</a>","synthetic":true,"types":["move_binary_format::file_format::AbilitySet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/file_format/struct.AbilitySetIterator.html\" title=\"struct move_binary_format::file_format::AbilitySetIterator\">AbilitySetIterator</a>","synthetic":true,"types":["move_binary_format::file_format::AbilitySetIterator"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_binary_format/file_format/enum.SignatureToken.html\" title=\"enum move_binary_format::file_format::SignatureToken\">SignatureToken</a>","synthetic":true,"types":["move_binary_format::file_format::SignatureToken"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_binary_format/file_format/struct.SignatureTokenPreorderTraversalIter.html\" title=\"struct move_binary_format::file_format::SignatureTokenPreorderTraversalIter\">SignatureTokenPreorderTraversalIter</a>&lt;'a&gt;","synthetic":true,"types":["move_binary_format::file_format::SignatureTokenPreorderTraversalIter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_binary_format/file_format/struct.SignatureTokenPreorderTraversalIterWithDepth.html\" title=\"struct move_binary_format::file_format::SignatureTokenPreorderTraversalIterWithDepth\">SignatureTokenPreorderTraversalIterWithDepth</a>&lt;'a&gt;","synthetic":true,"types":["move_binary_format::file_format::SignatureTokenPreorderTraversalIterWithDepth"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/file_format/struct.Constant.html\" title=\"struct move_binary_format::file_format::Constant\">Constant</a>","synthetic":true,"types":["move_binary_format::file_format::Constant"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/file_format/struct.CodeUnit.html\" title=\"struct move_binary_format::file_format::CodeUnit\">CodeUnit</a>","synthetic":true,"types":["move_binary_format::file_format::CodeUnit"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_binary_format/file_format/enum.Bytecode.html\" title=\"enum move_binary_format::file_format::Bytecode\">Bytecode</a>","synthetic":true,"types":["move_binary_format::file_format::Bytecode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/file_format/struct.CompiledScript.html\" title=\"struct move_binary_format::file_format::CompiledScript\">CompiledScript</a>","synthetic":true,"types":["move_binary_format::file_format::CompiledScript"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/file_format/struct.CompiledModule.html\" title=\"struct move_binary_format::file_format::CompiledModule\">CompiledModule</a>","synthetic":true,"types":["move_binary_format::file_format::CompiledModule"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_binary_format/file_format_common/enum.BinaryConstants.html\" title=\"enum move_binary_format::file_format_common::BinaryConstants\">BinaryConstants</a>","synthetic":true,"types":["move_binary_format::file_format_common::BinaryConstants"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_binary_format/file_format_common/enum.TableType.html\" title=\"enum move_binary_format::file_format_common::TableType\">TableType</a>","synthetic":true,"types":["move_binary_format::file_format_common::TableType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_binary_format/file_format_common/enum.SerializedType.html\" title=\"enum move_binary_format::file_format_common::SerializedType\">SerializedType</a>","synthetic":true,"types":["move_binary_format::file_format_common::SerializedType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_binary_format/file_format_common/enum.SerializedNativeStructFlag.html\" title=\"enum move_binary_format::file_format_common::SerializedNativeStructFlag\">SerializedNativeStructFlag</a>","synthetic":true,"types":["move_binary_format::file_format_common::SerializedNativeStructFlag"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_binary_format/file_format_common/enum.Opcodes.html\" title=\"enum move_binary_format::file_format_common::Opcodes\">Opcodes</a>","synthetic":true,"types":["move_binary_format::file_format_common::Opcodes"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_binary_format/normalized/enum.Type.html\" title=\"enum move_binary_format::normalized::Type\">Type</a>","synthetic":true,"types":["move_binary_format::normalized::Type"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/normalized/struct.Field.html\" title=\"struct move_binary_format::normalized::Field\">Field</a>","synthetic":true,"types":["move_binary_format::normalized::Field"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/normalized/struct.Struct.html\" title=\"struct move_binary_format::normalized::Struct\">Struct</a>","synthetic":true,"types":["move_binary_format::normalized::Struct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/normalized/struct.Function.html\" title=\"struct move_binary_format::normalized::Function\">Function</a>","synthetic":true,"types":["move_binary_format::normalized::Function"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_binary_format/normalized/struct.Module.html\" title=\"struct move_binary_format::normalized::Module\">Module</a>","synthetic":true,"types":["move_binary_format::normalized::Module"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"move_binary_format/views/struct.ModuleView.html\" title=\"struct move_binary_format::views::ModuleView\">ModuleView</a>&lt;'a, T&gt;","synthetic":true,"types":["move_binary_format::views::ModuleView"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"move_binary_format/views/struct.ModuleHandleView.html\" title=\"struct move_binary_format::views::ModuleHandleView\">ModuleHandleView</a>&lt;'a, T&gt;","synthetic":true,"types":["move_binary_format::views::ModuleHandleView"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"move_binary_format/views/struct.StructHandleView.html\" title=\"struct move_binary_format::views::StructHandleView\">StructHandleView</a>&lt;'a, T&gt;","synthetic":true,"types":["move_binary_format::views::StructHandleView"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"move_binary_format/views/struct.FunctionHandleView.html\" title=\"struct move_binary_format::views::FunctionHandleView\">FunctionHandleView</a>&lt;'a, T&gt;","synthetic":true,"types":["move_binary_format::views::FunctionHandleView"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"move_binary_format/views/struct.StructDefinitionView.html\" title=\"struct move_binary_format::views::StructDefinitionView\">StructDefinitionView</a>&lt;'a, T&gt;","synthetic":true,"types":["move_binary_format::views::StructDefinitionView"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"move_binary_format/views/struct.FieldDefinitionView.html\" title=\"struct move_binary_format::views::FieldDefinitionView\">FieldDefinitionView</a>&lt;'a, T&gt;","synthetic":true,"types":["move_binary_format::views::FieldDefinitionView"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"move_binary_format/views/struct.LocalsSignatureView.html\" title=\"struct move_binary_format::views::LocalsSignatureView\">LocalsSignatureView</a>&lt;'a, T&gt;","synthetic":true,"types":["move_binary_format::views::LocalsSignatureView"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"move_binary_format/views/struct.FunctionDefinitionView.html\" title=\"struct move_binary_format::views::FunctionDefinitionView\">FunctionDefinitionView</a>&lt;'a, T&gt;","synthetic":true,"types":["move_binary_format::views::FunctionDefinitionView"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"move_binary_format/views/struct.StructInstantiationView.html\" title=\"struct move_binary_format::views::StructInstantiationView\">StructInstantiationView</a>&lt;'a, T&gt;","synthetic":true,"types":["move_binary_format::views::StructInstantiationView"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"move_binary_format/views/struct.FieldHandleView.html\" title=\"struct move_binary_format::views::FieldHandleView\">FieldHandleView</a>&lt;'a, T&gt;","synthetic":true,"types":["move_binary_format::views::FieldHandleView"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"move_binary_format/views/struct.FunctionInstantiationView.html\" title=\"struct move_binary_format::views::FunctionInstantiationView\">FunctionInstantiationView</a>&lt;'a, T&gt;","synthetic":true,"types":["move_binary_format::views::FunctionInstantiationView"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"move_binary_format/views/struct.FieldInstantiationView.html\" title=\"struct move_binary_format::views::FieldInstantiationView\">FieldInstantiationView</a>&lt;'a, T&gt;","synthetic":true,"types":["move_binary_format::views::FieldInstantiationView"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"move_binary_format/views/struct.TypeSignatureView.html\" title=\"struct move_binary_format::views::TypeSignatureView\">TypeSignatureView</a>&lt;'a, T&gt;","synthetic":true,"types":["move_binary_format::views::TypeSignatureView"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"move_binary_format/views/struct.SignatureView.html\" title=\"struct move_binary_format::views::SignatureView\">SignatureView</a>&lt;'a, T&gt;","synthetic":true,"types":["move_binary_format::views::SignatureView"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"move_binary_format/views/struct.SignatureTokenView.html\" title=\"struct move_binary_format::views::SignatureTokenView\">SignatureTokenView</a>&lt;'a, T&gt;","synthetic":true,"types":["move_binary_format::views::SignatureTokenView"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_binary_format/enum.IndexKind.html\" title=\"enum move_binary_format::IndexKind\">IndexKind</a>","synthetic":true,"types":["move_binary_format::IndexKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_binary_format/enum.SignatureTokenKind.html\" title=\"enum move_binary_format::SignatureTokenKind\">SignatureTokenKind</a>","synthetic":true,"types":["move_binary_format::SignatureTokenKind"]}];
implementors["move_borrow_graph"] = [{"text":"impl&lt;Loc, Lbl&gt; Freeze for <a class=\"struct\" href=\"move_borrow_graph/graph/struct.BorrowGraph.html\" title=\"struct move_borrow_graph::graph::BorrowGraph\">BorrowGraph</a>&lt;Loc, Lbl&gt;","synthetic":true,"types":["move_borrow_graph::graph::BorrowGraph"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_borrow_graph/references/struct.RefID.html\" title=\"struct move_borrow_graph::references::RefID\">RefID</a>","synthetic":true,"types":["move_borrow_graph::references::RefID"]}];
implementors["move_bytecode_source_map"] = [{"text":"impl&lt;'view&gt; Freeze for <a class=\"struct\" href=\"move_bytecode_source_map/mapping/struct.SourceMapping.html\" title=\"struct move_bytecode_source_map::mapping::SourceMapping\">SourceMapping</a>&lt;'view&gt;","synthetic":true,"types":["move_bytecode_source_map::mapping::SourceMapping"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_bytecode_source_map/marking/struct.FunctionMarking.html\" title=\"struct move_bytecode_source_map::marking::FunctionMarking\">FunctionMarking</a>","synthetic":true,"types":["move_bytecode_source_map::marking::FunctionMarking"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_bytecode_source_map/marking/struct.StructMarking.html\" title=\"struct move_bytecode_source_map::marking::StructMarking\">StructMarking</a>","synthetic":true,"types":["move_bytecode_source_map::marking::StructMarking"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_bytecode_source_map/marking/struct.MarkedSourceMapping.html\" title=\"struct move_bytecode_source_map::marking::MarkedSourceMapping\">MarkedSourceMapping</a>","synthetic":true,"types":["move_bytecode_source_map::marking::MarkedSourceMapping"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_bytecode_source_map/source_map/struct.StructSourceMap.html\" title=\"struct move_bytecode_source_map::source_map::StructSourceMap\">StructSourceMap</a>","synthetic":true,"types":["move_bytecode_source_map::source_map::StructSourceMap"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_bytecode_source_map/source_map/struct.FunctionSourceMap.html\" title=\"struct move_bytecode_source_map::source_map::FunctionSourceMap\">FunctionSourceMap</a>","synthetic":true,"types":["move_bytecode_source_map::source_map::FunctionSourceMap"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_bytecode_source_map/source_map/struct.SourceMap.html\" title=\"struct move_bytecode_source_map::source_map::SourceMap\">SourceMap</a>","synthetic":true,"types":["move_bytecode_source_map::source_map::SourceMap"]}];
implementors["move_bytecode_utils"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_bytecode_utils/dependency_graph/struct.DependencyGraph.html\" title=\"struct move_bytecode_utils::dependency_graph::DependencyGraph\">DependencyGraph</a>&lt;'a&gt;","synthetic":true,"types":["move_bytecode_utils::dependency_graph::DependencyGraph"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"move_bytecode_utils/layout/struct.SerdeLayoutBuilder.html\" title=\"struct move_bytecode_utils::layout::SerdeLayoutBuilder\">SerdeLayoutBuilder</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["move_bytecode_utils::layout::SerdeLayoutBuilder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_bytecode_utils/layout/enum.TypeLayoutBuilder.html\" title=\"enum move_bytecode_utils::layout::TypeLayoutBuilder\">TypeLayoutBuilder</a>","synthetic":true,"types":["move_bytecode_utils::layout::TypeLayoutBuilder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_bytecode_utils/layout/enum.StructLayoutBuilder.html\" title=\"enum move_bytecode_utils::layout::StructLayoutBuilder\">StructLayoutBuilder</a>","synthetic":true,"types":["move_bytecode_utils::layout::StructLayoutBuilder"]},{"text":"impl&lt;R&gt; !Freeze for <a class=\"struct\" href=\"move_bytecode_utils/module_cache/struct.ModuleCache.html\" title=\"struct move_bytecode_utils::module_cache::ModuleCache\">ModuleCache</a>&lt;R&gt;","synthetic":true,"types":["move_bytecode_utils::module_cache::ModuleCache"]},{"text":"impl&lt;R&gt; !Freeze for <a class=\"struct\" href=\"move_bytecode_utils/module_cache/struct.SyncModuleCache.html\" title=\"struct move_bytecode_utils::module_cache::SyncModuleCache\">SyncModuleCache</a>&lt;R&gt;","synthetic":true,"types":["move_bytecode_utils::module_cache::SyncModuleCache"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_bytecode_utils/struct.Modules.html\" title=\"struct move_bytecode_utils::Modules\">Modules</a>&lt;'a&gt;","synthetic":true,"types":["move_bytecode_utils::Modules"]}];
implementors["move_bytecode_verifier"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"move_bytecode_verifier/absint/enum.JoinResult.html\" title=\"enum move_bytecode_verifier::absint::JoinResult\">JoinResult</a>","synthetic":true,"types":["move_bytecode_verifier::absint::JoinResult"]},{"text":"impl&lt;AnalysisError&gt; Freeze for <a class=\"enum\" href=\"move_bytecode_verifier/absint/enum.BlockPostcondition.html\" title=\"enum move_bytecode_verifier::absint::BlockPostcondition\">BlockPostcondition</a>&lt;AnalysisError&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AnalysisError: Freeze,&nbsp;</span>","synthetic":true,"types":["move_bytecode_verifier::absint::BlockPostcondition"]},{"text":"impl&lt;State, AnalysisError&gt; Freeze for <a class=\"struct\" href=\"move_bytecode_verifier/absint/struct.BlockInvariant.html\" title=\"struct move_bytecode_verifier::absint::BlockInvariant\">BlockInvariant</a>&lt;State, AnalysisError&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AnalysisError: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;State: Freeze,&nbsp;</span>","synthetic":true,"types":["move_bytecode_verifier::absint::BlockInvariant"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_bytecode_verifier/check_duplication/struct.DuplicationChecker.html\" title=\"struct move_bytecode_verifier::check_duplication::DuplicationChecker\">DuplicationChecker</a>&lt;'a&gt;","synthetic":true,"types":["move_bytecode_verifier::check_duplication::DuplicationChecker"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_bytecode_verifier/code_unit_verifier/struct.CodeUnitVerifier.html\" title=\"struct move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier\">CodeUnitVerifier</a>&lt;'a&gt;","synthetic":true,"types":["move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_bytecode_verifier/instantiation_loops/struct.InstantiationLoopChecker.html\" title=\"struct move_bytecode_verifier::instantiation_loops::InstantiationLoopChecker\">InstantiationLoopChecker</a>&lt;'a&gt;","synthetic":true,"types":["move_bytecode_verifier::instantiation_loops::InstantiationLoopChecker"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_bytecode_verifier/instruction_consistency/struct.InstructionConsistency.html\" title=\"struct move_bytecode_verifier::instruction_consistency::InstructionConsistency\">InstructionConsistency</a>&lt;'a&gt;","synthetic":true,"types":["move_bytecode_verifier::instruction_consistency::InstructionConsistency"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_bytecode_verifier/signature/struct.SignatureChecker.html\" title=\"struct move_bytecode_verifier::signature::SignatureChecker\">SignatureChecker</a>&lt;'a&gt;","synthetic":true,"types":["move_bytecode_verifier::signature::SignatureChecker"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_bytecode_verifier/struct_defs/struct.RecursiveStructDefChecker.html\" title=\"struct move_bytecode_verifier::struct_defs::RecursiveStructDefChecker\">RecursiveStructDefChecker</a>&lt;'a&gt;","synthetic":true,"types":["move_bytecode_verifier::struct_defs::RecursiveStructDefChecker"]}];
implementors["move_bytecode_viewer"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"move_bytecode_viewer/bytecode_viewer/struct.BytecodeInfo.html\" title=\"struct move_bytecode_viewer::bytecode_viewer::BytecodeInfo\">BytecodeInfo</a>","synthetic":true,"types":["move_bytecode_viewer::bytecode_viewer::BytecodeInfo"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_bytecode_viewer/bytecode_viewer/struct.BytecodeViewer.html\" title=\"struct move_bytecode_viewer::bytecode_viewer::BytecodeViewer\">BytecodeViewer</a>&lt;'a&gt;","synthetic":true,"types":["move_bytecode_viewer::bytecode_viewer::BytecodeViewer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_bytecode_viewer/interfaces/struct.SourceContext.html\" title=\"struct move_bytecode_viewer::interfaces::SourceContext\">SourceContext</a>","synthetic":true,"types":["move_bytecode_viewer::interfaces::SourceContext"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_bytecode_viewer/source_viewer/struct.ModuleViewer.html\" title=\"struct move_bytecode_viewer::source_viewer::ModuleViewer\">ModuleViewer</a>","synthetic":true,"types":["move_bytecode_viewer::source_viewer::ModuleViewer"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_bytecode_viewer/tui/text_builder/struct.TextBuilder.html\" title=\"struct move_bytecode_viewer::tui::text_builder::TextBuilder\">TextBuilder</a>&lt;'a&gt;","synthetic":true,"types":["move_bytecode_viewer::tui::text_builder::TextBuilder"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_bytecode_viewer/tui/tui_interface/struct.TUIOutput.html\" title=\"struct move_bytecode_viewer::tui::tui_interface::TUIOutput\">TUIOutput</a>&lt;'a&gt;","synthetic":true,"types":["move_bytecode_viewer::tui::tui_interface::TUIOutput"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_bytecode_viewer/tui/tui_interface/struct.DebugInterface.html\" title=\"struct move_bytecode_viewer::tui::tui_interface::DebugInterface\">DebugInterface</a>","synthetic":true,"types":["move_bytecode_viewer::tui::tui_interface::DebugInterface"]},{"text":"impl&lt;Interface&gt; Freeze for <a class=\"struct\" href=\"move_bytecode_viewer/tui/struct.TUI.html\" title=\"struct move_bytecode_viewer::tui::TUI\">TUI</a>&lt;Interface&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Interface: Freeze,&nbsp;</span>","synthetic":true,"types":["move_bytecode_viewer::tui::TUI"]},{"text":"impl&lt;BytecodeViewer, SourceViewer&gt; Freeze for <a class=\"struct\" href=\"move_bytecode_viewer/viewer/struct.Viewer.html\" title=\"struct move_bytecode_viewer::viewer::Viewer\">Viewer</a>&lt;BytecodeViewer, SourceViewer&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;BytecodeViewer: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;SourceViewer: Freeze,&nbsp;</span>","synthetic":true,"types":["move_bytecode_viewer::viewer::Viewer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_bytecode_viewer/struct.BytecodeViewerConfig.html\" title=\"struct move_bytecode_viewer::BytecodeViewerConfig\">BytecodeViewerConfig</a>","synthetic":true,"types":["move_bytecode_viewer::BytecodeViewerConfig"]}];
implementors["move_cli"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"move_cli/experimental/cli/enum.ExperimentalCommand.html\" title=\"enum move_cli::experimental::cli::ExperimentalCommand\">ExperimentalCommand</a>","synthetic":true,"types":["move_cli::experimental::cli::ExperimentalCommand"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_cli/experimental/cli/enum.ConcretizeMode.html\" title=\"enum move_cli::experimental::cli::ConcretizeMode\">ConcretizeMode</a>","synthetic":true,"types":["move_cli::experimental::cli::ConcretizeMode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_cli/package/cli/enum.CoverageSummaryOptions.html\" title=\"enum move_cli::package::cli::CoverageSummaryOptions\">CoverageSummaryOptions</a>","synthetic":true,"types":["move_cli::package::cli::CoverageSummaryOptions"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_cli/package/cli/enum.PackageCommand.html\" title=\"enum move_cli::package::cli::PackageCommand\">PackageCommand</a>","synthetic":true,"types":["move_cli::package::cli::PackageCommand"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_cli/package/cli/enum.ProverOptions.html\" title=\"enum move_cli::package::cli::ProverOptions\">ProverOptions</a>","synthetic":true,"types":["move_cli::package::cli::ProverOptions"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_cli/package/cli/enum.UnitTestResult.html\" title=\"enum move_cli::package::cli::UnitTestResult\">UnitTestResult</a>","synthetic":true,"types":["move_cli::package::cli::UnitTestResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_cli/package/prover/struct.ProverTest.html\" title=\"struct move_cli::package::prover::ProverTest\">ProverTest</a>","synthetic":true,"types":["move_cli::package::prover::ProverTest"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_cli/sandbox/cli/enum.SandboxCommand.html\" title=\"enum move_cli::sandbox::cli::SandboxCommand\">SandboxCommand</a>","synthetic":true,"types":["move_cli::sandbox::cli::SandboxCommand"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_cli/sandbox/cli/enum.GenerateCommand.html\" title=\"enum move_cli::sandbox::cli::GenerateCommand\">GenerateCommand</a>","synthetic":true,"types":["move_cli::sandbox::cli::GenerateCommand"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_cli/sandbox/cli/struct.StructLayoutOptions.html\" title=\"struct move_cli::sandbox::cli::StructLayoutOptions\">StructLayoutOptions</a>","synthetic":true,"types":["move_cli::sandbox::cli::StructLayoutOptions"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_cli/sandbox/utils/on_disk_state_view/struct.OnDiskStateView.html\" title=\"struct move_cli::sandbox::utils::on_disk_state_view::OnDiskStateView\">OnDiskStateView</a>","synthetic":true,"types":["move_cli::sandbox::utils::on_disk_state_view::OnDiskStateView"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_cli/sandbox/utils/package_context/struct.PackageContext.html\" title=\"struct move_cli::sandbox::utils::package_context::PackageContext\">PackageContext</a>","synthetic":true,"types":["move_cli::sandbox::utils::package_context::PackageContext"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_cli/struct.Move.html\" title=\"struct move_cli::Move\">Move</a>","synthetic":true,"types":["move_cli::Move"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_cli/struct.MoveCLI.html\" title=\"struct move_cli::MoveCLI\">MoveCLI</a>","synthetic":true,"types":["move_cli::MoveCLI"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_cli/enum.Command.html\" title=\"enum move_cli::Command\">Command</a>","synthetic":true,"types":["move_cli::Command"]}];
implementors["move_command_line_common"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"move_command_line_common/address/enum.ParsedAddress.html\" title=\"enum move_command_line_common::address::ParsedAddress\">ParsedAddress</a>","synthetic":true,"types":["move_command_line_common::address::ParsedAddress"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_command_line_common/address/struct.NumericalAddress.html\" title=\"struct move_command_line_common::address::NumericalAddress\">NumericalAddress</a>","synthetic":true,"types":["move_command_line_common::address::NumericalAddress"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_command_line_common/files/struct.FileHash.html\" title=\"struct move_command_line_common::files::FileHash\">FileHash</a>","synthetic":true,"types":["move_command_line_common::files::FileHash"]},{"text":"impl&lt;'a, Tok, I&gt; Freeze for <a class=\"struct\" href=\"move_command_line_common/parser/struct.Parser.html\" title=\"struct move_command_line_common::parser::Parser\">Parser</a>&lt;'a, Tok, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Tok: Freeze,&nbsp;</span>","synthetic":true,"types":["move_command_line_common::parser::Parser"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_command_line_common/parser/enum.NumberFormat.html\" title=\"enum move_command_line_common::parser::NumberFormat\">NumberFormat</a>","synthetic":true,"types":["move_command_line_common::parser::NumberFormat"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_command_line_common/types/enum.TypeToken.html\" title=\"enum move_command_line_common::types::TypeToken\">TypeToken</a>","synthetic":true,"types":["move_command_line_common::types::TypeToken"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_command_line_common/types/struct.ParsedStructType.html\" title=\"struct move_command_line_common::types::ParsedStructType\">ParsedStructType</a>","synthetic":true,"types":["move_command_line_common::types::ParsedStructType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_command_line_common/types/enum.ParsedType.html\" title=\"enum move_command_line_common::types::ParsedType\">ParsedType</a>","synthetic":true,"types":["move_command_line_common::types::ParsedType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_command_line_common/values/enum.ValueToken.html\" title=\"enum move_command_line_common::values::ValueToken\">ValueToken</a>","synthetic":true,"types":["move_command_line_common::values::ValueToken"]},{"text":"impl&lt;Extra&gt; Freeze for <a class=\"enum\" href=\"move_command_line_common/values/enum.ParsedValue.html\" title=\"enum move_command_line_common::values::ParsedValue\">ParsedValue</a>&lt;Extra&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Extra: Freeze,&nbsp;</span>","synthetic":true,"types":["move_command_line_common::values::ParsedValue"]}];
implementors["move_compiler"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/cfgir/ast/struct.Program.html\" title=\"struct move_compiler::cfgir::ast::Program\">Program</a>","synthetic":true,"types":["move_compiler::cfgir::ast::Program"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/cfgir/ast/struct.Script.html\" title=\"struct move_compiler::cfgir::ast::Script\">Script</a>","synthetic":true,"types":["move_compiler::cfgir::ast::Script"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/cfgir/ast/struct.ModuleDefinition.html\" title=\"struct move_compiler::cfgir::ast::ModuleDefinition\">ModuleDefinition</a>","synthetic":true,"types":["move_compiler::cfgir::ast::ModuleDefinition"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/cfgir/ast/struct.Constant.html\" title=\"struct move_compiler::cfgir::ast::Constant\">Constant</a>","synthetic":true,"types":["move_compiler::cfgir::ast::Constant"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/cfgir/ast/enum.FunctionBody_.html\" title=\"enum move_compiler::cfgir::ast::FunctionBody_\">FunctionBody_</a>","synthetic":true,"types":["move_compiler::cfgir::ast::FunctionBody_"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/cfgir/ast/struct.Function.html\" title=\"struct move_compiler::cfgir::ast::Function\">Function</a>","synthetic":true,"types":["move_compiler::cfgir::ast::Function"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/cfgir/ast/enum.LoopEnd.html\" title=\"enum move_compiler::cfgir::ast::LoopEnd\">LoopEnd</a>","synthetic":true,"types":["move_compiler::cfgir::ast::LoopEnd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/cfgir/ast/struct.LoopInfo.html\" title=\"struct move_compiler::cfgir::ast::LoopInfo\">LoopInfo</a>","synthetic":true,"types":["move_compiler::cfgir::ast::LoopInfo"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/cfgir/ast/enum.BlockInfo.html\" title=\"enum move_compiler::cfgir::ast::BlockInfo\">BlockInfo</a>","synthetic":true,"types":["move_compiler::cfgir::ast::BlockInfo"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_compiler/command_line/compiler/struct.Compiler.html\" title=\"struct move_compiler::command_line::compiler::Compiler\">Compiler</a>&lt;'a&gt;","synthetic":true,"types":["move_compiler::command_line::compiler::Compiler"]},{"text":"impl&lt;'a, const P:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.61.0/std/primitive.u8.html\">u8</a>&gt; Freeze for <a class=\"struct\" href=\"move_compiler/command_line/compiler/struct.SteppedCompiler.html\" title=\"struct move_compiler::command_line::compiler::SteppedCompiler\">SteppedCompiler</a>&lt;'a, P&gt;","synthetic":true,"types":["move_compiler::command_line::compiler::SteppedCompiler"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/command_line/compiler/struct.FullyCompiledProgram.html\" title=\"struct move_compiler::command_line::compiler::FullyCompiledProgram\">FullyCompiledProgram</a>","synthetic":true,"types":["move_compiler::command_line::compiler::FullyCompiledProgram"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/compiled_unit/struct.VarInfo.html\" title=\"struct move_compiler::compiled_unit::VarInfo\">VarInfo</a>","synthetic":true,"types":["move_compiler::compiled_unit::VarInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/compiled_unit/struct.SpecInfo.html\" title=\"struct move_compiler::compiled_unit::SpecInfo\">SpecInfo</a>","synthetic":true,"types":["move_compiler::compiled_unit::SpecInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/compiled_unit/struct.FunctionInfo.html\" title=\"struct move_compiler::compiled_unit::FunctionInfo\">FunctionInfo</a>","synthetic":true,"types":["move_compiler::compiled_unit::FunctionInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/compiled_unit/struct.NamedCompiledModule.html\" title=\"struct move_compiler::compiled_unit::NamedCompiledModule\">NamedCompiledModule</a>","synthetic":true,"types":["move_compiler::compiled_unit::NamedCompiledModule"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/compiled_unit/struct.NamedCompiledScript.html\" title=\"struct move_compiler::compiled_unit::NamedCompiledScript\">NamedCompiledScript</a>","synthetic":true,"types":["move_compiler::compiled_unit::NamedCompiledScript"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/compiled_unit/struct.AnnotatedCompiledModule.html\" title=\"struct move_compiler::compiled_unit::AnnotatedCompiledModule\">AnnotatedCompiledModule</a>","synthetic":true,"types":["move_compiler::compiled_unit::AnnotatedCompiledModule"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/compiled_unit/struct.AnnotatedCompiledScript.html\" title=\"struct move_compiler::compiled_unit::AnnotatedCompiledScript\">AnnotatedCompiledScript</a>","synthetic":true,"types":["move_compiler::compiled_unit::AnnotatedCompiledScript"]},{"text":"impl&lt;TModule, TScript&gt; Freeze for <a class=\"enum\" href=\"move_compiler/compiled_unit/enum.CompiledUnitEnum.html\" title=\"enum move_compiler::compiled_unit::CompiledUnitEnum\">CompiledUnitEnum</a>&lt;TModule, TScript&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TModule: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;TScript: Freeze,&nbsp;</span>","synthetic":true,"types":["move_compiler::compiled_unit::CompiledUnitEnum"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/diagnostics/codes/enum.Severity.html\" title=\"enum move_compiler::diagnostics::codes::Severity\">Severity</a>","synthetic":true,"types":["move_compiler::diagnostics::codes::Severity"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/diagnostics/codes/struct.DiagnosticInfo.html\" title=\"struct move_compiler::diagnostics::codes::DiagnosticInfo\">DiagnosticInfo</a>","synthetic":true,"types":["move_compiler::diagnostics::codes::DiagnosticInfo"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/diagnostics/codes/enum.Category.html\" title=\"enum move_compiler::diagnostics::codes::Category\">Category</a>","synthetic":true,"types":["move_compiler::diagnostics::codes::Category"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/diagnostics/codes/enum.Uncategorized.html\" title=\"enum move_compiler::diagnostics::codes::Uncategorized\">Uncategorized</a>","synthetic":true,"types":["move_compiler::diagnostics::codes::Uncategorized"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/diagnostics/codes/enum.Syntax.html\" title=\"enum move_compiler::diagnostics::codes::Syntax\">Syntax</a>","synthetic":true,"types":["move_compiler::diagnostics::codes::Syntax"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/diagnostics/codes/enum.Declarations.html\" title=\"enum move_compiler::diagnostics::codes::Declarations\">Declarations</a>","synthetic":true,"types":["move_compiler::diagnostics::codes::Declarations"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/diagnostics/codes/enum.NameResolution.html\" title=\"enum move_compiler::diagnostics::codes::NameResolution\">NameResolution</a>","synthetic":true,"types":["move_compiler::diagnostics::codes::NameResolution"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/diagnostics/codes/enum.TypeSafety.html\" title=\"enum move_compiler::diagnostics::codes::TypeSafety\">TypeSafety</a>","synthetic":true,"types":["move_compiler::diagnostics::codes::TypeSafety"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/diagnostics/codes/enum.AbilitySafety.html\" title=\"enum move_compiler::diagnostics::codes::AbilitySafety\">AbilitySafety</a>","synthetic":true,"types":["move_compiler::diagnostics::codes::AbilitySafety"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/diagnostics/codes/enum.MoveSafety.html\" title=\"enum move_compiler::diagnostics::codes::MoveSafety\">MoveSafety</a>","synthetic":true,"types":["move_compiler::diagnostics::codes::MoveSafety"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/diagnostics/codes/enum.ReferenceSafety.html\" title=\"enum move_compiler::diagnostics::codes::ReferenceSafety\">ReferenceSafety</a>","synthetic":true,"types":["move_compiler::diagnostics::codes::ReferenceSafety"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/diagnostics/codes/enum.BytecodeGeneration.html\" title=\"enum move_compiler::diagnostics::codes::BytecodeGeneration\">BytecodeGeneration</a>","synthetic":true,"types":["move_compiler::diagnostics::codes::BytecodeGeneration"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/diagnostics/codes/enum.UnusedItem.html\" title=\"enum move_compiler::diagnostics::codes::UnusedItem\">UnusedItem</a>","synthetic":true,"types":["move_compiler::diagnostics::codes::UnusedItem"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/diagnostics/codes/enum.Attributes.html\" title=\"enum move_compiler::diagnostics::codes::Attributes\">Attributes</a>","synthetic":true,"types":["move_compiler::diagnostics::codes::Attributes"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/diagnostics/codes/enum.Tests.html\" title=\"enum move_compiler::diagnostics::codes::Tests\">Tests</a>","synthetic":true,"types":["move_compiler::diagnostics::codes::Tests"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/diagnostics/codes/enum.Bug.html\" title=\"enum move_compiler::diagnostics::codes::Bug\">Bug</a>","synthetic":true,"types":["move_compiler::diagnostics::codes::Bug"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/diagnostics/codes/enum.Derivation.html\" title=\"enum move_compiler::diagnostics::codes::Derivation\">Derivation</a>","synthetic":true,"types":["move_compiler::diagnostics::codes::Derivation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/diagnostics/struct.Diagnostic.html\" title=\"struct move_compiler::diagnostics::Diagnostic\">Diagnostic</a>","synthetic":true,"types":["move_compiler::diagnostics::Diagnostic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/diagnostics/struct.Diagnostics.html\" title=\"struct move_compiler::diagnostics::Diagnostics\">Diagnostics</a>","synthetic":true,"types":["move_compiler::diagnostics::Diagnostics"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/expansion/ast/struct.Program.html\" title=\"struct move_compiler::expansion::ast::Program\">Program</a>","synthetic":true,"types":["move_compiler::expansion::ast::Program"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/expansion/ast/enum.AttributeValue_.html\" title=\"enum move_compiler::expansion::ast::AttributeValue_\">AttributeValue_</a>","synthetic":true,"types":["move_compiler::expansion::ast::AttributeValue_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/expansion/ast/enum.Attribute_.html\" title=\"enum move_compiler::expansion::ast::Attribute_\">Attribute_</a>","synthetic":true,"types":["move_compiler::expansion::ast::Attribute_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/expansion/ast/enum.AttributeName_.html\" title=\"enum move_compiler::expansion::ast::AttributeName_\">AttributeName_</a>","synthetic":true,"types":["move_compiler::expansion::ast::AttributeName_"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/expansion/ast/struct.Script.html\" title=\"struct move_compiler::expansion::ast::Script\">Script</a>","synthetic":true,"types":["move_compiler::expansion::ast::Script"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/expansion/ast/enum.Address.html\" title=\"enum move_compiler::expansion::ast::Address\">Address</a>","synthetic":true,"types":["move_compiler::expansion::ast::Address"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/expansion/ast/struct.ModuleIdent_.html\" title=\"struct move_compiler::expansion::ast::ModuleIdent_\">ModuleIdent_</a>","synthetic":true,"types":["move_compiler::expansion::ast::ModuleIdent_"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/expansion/ast/struct.ModuleDefinition.html\" title=\"struct move_compiler::expansion::ast::ModuleDefinition\">ModuleDefinition</a>","synthetic":true,"types":["move_compiler::expansion::ast::ModuleDefinition"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/expansion/ast/struct.Friend.html\" title=\"struct move_compiler::expansion::ast::Friend\">Friend</a>","synthetic":true,"types":["move_compiler::expansion::ast::Friend"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/expansion/ast/enum.Neighbor.html\" title=\"enum move_compiler::expansion::ast::Neighbor\">Neighbor</a>","synthetic":true,"types":["move_compiler::expansion::ast::Neighbor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/expansion/ast/struct.StructTypeParameter.html\" title=\"struct move_compiler::expansion::ast::StructTypeParameter\">StructTypeParameter</a>","synthetic":true,"types":["move_compiler::expansion::ast::StructTypeParameter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/expansion/ast/struct.StructDefinition.html\" title=\"struct move_compiler::expansion::ast::StructDefinition\">StructDefinition</a>","synthetic":true,"types":["move_compiler::expansion::ast::StructDefinition"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/expansion/ast/enum.StructFields.html\" title=\"enum move_compiler::expansion::ast::StructFields\">StructFields</a>","synthetic":true,"types":["move_compiler::expansion::ast::StructFields"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/expansion/ast/struct.FunctionSignature.html\" title=\"struct move_compiler::expansion::ast::FunctionSignature\">FunctionSignature</a>","synthetic":true,"types":["move_compiler::expansion::ast::FunctionSignature"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/expansion/ast/enum.FunctionBody_.html\" title=\"enum move_compiler::expansion::ast::FunctionBody_\">FunctionBody_</a>","synthetic":true,"types":["move_compiler::expansion::ast::FunctionBody_"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/expansion/ast/struct.SpecId.html\" title=\"struct move_compiler::expansion::ast::SpecId\">SpecId</a>","synthetic":true,"types":["move_compiler::expansion::ast::SpecId"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/expansion/ast/struct.Function.html\" title=\"struct move_compiler::expansion::ast::Function\">Function</a>","synthetic":true,"types":["move_compiler::expansion::ast::Function"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/expansion/ast/struct.Constant.html\" title=\"struct move_compiler::expansion::ast::Constant\">Constant</a>","synthetic":true,"types":["move_compiler::expansion::ast::Constant"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/expansion/ast/struct.SpecBlock_.html\" title=\"struct move_compiler::expansion::ast::SpecBlock_\">SpecBlock_</a>","synthetic":true,"types":["move_compiler::expansion::ast::SpecBlock_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/expansion/ast/enum.SpecBlockTarget_.html\" title=\"enum move_compiler::expansion::ast::SpecBlockTarget_\">SpecBlockTarget_</a>","synthetic":true,"types":["move_compiler::expansion::ast::SpecBlockTarget_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/expansion/ast/enum.SpecBlockMember_.html\" title=\"enum move_compiler::expansion::ast::SpecBlockMember_\">SpecBlockMember_</a>","synthetic":true,"types":["move_compiler::expansion::ast::SpecBlockMember_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/expansion/ast/enum.SpecConditionKind_.html\" title=\"enum move_compiler::expansion::ast::SpecConditionKind_\">SpecConditionKind_</a>","synthetic":true,"types":["move_compiler::expansion::ast::SpecConditionKind_"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/expansion/ast/struct.PragmaProperty_.html\" title=\"struct move_compiler::expansion::ast::PragmaProperty_\">PragmaProperty_</a>","synthetic":true,"types":["move_compiler::expansion::ast::PragmaProperty_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/expansion/ast/enum.PragmaValue.html\" title=\"enum move_compiler::expansion::ast::PragmaValue\">PragmaValue</a>","synthetic":true,"types":["move_compiler::expansion::ast::PragmaValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/expansion/ast/struct.AbilitySet.html\" title=\"struct move_compiler::expansion::ast::AbilitySet\">AbilitySet</a>","synthetic":true,"types":["move_compiler::expansion::ast::AbilitySet"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/expansion/ast/enum.ModuleAccess_.html\" title=\"enum move_compiler::expansion::ast::ModuleAccess_\">ModuleAccess_</a>","synthetic":true,"types":["move_compiler::expansion::ast::ModuleAccess_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/expansion/ast/enum.Type_.html\" title=\"enum move_compiler::expansion::ast::Type_\">Type_</a>","synthetic":true,"types":["move_compiler::expansion::ast::Type_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/expansion/ast/enum.LValue_.html\" title=\"enum move_compiler::expansion::ast::LValue_\">LValue_</a>","synthetic":true,"types":["move_compiler::expansion::ast::LValue_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/expansion/ast/enum.ExpDotted_.html\" title=\"enum move_compiler::expansion::ast::ExpDotted_\">ExpDotted_</a>","synthetic":true,"types":["move_compiler::expansion::ast::ExpDotted_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/expansion/ast/enum.Value_.html\" title=\"enum move_compiler::expansion::ast::Value_\">Value_</a>","synthetic":true,"types":["move_compiler::expansion::ast::Value_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/expansion/ast/enum.Exp_.html\" title=\"enum move_compiler::expansion::ast::Exp_\">Exp_</a>","synthetic":true,"types":["move_compiler::expansion::ast::Exp_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/expansion/ast/enum.SequenceItem_.html\" title=\"enum move_compiler::expansion::ast::SequenceItem_\">SequenceItem_</a>","synthetic":true,"types":["move_compiler::expansion::ast::SequenceItem_"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_compiler/expansion/ast/struct.AbilitySetIter.html\" title=\"struct move_compiler::expansion::ast::AbilitySetIter\">AbilitySetIter</a>&lt;'a&gt;","synthetic":true,"types":["move_compiler::expansion::ast::AbilitySetIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/expansion/ast/struct.AbilitySetIntoIter.html\" title=\"struct move_compiler::expansion::ast::AbilitySetIntoIter\">AbilitySetIntoIter</a>","synthetic":true,"types":["move_compiler::expansion::ast::AbilitySetIntoIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/hlir/ast/struct.Program.html\" title=\"struct move_compiler::hlir::ast::Program\">Program</a>","synthetic":true,"types":["move_compiler::hlir::ast::Program"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/hlir/ast/struct.Script.html\" title=\"struct move_compiler::hlir::ast::Script\">Script</a>","synthetic":true,"types":["move_compiler::hlir::ast::Script"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/hlir/ast/struct.ModuleDefinition.html\" title=\"struct move_compiler::hlir::ast::ModuleDefinition\">ModuleDefinition</a>","synthetic":true,"types":["move_compiler::hlir::ast::ModuleDefinition"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/hlir/ast/struct.StructDefinition.html\" title=\"struct move_compiler::hlir::ast::StructDefinition\">StructDefinition</a>","synthetic":true,"types":["move_compiler::hlir::ast::StructDefinition"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/hlir/ast/enum.StructFields.html\" title=\"enum move_compiler::hlir::ast::StructFields\">StructFields</a>","synthetic":true,"types":["move_compiler::hlir::ast::StructFields"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/hlir/ast/struct.Constant.html\" title=\"struct move_compiler::hlir::ast::Constant\">Constant</a>","synthetic":true,"types":["move_compiler::hlir::ast::Constant"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/hlir/ast/struct.FunctionSignature.html\" title=\"struct move_compiler::hlir::ast::FunctionSignature\">FunctionSignature</a>","synthetic":true,"types":["move_compiler::hlir::ast::FunctionSignature"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/hlir/ast/enum.FunctionBody_.html\" title=\"enum move_compiler::hlir::ast::FunctionBody_\">FunctionBody_</a>","synthetic":true,"types":["move_compiler::hlir::ast::FunctionBody_"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/hlir/ast/struct.Function.html\" title=\"struct move_compiler::hlir::ast::Function\">Function</a>","synthetic":true,"types":["move_compiler::hlir::ast::Function"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/hlir/ast/enum.TypeName_.html\" title=\"enum move_compiler::hlir::ast::TypeName_\">TypeName_</a>","synthetic":true,"types":["move_compiler::hlir::ast::TypeName_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/hlir/ast/enum.BaseType_.html\" title=\"enum move_compiler::hlir::ast::BaseType_\">BaseType_</a>","synthetic":true,"types":["move_compiler::hlir::ast::BaseType_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/hlir/ast/enum.SingleType_.html\" title=\"enum move_compiler::hlir::ast::SingleType_\">SingleType_</a>","synthetic":true,"types":["move_compiler::hlir::ast::SingleType_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/hlir/ast/enum.Type_.html\" title=\"enum move_compiler::hlir::ast::Type_\">Type_</a>","synthetic":true,"types":["move_compiler::hlir::ast::Type_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/hlir/ast/enum.Statement_.html\" title=\"enum move_compiler::hlir::ast::Statement_\">Statement_</a>","synthetic":true,"types":["move_compiler::hlir::ast::Statement_"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/hlir/ast/struct.Label.html\" title=\"struct move_compiler::hlir::ast::Label\">Label</a>","synthetic":true,"types":["move_compiler::hlir::ast::Label"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/hlir/ast/enum.Command_.html\" title=\"enum move_compiler::hlir::ast::Command_\">Command_</a>","synthetic":true,"types":["move_compiler::hlir::ast::Command_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/hlir/ast/enum.LValue_.html\" title=\"enum move_compiler::hlir::ast::LValue_\">LValue_</a>","synthetic":true,"types":["move_compiler::hlir::ast::LValue_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/hlir/ast/enum.UnitCase.html\" title=\"enum move_compiler::hlir::ast::UnitCase\">UnitCase</a>","synthetic":true,"types":["move_compiler::hlir::ast::UnitCase"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/hlir/ast/struct.ModuleCall.html\" title=\"struct move_compiler::hlir::ast::ModuleCall\">ModuleCall</a>","synthetic":true,"types":["move_compiler::hlir::ast::ModuleCall"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/hlir/ast/enum.BuiltinFunction_.html\" title=\"enum move_compiler::hlir::ast::BuiltinFunction_\">BuiltinFunction_</a>","synthetic":true,"types":["move_compiler::hlir::ast::BuiltinFunction_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/hlir/ast/enum.Value_.html\" title=\"enum move_compiler::hlir::ast::Value_\">Value_</a>","synthetic":true,"types":["move_compiler::hlir::ast::Value_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/hlir/ast/enum.MoveOpAnnotation.html\" title=\"enum move_compiler::hlir::ast::MoveOpAnnotation\">MoveOpAnnotation</a>","synthetic":true,"types":["move_compiler::hlir::ast::MoveOpAnnotation"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/hlir/ast/enum.UnannotatedExp_.html\" title=\"enum move_compiler::hlir::ast::UnannotatedExp_\">UnannotatedExp_</a>","synthetic":true,"types":["move_compiler::hlir::ast::UnannotatedExp_"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/hlir/ast/struct.Exp.html\" title=\"struct move_compiler::hlir::ast::Exp\">Exp</a>","synthetic":true,"types":["move_compiler::hlir::ast::Exp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/hlir/ast/enum.ExpListItem.html\" title=\"enum move_compiler::hlir::ast::ExpListItem\">ExpListItem</a>","synthetic":true,"types":["move_compiler::hlir::ast::ExpListItem"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/naming/ast/struct.Program.html\" title=\"struct move_compiler::naming::ast::Program\">Program</a>","synthetic":true,"types":["move_compiler::naming::ast::Program"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/naming/ast/struct.Script.html\" title=\"struct move_compiler::naming::ast::Script\">Script</a>","synthetic":true,"types":["move_compiler::naming::ast::Script"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/naming/ast/struct.ModuleDefinition.html\" title=\"struct move_compiler::naming::ast::ModuleDefinition\">ModuleDefinition</a>","synthetic":true,"types":["move_compiler::naming::ast::ModuleDefinition"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/naming/ast/struct.StructDefinition.html\" title=\"struct move_compiler::naming::ast::StructDefinition\">StructDefinition</a>","synthetic":true,"types":["move_compiler::naming::ast::StructDefinition"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/naming/ast/struct.StructTypeParameter.html\" title=\"struct move_compiler::naming::ast::StructTypeParameter\">StructTypeParameter</a>","synthetic":true,"types":["move_compiler::naming::ast::StructTypeParameter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/naming/ast/enum.StructFields.html\" title=\"enum move_compiler::naming::ast::StructFields\">StructFields</a>","synthetic":true,"types":["move_compiler::naming::ast::StructFields"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/naming/ast/struct.FunctionSignature.html\" title=\"struct move_compiler::naming::ast::FunctionSignature\">FunctionSignature</a>","synthetic":true,"types":["move_compiler::naming::ast::FunctionSignature"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/naming/ast/enum.FunctionBody_.html\" title=\"enum move_compiler::naming::ast::FunctionBody_\">FunctionBody_</a>","synthetic":true,"types":["move_compiler::naming::ast::FunctionBody_"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/naming/ast/struct.Function.html\" title=\"struct move_compiler::naming::ast::Function\">Function</a>","synthetic":true,"types":["move_compiler::naming::ast::Function"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/naming/ast/struct.Constant.html\" title=\"struct move_compiler::naming::ast::Constant\">Constant</a>","synthetic":true,"types":["move_compiler::naming::ast::Constant"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/naming/ast/enum.BuiltinTypeName_.html\" title=\"enum move_compiler::naming::ast::BuiltinTypeName_\">BuiltinTypeName_</a>","synthetic":true,"types":["move_compiler::naming::ast::BuiltinTypeName_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/naming/ast/enum.TypeName_.html\" title=\"enum move_compiler::naming::ast::TypeName_\">TypeName_</a>","synthetic":true,"types":["move_compiler::naming::ast::TypeName_"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/naming/ast/struct.TParamID.html\" title=\"struct move_compiler::naming::ast::TParamID\">TParamID</a>","synthetic":true,"types":["move_compiler::naming::ast::TParamID"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/naming/ast/struct.TParam.html\" title=\"struct move_compiler::naming::ast::TParam\">TParam</a>","synthetic":true,"types":["move_compiler::naming::ast::TParam"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/naming/ast/struct.TVar.html\" title=\"struct move_compiler::naming::ast::TVar\">TVar</a>","synthetic":true,"types":["move_compiler::naming::ast::TVar"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/naming/ast/enum.Type_.html\" title=\"enum move_compiler::naming::ast::Type_\">Type_</a>","synthetic":true,"types":["move_compiler::naming::ast::Type_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/naming/ast/enum.LValue_.html\" title=\"enum move_compiler::naming::ast::LValue_\">LValue_</a>","synthetic":true,"types":["move_compiler::naming::ast::LValue_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/naming/ast/enum.ExpDotted_.html\" title=\"enum move_compiler::naming::ast::ExpDotted_\">ExpDotted_</a>","synthetic":true,"types":["move_compiler::naming::ast::ExpDotted_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/naming/ast/enum.BuiltinFunction_.html\" title=\"enum move_compiler::naming::ast::BuiltinFunction_\">BuiltinFunction_</a>","synthetic":true,"types":["move_compiler::naming::ast::BuiltinFunction_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/naming/ast/enum.Exp_.html\" title=\"enum move_compiler::naming::ast::Exp_\">Exp_</a>","synthetic":true,"types":["move_compiler::naming::ast::Exp_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/naming/ast/enum.SequenceItem_.html\" title=\"enum move_compiler::naming::ast::SequenceItem_\">SequenceItem_</a>","synthetic":true,"types":["move_compiler::naming::ast::SequenceItem_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/parser/lexer/enum.Tok.html\" title=\"enum move_compiler::parser::lexer::Tok\">Tok</a>","synthetic":true,"types":["move_compiler::parser::lexer::Tok"]},{"text":"impl&lt;'input&gt; Freeze for <a class=\"struct\" href=\"move_compiler/parser/lexer/struct.Lexer.html\" title=\"struct move_compiler::parser::lexer::Lexer\">Lexer</a>&lt;'input&gt;","synthetic":true,"types":["move_compiler::parser::lexer::Lexer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/parser/ast/struct.Program.html\" title=\"struct move_compiler::parser::ast::Program\">Program</a>","synthetic":true,"types":["move_compiler::parser::ast::Program"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/parser/ast/struct.PackageDefinition.html\" title=\"struct move_compiler::parser::ast::PackageDefinition\">PackageDefinition</a>","synthetic":true,"types":["move_compiler::parser::ast::PackageDefinition"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/parser/ast/enum.Definition.html\" title=\"enum move_compiler::parser::ast::Definition\">Definition</a>","synthetic":true,"types":["move_compiler::parser::ast::Definition"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/parser/ast/struct.AddressDefinition.html\" title=\"struct move_compiler::parser::ast::AddressDefinition\">AddressDefinition</a>","synthetic":true,"types":["move_compiler::parser::ast::AddressDefinition"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/parser/ast/struct.Script.html\" title=\"struct move_compiler::parser::ast::Script\">Script</a>","synthetic":true,"types":["move_compiler::parser::ast::Script"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/parser/ast/enum.Use.html\" title=\"enum move_compiler::parser::ast::Use\">Use</a>","synthetic":true,"types":["move_compiler::parser::ast::Use"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/parser/ast/struct.UseDecl.html\" title=\"struct move_compiler::parser::ast::UseDecl\">UseDecl</a>","synthetic":true,"types":["move_compiler::parser::ast::UseDecl"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/parser/ast/enum.AttributeValue_.html\" title=\"enum move_compiler::parser::ast::AttributeValue_\">AttributeValue_</a>","synthetic":true,"types":["move_compiler::parser::ast::AttributeValue_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/parser/ast/enum.Attribute_.html\" title=\"enum move_compiler::parser::ast::Attribute_\">Attribute_</a>","synthetic":true,"types":["move_compiler::parser::ast::Attribute_"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/parser/ast/struct.ModuleName.html\" title=\"struct move_compiler::parser::ast::ModuleName\">ModuleName</a>","synthetic":true,"types":["move_compiler::parser::ast::ModuleName"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/parser/ast/enum.LeadingNameAccess_.html\" title=\"enum move_compiler::parser::ast::LeadingNameAccess_\">LeadingNameAccess_</a>","synthetic":true,"types":["move_compiler::parser::ast::LeadingNameAccess_"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/parser/ast/struct.ModuleIdent_.html\" title=\"struct move_compiler::parser::ast::ModuleIdent_\">ModuleIdent_</a>","synthetic":true,"types":["move_compiler::parser::ast::ModuleIdent_"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/parser/ast/struct.ModuleDefinition.html\" title=\"struct move_compiler::parser::ast::ModuleDefinition\">ModuleDefinition</a>","synthetic":true,"types":["move_compiler::parser::ast::ModuleDefinition"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/parser/ast/enum.ModuleMember.html\" title=\"enum move_compiler::parser::ast::ModuleMember\">ModuleMember</a>","synthetic":true,"types":["move_compiler::parser::ast::ModuleMember"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/parser/ast/struct.FriendDecl.html\" title=\"struct move_compiler::parser::ast::FriendDecl\">FriendDecl</a>","synthetic":true,"types":["move_compiler::parser::ast::FriendDecl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/parser/ast/struct.Field.html\" title=\"struct move_compiler::parser::ast::Field\">Field</a>","synthetic":true,"types":["move_compiler::parser::ast::Field"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/parser/ast/struct.StructName.html\" title=\"struct move_compiler::parser::ast::StructName\">StructName</a>","synthetic":true,"types":["move_compiler::parser::ast::StructName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/parser/ast/struct.StructTypeParameter.html\" title=\"struct move_compiler::parser::ast::StructTypeParameter\">StructTypeParameter</a>","synthetic":true,"types":["move_compiler::parser::ast::StructTypeParameter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/parser/ast/struct.StructDefinition.html\" title=\"struct move_compiler::parser::ast::StructDefinition\">StructDefinition</a>","synthetic":true,"types":["move_compiler::parser::ast::StructDefinition"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/parser/ast/enum.StructFields.html\" title=\"enum move_compiler::parser::ast::StructFields\">StructFields</a>","synthetic":true,"types":["move_compiler::parser::ast::StructFields"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/parser/ast/struct.FunctionName.html\" title=\"struct move_compiler::parser::ast::FunctionName\">FunctionName</a>","synthetic":true,"types":["move_compiler::parser::ast::FunctionName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/parser/ast/struct.FunctionSignature.html\" title=\"struct move_compiler::parser::ast::FunctionSignature\">FunctionSignature</a>","synthetic":true,"types":["move_compiler::parser::ast::FunctionSignature"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/parser/ast/enum.Visibility.html\" title=\"enum move_compiler::parser::ast::Visibility\">Visibility</a>","synthetic":true,"types":["move_compiler::parser::ast::Visibility"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/parser/ast/enum.FunctionBody_.html\" title=\"enum move_compiler::parser::ast::FunctionBody_\">FunctionBody_</a>","synthetic":true,"types":["move_compiler::parser::ast::FunctionBody_"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/parser/ast/struct.Function.html\" title=\"struct move_compiler::parser::ast::Function\">Function</a>","synthetic":true,"types":["move_compiler::parser::ast::Function"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/parser/ast/struct.ConstantName.html\" title=\"struct move_compiler::parser::ast::ConstantName\">ConstantName</a>","synthetic":true,"types":["move_compiler::parser::ast::ConstantName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/parser/ast/struct.Constant.html\" title=\"struct move_compiler::parser::ast::Constant\">Constant</a>","synthetic":true,"types":["move_compiler::parser::ast::Constant"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/parser/ast/struct.SpecBlock_.html\" title=\"struct move_compiler::parser::ast::SpecBlock_\">SpecBlock_</a>","synthetic":true,"types":["move_compiler::parser::ast::SpecBlock_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/parser/ast/enum.SpecBlockTarget_.html\" title=\"enum move_compiler::parser::ast::SpecBlockTarget_\">SpecBlockTarget_</a>","synthetic":true,"types":["move_compiler::parser::ast::SpecBlockTarget_"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/parser/ast/struct.PragmaProperty_.html\" title=\"struct move_compiler::parser::ast::PragmaProperty_\">PragmaProperty_</a>","synthetic":true,"types":["move_compiler::parser::ast::PragmaProperty_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/parser/ast/enum.PragmaValue.html\" title=\"enum move_compiler::parser::ast::PragmaValue\">PragmaValue</a>","synthetic":true,"types":["move_compiler::parser::ast::PragmaValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/parser/ast/struct.SpecApplyPattern_.html\" title=\"struct move_compiler::parser::ast::SpecApplyPattern_\">SpecApplyPattern_</a>","synthetic":true,"types":["move_compiler::parser::ast::SpecApplyPattern_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/parser/ast/enum.SpecApplyFragment_.html\" title=\"enum move_compiler::parser::ast::SpecApplyFragment_\">SpecApplyFragment_</a>","synthetic":true,"types":["move_compiler::parser::ast::SpecApplyFragment_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/parser/ast/enum.SpecBlockMember_.html\" title=\"enum move_compiler::parser::ast::SpecBlockMember_\">SpecBlockMember_</a>","synthetic":true,"types":["move_compiler::parser::ast::SpecBlockMember_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/parser/ast/enum.SpecConditionKind_.html\" title=\"enum move_compiler::parser::ast::SpecConditionKind_\">SpecConditionKind_</a>","synthetic":true,"types":["move_compiler::parser::ast::SpecConditionKind_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/parser/ast/enum.NameAccessChain_.html\" title=\"enum move_compiler::parser::ast::NameAccessChain_\">NameAccessChain_</a>","synthetic":true,"types":["move_compiler::parser::ast::NameAccessChain_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/parser/ast/enum.Ability_.html\" title=\"enum move_compiler::parser::ast::Ability_\">Ability_</a>","synthetic":true,"types":["move_compiler::parser::ast::Ability_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/parser/ast/enum.Type_.html\" title=\"enum move_compiler::parser::ast::Type_\">Type_</a>","synthetic":true,"types":["move_compiler::parser::ast::Type_"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/parser/ast/struct.Var.html\" title=\"struct move_compiler::parser::ast::Var\">Var</a>","synthetic":true,"types":["move_compiler::parser::ast::Var"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/parser/ast/enum.Bind_.html\" title=\"enum move_compiler::parser::ast::Bind_\">Bind_</a>","synthetic":true,"types":["move_compiler::parser::ast::Bind_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/parser/ast/enum.Value_.html\" title=\"enum move_compiler::parser::ast::Value_\">Value_</a>","synthetic":true,"types":["move_compiler::parser::ast::Value_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/parser/ast/enum.UnaryOp_.html\" title=\"enum move_compiler::parser::ast::UnaryOp_\">UnaryOp_</a>","synthetic":true,"types":["move_compiler::parser::ast::UnaryOp_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/parser/ast/enum.BinOp_.html\" title=\"enum move_compiler::parser::ast::BinOp_\">BinOp_</a>","synthetic":true,"types":["move_compiler::parser::ast::BinOp_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/parser/ast/enum.QuantKind_.html\" title=\"enum move_compiler::parser::ast::QuantKind_\">QuantKind_</a>","synthetic":true,"types":["move_compiler::parser::ast::QuantKind_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/parser/ast/enum.Exp_.html\" title=\"enum move_compiler::parser::ast::Exp_\">Exp_</a>","synthetic":true,"types":["move_compiler::parser::ast::Exp_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/parser/ast/enum.SequenceItem_.html\" title=\"enum move_compiler::parser::ast::SequenceItem_\">SequenceItem_</a>","synthetic":true,"types":["move_compiler::parser::ast::SequenceItem_"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/shared/ast_debug/struct.AstWriter.html\" title=\"struct move_compiler::shared::ast_debug::AstWriter\">AstWriter</a>","synthetic":true,"types":["move_compiler::shared::ast_debug::AstWriter"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"move_compiler/shared/remembering_unique_map/struct.RememberingUniqueMap.html\" title=\"struct move_compiler::shared::remembering_unique_map::RememberingUniqueMap\">RememberingUniqueMap</a>&lt;K, V&gt;","synthetic":true,"types":["move_compiler::shared::remembering_unique_map::RememberingUniqueMap"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"move_compiler/shared/remembering_unique_map/struct.IntoIter.html\" title=\"struct move_compiler::shared::remembering_unique_map::IntoIter\">IntoIter</a>&lt;K, V&gt;","synthetic":true,"types":["move_compiler::shared::remembering_unique_map::IntoIter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"move_compiler/shared/remembering_unique_map/struct.Iter.html\" title=\"struct move_compiler::shared::remembering_unique_map::Iter\">Iter</a>&lt;'a, K, V&gt;","synthetic":true,"types":["move_compiler::shared::remembering_unique_map::Iter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"move_compiler/shared/remembering_unique_map/struct.IterMut.html\" title=\"struct move_compiler::shared::remembering_unique_map::IterMut\">IterMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["move_compiler::shared::remembering_unique_map::IterMut"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"move_compiler/shared/unique_map/struct.UniqueMap.html\" title=\"struct move_compiler::shared::unique_map::UniqueMap\">UniqueMap</a>&lt;K, V&gt;","synthetic":true,"types":["move_compiler::shared::unique_map::UniqueMap"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"move_compiler/shared/unique_map/struct.IntoIter.html\" title=\"struct move_compiler::shared::unique_map::IntoIter\">IntoIter</a>&lt;K, V&gt;","synthetic":true,"types":["move_compiler::shared::unique_map::IntoIter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"move_compiler/shared/unique_map/struct.Iter.html\" title=\"struct move_compiler::shared::unique_map::Iter\">Iter</a>&lt;'a, K, V&gt;","synthetic":true,"types":["move_compiler::shared::unique_map::Iter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"move_compiler/shared/unique_map/struct.IterMut.html\" title=\"struct move_compiler::shared::unique_map::IterMut\">IterMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["move_compiler::shared::unique_map::IterMut"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"move_compiler/shared/unique_set/struct.UniqueSet.html\" title=\"struct move_compiler::shared::unique_set::UniqueSet\">UniqueSet</a>&lt;T&gt;","synthetic":true,"types":["move_compiler::shared::unique_set::UniqueSet"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"move_compiler/shared/unique_set/struct.IntoIter.html\" title=\"struct move_compiler::shared::unique_set::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["move_compiler::shared::unique_set::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"move_compiler/shared/unique_set/struct.Iter.html\" title=\"struct move_compiler::shared::unique_set::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["move_compiler::shared::unique_set::Iter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/shared/known_attributes/enum.AttributePosition.html\" title=\"enum move_compiler::shared::known_attributes::AttributePosition\">AttributePosition</a>","synthetic":true,"types":["move_compiler::shared::known_attributes::AttributePosition"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/shared/known_attributes/enum.KnownAttribute.html\" title=\"enum move_compiler::shared::known_attributes::KnownAttribute\">KnownAttribute</a>","synthetic":true,"types":["move_compiler::shared::known_attributes::KnownAttribute"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/shared/known_attributes/enum.TestingAttribute.html\" title=\"enum move_compiler::shared::known_attributes::TestingAttribute\">TestingAttribute</a>","synthetic":true,"types":["move_compiler::shared::known_attributes::TestingAttribute"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/shared/known_attributes/enum.NativeAttribute.html\" title=\"enum move_compiler::shared::known_attributes::NativeAttribute\">NativeAttribute</a>","synthetic":true,"types":["move_compiler::shared::known_attributes::NativeAttribute"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/shared/struct.NamedAddressMapIndex.html\" title=\"struct move_compiler::shared::NamedAddressMapIndex\">NamedAddressMapIndex</a>","synthetic":true,"types":["move_compiler::shared::NamedAddressMapIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/shared/struct.NamedAddressMaps.html\" title=\"struct move_compiler::shared::NamedAddressMaps\">NamedAddressMaps</a>","synthetic":true,"types":["move_compiler::shared::NamedAddressMaps"]},{"text":"impl&lt;Path, NamedAddress&gt; Freeze for <a class=\"struct\" href=\"move_compiler/shared/struct.PackagePaths.html\" title=\"struct move_compiler::shared::PackagePaths\">PackagePaths</a>&lt;Path, NamedAddress&gt;","synthetic":true,"types":["move_compiler::shared::PackagePaths"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/shared/struct.IndexedPackagePath.html\" title=\"struct move_compiler::shared::IndexedPackagePath\">IndexedPackagePath</a>","synthetic":true,"types":["move_compiler::shared::IndexedPackagePath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/shared/struct.CompilationEnv.html\" title=\"struct move_compiler::shared::CompilationEnv\">CompilationEnv</a>","synthetic":true,"types":["move_compiler::shared::CompilationEnv"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/shared/struct.Counter.html\" title=\"struct move_compiler::shared::Counter\">Counter</a>","synthetic":true,"types":["move_compiler::shared::Counter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/shared/struct.Flags.html\" title=\"struct move_compiler::shared::Flags\">Flags</a>","synthetic":true,"types":["move_compiler::shared::Flags"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/typing/ast/struct.Program.html\" title=\"struct move_compiler::typing::ast::Program\">Program</a>","synthetic":true,"types":["move_compiler::typing::ast::Program"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/typing/ast/struct.Script.html\" title=\"struct move_compiler::typing::ast::Script\">Script</a>","synthetic":true,"types":["move_compiler::typing::ast::Script"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/typing/ast/struct.ModuleDefinition.html\" title=\"struct move_compiler::typing::ast::ModuleDefinition\">ModuleDefinition</a>","synthetic":true,"types":["move_compiler::typing::ast::ModuleDefinition"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/typing/ast/enum.FunctionBody_.html\" title=\"enum move_compiler::typing::ast::FunctionBody_\">FunctionBody_</a>","synthetic":true,"types":["move_compiler::typing::ast::FunctionBody_"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/typing/ast/struct.Function.html\" title=\"struct move_compiler::typing::ast::Function\">Function</a>","synthetic":true,"types":["move_compiler::typing::ast::Function"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/typing/ast/struct.Constant.html\" title=\"struct move_compiler::typing::ast::Constant\">Constant</a>","synthetic":true,"types":["move_compiler::typing::ast::Constant"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/typing/ast/enum.LValue_.html\" title=\"enum move_compiler::typing::ast::LValue_\">LValue_</a>","synthetic":true,"types":["move_compiler::typing::ast::LValue_"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/typing/ast/struct.ModuleCall.html\" title=\"struct move_compiler::typing::ast::ModuleCall\">ModuleCall</a>","synthetic":true,"types":["move_compiler::typing::ast::ModuleCall"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/typing/ast/enum.BuiltinFunction_.html\" title=\"enum move_compiler::typing::ast::BuiltinFunction_\">BuiltinFunction_</a>","synthetic":true,"types":["move_compiler::typing::ast::BuiltinFunction_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/typing/ast/enum.UnannotatedExp_.html\" title=\"enum move_compiler::typing::ast::UnannotatedExp_\">UnannotatedExp_</a>","synthetic":true,"types":["move_compiler::typing::ast::UnannotatedExp_"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/typing/ast/struct.Exp.html\" title=\"struct move_compiler::typing::ast::Exp\">Exp</a>","synthetic":true,"types":["move_compiler::typing::ast::Exp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/typing/ast/enum.SequenceItem_.html\" title=\"enum move_compiler::typing::ast::SequenceItem_\">SequenceItem_</a>","synthetic":true,"types":["move_compiler::typing::ast::SequenceItem_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/typing/ast/enum.ExpListItem.html\" title=\"enum move_compiler::typing::ast::ExpListItem\">ExpListItem</a>","synthetic":true,"types":["move_compiler::typing::ast::ExpListItem"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/unit_test/struct.TestPlan.html\" title=\"struct move_compiler::unit_test::TestPlan\">TestPlan</a>","synthetic":true,"types":["move_compiler::unit_test::TestPlan"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/unit_test/struct.ModuleTestPlan.html\" title=\"struct move_compiler::unit_test::ModuleTestPlan\">ModuleTestPlan</a>","synthetic":true,"types":["move_compiler::unit_test::ModuleTestPlan"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_compiler/unit_test/struct.TestCase.html\" title=\"struct move_compiler::unit_test::TestCase\">TestCase</a>","synthetic":true,"types":["move_compiler::unit_test::TestCase"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_compiler/unit_test/enum.ExpectedFailure.html\" title=\"enum move_compiler::unit_test::ExpectedFailure\">ExpectedFailure</a>","synthetic":true,"types":["move_compiler::unit_test::ExpectedFailure"]}];
implementors["move_core_types"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"move_core_types/abi/enum.ScriptABI.html\" title=\"enum move_core_types::abi::ScriptABI\">ScriptABI</a>","synthetic":true,"types":["move_core_types::abi::ScriptABI"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_core_types/abi/struct.ScriptFunctionABI.html\" title=\"struct move_core_types::abi::ScriptFunctionABI\">ScriptFunctionABI</a>","synthetic":true,"types":["move_core_types::abi::ScriptFunctionABI"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_core_types/abi/struct.TransactionScriptABI.html\" title=\"struct move_core_types::abi::TransactionScriptABI\">TransactionScriptABI</a>","synthetic":true,"types":["move_core_types::abi::TransactionScriptABI"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_core_types/abi/struct.ArgumentABI.html\" title=\"struct move_core_types::abi::ArgumentABI\">ArgumentABI</a>","synthetic":true,"types":["move_core_types::abi::ArgumentABI"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_core_types/abi/struct.TypeArgumentABI.html\" title=\"struct move_core_types::abi::TypeArgumentABI\">TypeArgumentABI</a>","synthetic":true,"types":["move_core_types::abi::TypeArgumentABI"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_core_types/account_address/struct.AccountAddress.html\" title=\"struct move_core_types::account_address::AccountAddress\">AccountAddress</a>","synthetic":true,"types":["move_core_types::account_address::AccountAddress"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_core_types/account_address/struct.AccountAddressParseError.html\" title=\"struct move_core_types::account_address::AccountAddressParseError\">AccountAddressParseError</a>","synthetic":true,"types":["move_core_types::account_address::AccountAddressParseError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_core_types/effects/struct.AccountChangeSet.html\" title=\"struct move_core_types::effects::AccountChangeSet\">AccountChangeSet</a>","synthetic":true,"types":["move_core_types::effects::AccountChangeSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_core_types/effects/struct.ChangeSet.html\" title=\"struct move_core_types::effects::ChangeSet\">ChangeSet</a>","synthetic":true,"types":["move_core_types::effects::ChangeSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_core_types/errmap/struct.ErrorDescription.html\" title=\"struct move_core_types::errmap::ErrorDescription\">ErrorDescription</a>","synthetic":true,"types":["move_core_types::errmap::ErrorDescription"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_core_types/errmap/struct.ErrorContext.html\" title=\"struct move_core_types::errmap::ErrorContext\">ErrorContext</a>","synthetic":true,"types":["move_core_types::errmap::ErrorContext"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_core_types/errmap/struct.ErrorMapping.html\" title=\"struct move_core_types::errmap::ErrorMapping\">ErrorMapping</a>","synthetic":true,"types":["move_core_types::errmap::ErrorMapping"]},{"text":"impl&lt;GasCarrier&gt; Freeze for <a class=\"struct\" href=\"move_core_types/gas_schedule/struct.AbstractMemorySize.html\" title=\"struct move_core_types::gas_schedule::AbstractMemorySize\">AbstractMemorySize</a>&lt;GasCarrier&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;GasCarrier: Freeze,&nbsp;</span>","synthetic":true,"types":["move_core_types::gas_schedule::AbstractMemorySize"]},{"text":"impl&lt;GasCarrier&gt; Freeze for <a class=\"struct\" href=\"move_core_types/gas_schedule/struct.GasUnits.html\" title=\"struct move_core_types::gas_schedule::GasUnits\">GasUnits</a>&lt;GasCarrier&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;GasCarrier: Freeze,&nbsp;</span>","synthetic":true,"types":["move_core_types::gas_schedule::GasUnits"]},{"text":"impl&lt;GasCarrier&gt; Freeze for <a class=\"struct\" href=\"move_core_types/gas_schedule/struct.InternalGasUnits.html\" title=\"struct move_core_types::gas_schedule::InternalGasUnits\">InternalGasUnits</a>&lt;GasCarrier&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;GasCarrier: Freeze,&nbsp;</span>","synthetic":true,"types":["move_core_types::gas_schedule::InternalGasUnits"]},{"text":"impl&lt;GasCarrier&gt; Freeze for <a class=\"struct\" href=\"move_core_types/gas_schedule/struct.GasPrice.html\" title=\"struct move_core_types::gas_schedule::GasPrice\">GasPrice</a>&lt;GasCarrier&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;GasCarrier: Freeze,&nbsp;</span>","synthetic":true,"types":["move_core_types::gas_schedule::GasPrice"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_core_types/gas_schedule/struct.GasConstants.html\" title=\"struct move_core_types::gas_schedule::GasConstants\">GasConstants</a>","synthetic":true,"types":["move_core_types::gas_schedule::GasConstants"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_core_types/gas_schedule/struct.CostTable.html\" title=\"struct move_core_types::gas_schedule::CostTable\">CostTable</a>","synthetic":true,"types":["move_core_types::gas_schedule::CostTable"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_core_types/gas_schedule/struct.GasCost.html\" title=\"struct move_core_types::gas_schedule::GasCost\">GasCost</a>","synthetic":true,"types":["move_core_types::gas_schedule::GasCost"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_core_types/identifier/struct.Identifier.html\" title=\"struct move_core_types::identifier::Identifier\">Identifier</a>","synthetic":true,"types":["move_core_types::identifier::Identifier"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_core_types/identifier/struct.IdentStr.html\" title=\"struct move_core_types::identifier::IdentStr\">IdentStr</a>","synthetic":true,"types":["move_core_types::identifier::IdentStr"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_core_types/language_storage/enum.TypeTag.html\" title=\"enum move_core_types::language_storage::TypeTag\">TypeTag</a>","synthetic":true,"types":["move_core_types::language_storage::TypeTag"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_core_types/language_storage/struct.StructTag.html\" title=\"struct move_core_types::language_storage::StructTag\">StructTag</a>","synthetic":true,"types":["move_core_types::language_storage::StructTag"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_core_types/language_storage/struct.ResourceKey.html\" title=\"struct move_core_types::language_storage::ResourceKey\">ResourceKey</a>","synthetic":true,"types":["move_core_types::language_storage::ResourceKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_core_types/language_storage/struct.ModuleId.html\" title=\"struct move_core_types::language_storage::ModuleId\">ModuleId</a>","synthetic":true,"types":["move_core_types::language_storage::ModuleId"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_core_types/metadata/struct.Metadata.html\" title=\"struct move_core_types::metadata::Metadata\">Metadata</a>","synthetic":true,"types":["move_core_types::metadata::Metadata"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_core_types/transaction_argument/enum.TransactionArgument.html\" title=\"enum move_core_types::transaction_argument::TransactionArgument\">TransactionArgument</a>","synthetic":true,"types":["move_core_types::transaction_argument::TransactionArgument"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_core_types/transaction_argument/struct.VecBytes.html\" title=\"struct move_core_types::transaction_argument::VecBytes\">VecBytes</a>","synthetic":true,"types":["move_core_types::transaction_argument::VecBytes"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_core_types/value/enum.MoveStruct.html\" title=\"enum move_core_types::value::MoveStruct\">MoveStruct</a>","synthetic":true,"types":["move_core_types::value::MoveStruct"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_core_types/value/enum.MoveValue.html\" title=\"enum move_core_types::value::MoveValue\">MoveValue</a>","synthetic":true,"types":["move_core_types::value::MoveValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_core_types/value/struct.MoveFieldLayout.html\" title=\"struct move_core_types::value::MoveFieldLayout\">MoveFieldLayout</a>","synthetic":true,"types":["move_core_types::value::MoveFieldLayout"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_core_types/value/enum.MoveStructLayout.html\" title=\"enum move_core_types::value::MoveStructLayout\">MoveStructLayout</a>","synthetic":true,"types":["move_core_types::value::MoveStructLayout"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_core_types/value/enum.MoveTypeLayout.html\" title=\"enum move_core_types::value::MoveTypeLayout\">MoveTypeLayout</a>","synthetic":true,"types":["move_core_types::value::MoveTypeLayout"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_core_types/vm_status/enum.VMStatus.html\" title=\"enum move_core_types::vm_status::VMStatus\">VMStatus</a>","synthetic":true,"types":["move_core_types::vm_status::VMStatus"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_core_types/vm_status/enum.KeptVMStatus.html\" title=\"enum move_core_types::vm_status::KeptVMStatus\">KeptVMStatus</a>","synthetic":true,"types":["move_core_types::vm_status::KeptVMStatus"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_core_types/vm_status/enum.AbortLocation.html\" title=\"enum move_core_types::vm_status::AbortLocation\">AbortLocation</a>","synthetic":true,"types":["move_core_types::vm_status::AbortLocation"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_core_types/vm_status/enum.StatusType.html\" title=\"enum move_core_types::vm_status::StatusType\">StatusType</a>","synthetic":true,"types":["move_core_types::vm_status::StatusType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_core_types/vm_status/enum.StatusCode.html\" title=\"enum move_core_types::vm_status::StatusCode\">StatusCode</a>","synthetic":true,"types":["move_core_types::vm_status::StatusCode"]}];
implementors["move_coverage"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"move_coverage/coverage_map/struct.CoverageMap.html\" title=\"struct move_coverage::coverage_map::CoverageMap\">CoverageMap</a>","synthetic":true,"types":["move_coverage::coverage_map::CoverageMap"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_coverage/coverage_map/struct.ModuleCoverageMap.html\" title=\"struct move_coverage::coverage_map::ModuleCoverageMap\">ModuleCoverageMap</a>","synthetic":true,"types":["move_coverage::coverage_map::ModuleCoverageMap"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_coverage/coverage_map/struct.ExecCoverageMap.html\" title=\"struct move_coverage::coverage_map::ExecCoverageMap\">ExecCoverageMap</a>","synthetic":true,"types":["move_coverage::coverage_map::ExecCoverageMap"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_coverage/coverage_map/struct.ExecCoverageMapWithModules.html\" title=\"struct move_coverage::coverage_map::ExecCoverageMapWithModules\">ExecCoverageMapWithModules</a>","synthetic":true,"types":["move_coverage::coverage_map::ExecCoverageMapWithModules"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_coverage/coverage_map/struct.TraceEntry.html\" title=\"struct move_coverage::coverage_map::TraceEntry\">TraceEntry</a>","synthetic":true,"types":["move_coverage::coverage_map::TraceEntry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_coverage/coverage_map/struct.TraceMap.html\" title=\"struct move_coverage::coverage_map::TraceMap\">TraceMap</a>","synthetic":true,"types":["move_coverage::coverage_map::TraceMap"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_coverage/source_coverage/struct.FunctionSourceCoverage.html\" title=\"struct move_coverage::source_coverage::FunctionSourceCoverage\">FunctionSourceCoverage</a>","synthetic":true,"types":["move_coverage::source_coverage::FunctionSourceCoverage"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_coverage/source_coverage/struct.SourceCoverageBuilder.html\" title=\"struct move_coverage::source_coverage::SourceCoverageBuilder\">SourceCoverageBuilder</a>&lt;'a&gt;","synthetic":true,"types":["move_coverage::source_coverage::SourceCoverageBuilder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_coverage/source_coverage/enum.AbstractSegment.html\" title=\"enum move_coverage::source_coverage::AbstractSegment\">AbstractSegment</a>","synthetic":true,"types":["move_coverage::source_coverage::AbstractSegment"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_coverage/source_coverage/enum.StringSegment.html\" title=\"enum move_coverage::source_coverage::StringSegment\">StringSegment</a>","synthetic":true,"types":["move_coverage::source_coverage::StringSegment"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_coverage/source_coverage/struct.SourceCoverage.html\" title=\"struct move_coverage::source_coverage::SourceCoverage\">SourceCoverage</a>","synthetic":true,"types":["move_coverage::source_coverage::SourceCoverage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_coverage/summary/struct.ModuleSummary.html\" title=\"struct move_coverage::summary::ModuleSummary\">ModuleSummary</a>","synthetic":true,"types":["move_coverage::summary::ModuleSummary"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_coverage/summary/struct.FunctionSummary.html\" title=\"struct move_coverage::summary::FunctionSummary\">FunctionSummary</a>","synthetic":true,"types":["move_coverage::summary::FunctionSummary"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_coverage/summary/struct.FunctionInfo.html\" title=\"struct move_coverage::summary::FunctionInfo\">FunctionInfo</a>","synthetic":true,"types":["move_coverage::summary::FunctionInfo"]}];
implementors["move_disassembler"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"move_disassembler/disassembler/struct.DisassemblerOptions.html\" title=\"struct move_disassembler::disassembler::DisassemblerOptions\">DisassemblerOptions</a>","synthetic":true,"types":["move_disassembler::disassembler::DisassemblerOptions"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_disassembler/disassembler/struct.Disassembler.html\" title=\"struct move_disassembler::disassembler::Disassembler\">Disassembler</a>&lt;'a&gt;","synthetic":true,"types":["move_disassembler::disassembler::Disassembler"]}];
implementors["move_docgen"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"move_docgen/struct.DocgenOptions.html\" title=\"struct move_docgen::DocgenOptions\">DocgenOptions</a>","synthetic":true,"types":["move_docgen::docgen::DocgenOptions"]},{"text":"impl&lt;'env&gt; !Freeze for <a class=\"struct\" href=\"move_docgen/struct.Docgen.html\" title=\"struct move_docgen::Docgen\">Docgen</a>&lt;'env&gt;","synthetic":true,"types":["move_docgen::docgen::Docgen"]}];
implementors["move_errmapgen"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"move_errmapgen/struct.ErrmapOptions.html\" title=\"struct move_errmapgen::ErrmapOptions\">ErrmapOptions</a>","synthetic":true,"types":["move_errmapgen::errmapgen::ErrmapOptions"]},{"text":"impl&lt;'env&gt; Freeze for <a class=\"struct\" href=\"move_errmapgen/struct.ErrmapGen.html\" title=\"struct move_errmapgen::ErrmapGen\">ErrmapGen</a>&lt;'env&gt;","synthetic":true,"types":["move_errmapgen::errmapgen::ErrmapGen"]}];
implementors["move_ir_compiler"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_ir_compiler/struct.Compiler.html\" title=\"struct move_ir_compiler::Compiler\">Compiler</a>&lt;'a&gt;","synthetic":true,"types":["move_ir_compiler::Compiler"]}];
implementors["move_ir_to_bytecode_syntax"] = [{"text":"impl&lt;L, E&gt; Freeze for <a class=\"enum\" href=\"move_ir_to_bytecode_syntax/syntax/enum.ParseError.html\" title=\"enum move_ir_to_bytecode_syntax::syntax::ParseError\">ParseError</a>&lt;L, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,&nbsp;</span>","synthetic":true,"types":["move_ir_to_bytecode_syntax::syntax::ParseError"]}];
implementors["move_ir_types"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"move_ir_types/ast/struct.Program.html\" title=\"struct move_ir_types::ast::Program\">Program</a>","synthetic":true,"types":["move_ir_types::ast::Program"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_ir_types/ast/enum.ScriptOrModule.html\" title=\"enum move_ir_types::ast::ScriptOrModule\">ScriptOrModule</a>","synthetic":true,"types":["move_ir_types::ast::ScriptOrModule"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_ir_types/ast/struct.Script.html\" title=\"struct move_ir_types::ast::Script\">Script</a>","synthetic":true,"types":["move_ir_types::ast::Script"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_ir_types/ast/struct.ModuleName.html\" title=\"struct move_ir_types::ast::ModuleName\">ModuleName</a>","synthetic":true,"types":["move_ir_types::ast::ModuleName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_ir_types/ast/struct.ModuleIdent.html\" title=\"struct move_ir_types::ast::ModuleIdent\">ModuleIdent</a>","synthetic":true,"types":["move_ir_types::ast::ModuleIdent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_ir_types/ast/struct.ModuleDefinition.html\" title=\"struct move_ir_types::ast::ModuleDefinition\">ModuleDefinition</a>","synthetic":true,"types":["move_ir_types::ast::ModuleDefinition"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_ir_types/ast/struct.ModuleDependency.html\" title=\"struct move_ir_types::ast::ModuleDependency\">ModuleDependency</a>","synthetic":true,"types":["move_ir_types::ast::ModuleDependency"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_ir_types/ast/struct.ImportDefinition.html\" title=\"struct move_ir_types::ast::ImportDefinition\">ImportDefinition</a>","synthetic":true,"types":["move_ir_types::ast::ImportDefinition"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_ir_types/ast/struct.Var_.html\" title=\"struct move_ir_types::ast::Var_\">Var_</a>","synthetic":true,"types":["move_ir_types::ast::Var_"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_ir_types/ast/struct.TypeVar_.html\" title=\"struct move_ir_types::ast::TypeVar_\">TypeVar_</a>","synthetic":true,"types":["move_ir_types::ast::TypeVar_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_ir_types/ast/enum.Ability.html\" title=\"enum move_ir_types::ast::Ability\">Ability</a>","synthetic":true,"types":["move_ir_types::ast::Ability"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_ir_types/ast/enum.Type.html\" title=\"enum move_ir_types::ast::Type\">Type</a>","synthetic":true,"types":["move_ir_types::ast::Type"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_ir_types/ast/struct.QualifiedStructIdent.html\" title=\"struct move_ir_types::ast::QualifiedStructIdent\">QualifiedStructIdent</a>","synthetic":true,"types":["move_ir_types::ast::QualifiedStructIdent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_ir_types/ast/struct.Field_.html\" title=\"struct move_ir_types::ast::Field_\">Field_</a>","synthetic":true,"types":["move_ir_types::ast::Field_"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_ir_types/ast/struct.FieldIdent_.html\" title=\"struct move_ir_types::ast::FieldIdent_\">FieldIdent_</a>","synthetic":true,"types":["move_ir_types::ast::FieldIdent_"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_ir_types/ast/struct.StructName.html\" title=\"struct move_ir_types::ast::StructName\">StructName</a>","synthetic":true,"types":["move_ir_types::ast::StructName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_ir_types/ast/struct.StructDefinition_.html\" title=\"struct move_ir_types::ast::StructDefinition_\">StructDefinition_</a>","synthetic":true,"types":["move_ir_types::ast::StructDefinition_"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_ir_types/ast/struct.StructDependency.html\" title=\"struct move_ir_types::ast::StructDependency\">StructDependency</a>","synthetic":true,"types":["move_ir_types::ast::StructDependency"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_ir_types/ast/enum.StructDefinitionFields.html\" title=\"enum move_ir_types::ast::StructDefinitionFields\">StructDefinitionFields</a>","synthetic":true,"types":["move_ir_types::ast::StructDefinitionFields"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_ir_types/ast/struct.ConstantName.html\" title=\"struct move_ir_types::ast::ConstantName\">ConstantName</a>","synthetic":true,"types":["move_ir_types::ast::ConstantName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_ir_types/ast/struct.Constant.html\" title=\"struct move_ir_types::ast::Constant\">Constant</a>","synthetic":true,"types":["move_ir_types::ast::Constant"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_ir_types/ast/struct.FunctionName.html\" title=\"struct move_ir_types::ast::FunctionName\">FunctionName</a>","synthetic":true,"types":["move_ir_types::ast::FunctionName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_ir_types/ast/struct.FunctionSignature.html\" title=\"struct move_ir_types::ast::FunctionSignature\">FunctionSignature</a>","synthetic":true,"types":["move_ir_types::ast::FunctionSignature"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_ir_types/ast/struct.FunctionDependency.html\" title=\"struct move_ir_types::ast::FunctionDependency\">FunctionDependency</a>","synthetic":true,"types":["move_ir_types::ast::FunctionDependency"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_ir_types/ast/enum.FunctionVisibility.html\" title=\"enum move_ir_types::ast::FunctionVisibility\">FunctionVisibility</a>","synthetic":true,"types":["move_ir_types::ast::FunctionVisibility"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_ir_types/ast/enum.FunctionBody.html\" title=\"enum move_ir_types::ast::FunctionBody\">FunctionBody</a>","synthetic":true,"types":["move_ir_types::ast::FunctionBody"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_ir_types/ast/struct.Function_.html\" title=\"struct move_ir_types::ast::Function_\">Function_</a>","synthetic":true,"types":["move_ir_types::ast::Function_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_ir_types/ast/enum.Builtin.html\" title=\"enum move_ir_types::ast::Builtin\">Builtin</a>","synthetic":true,"types":["move_ir_types::ast::Builtin"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_ir_types/ast/enum.FunctionCall_.html\" title=\"enum move_ir_types::ast::FunctionCall_\">FunctionCall_</a>","synthetic":true,"types":["move_ir_types::ast::FunctionCall_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_ir_types/ast/enum.LValue_.html\" title=\"enum move_ir_types::ast::LValue_\">LValue_</a>","synthetic":true,"types":["move_ir_types::ast::LValue_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_ir_types/ast/enum.Statement_.html\" title=\"enum move_ir_types::ast::Statement_\">Statement_</a>","synthetic":true,"types":["move_ir_types::ast::Statement_"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_ir_types/ast/struct.Block_.html\" title=\"struct move_ir_types::ast::Block_\">Block_</a>","synthetic":true,"types":["move_ir_types::ast::Block_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_ir_types/ast/enum.CopyableVal_.html\" title=\"enum move_ir_types::ast::CopyableVal_\">CopyableVal_</a>","synthetic":true,"types":["move_ir_types::ast::CopyableVal_"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_ir_types/ast/enum.UnaryOp.html\" title=\"enum move_ir_types::ast::UnaryOp\">UnaryOp</a>","synthetic":true,"types":["move_ir_types::ast::UnaryOp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_ir_types/ast/enum.BinOp.html\" title=\"enum move_ir_types::ast::BinOp\">BinOp</a>","synthetic":true,"types":["move_ir_types::ast::BinOp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_ir_types/ast/enum.Exp_.html\" title=\"enum move_ir_types::ast::Exp_\">Exp_</a>","synthetic":true,"types":["move_ir_types::ast::Exp_"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_ir_types/ast/struct.BlockLabel_.html\" title=\"struct move_ir_types::ast::BlockLabel_\">BlockLabel_</a>","synthetic":true,"types":["move_ir_types::ast::BlockLabel_"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_ir_types/ast/struct.NopLabel.html\" title=\"struct move_ir_types::ast::NopLabel\">NopLabel</a>","synthetic":true,"types":["move_ir_types::ast::NopLabel"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_ir_types/ast/enum.Bytecode_.html\" title=\"enum move_ir_types::ast::Bytecode_\">Bytecode_</a>","synthetic":true,"types":["move_ir_types::ast::Bytecode_"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_ir_types/location/struct.Loc.html\" title=\"struct move_ir_types::location::Loc\">Loc</a>","synthetic":true,"types":["move_ir_types::location::Loc"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"move_ir_types/location/struct.Spanned.html\" title=\"struct move_ir_types::location::Spanned\">Spanned</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["move_ir_types::location::Spanned"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_ir_types/spec_language_ast/enum.FieldOrIndex.html\" title=\"enum move_ir_types::spec_language_ast::FieldOrIndex\">FieldOrIndex</a>","synthetic":true,"types":["move_ir_types::spec_language_ast::FieldOrIndex"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_ir_types/spec_language_ast/enum.StorageLocation.html\" title=\"enum move_ir_types::spec_language_ast::StorageLocation\">StorageLocation</a>","synthetic":true,"types":["move_ir_types::spec_language_ast::StorageLocation"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_ir_types/spec_language_ast/enum.SpecExp.html\" title=\"enum move_ir_types::spec_language_ast::SpecExp\">SpecExp</a>","synthetic":true,"types":["move_ir_types::spec_language_ast::SpecExp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_ir_types/spec_language_ast/enum.Condition_.html\" title=\"enum move_ir_types::spec_language_ast::Condition_\">Condition_</a>","synthetic":true,"types":["move_ir_types::spec_language_ast::Condition_"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_ir_types/spec_language_ast/struct.Invariant_.html\" title=\"struct move_ir_types::spec_language_ast::Invariant_\">Invariant_</a>","synthetic":true,"types":["move_ir_types::spec_language_ast::Invariant_"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_ir_types/spec_language_ast/struct.SyntheticDefinition_.html\" title=\"struct move_ir_types::spec_language_ast::SyntheticDefinition_\">SyntheticDefinition_</a>","synthetic":true,"types":["move_ir_types::spec_language_ast::SyntheticDefinition_"]}];
implementors["move_model"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"move_model/ast/struct.SpecVarDecl.html\" title=\"struct move_model::ast::SpecVarDecl\">SpecVarDecl</a>","synthetic":true,"types":["move_model::ast::SpecVarDecl"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"move_model/ast/struct.SpecFunDecl.html\" title=\"struct move_model::ast::SpecFunDecl\">SpecFunDecl</a>","synthetic":true,"types":["move_model::ast::SpecFunDecl"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_model/ast/enum.AttributeValue.html\" title=\"enum move_model::ast::AttributeValue\">AttributeValue</a>","synthetic":true,"types":["move_model::ast::AttributeValue"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_model/ast/enum.Attribute.html\" title=\"enum move_model::ast::Attribute\">Attribute</a>","synthetic":true,"types":["move_model::ast::Attribute"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_model/ast/enum.ConditionKind.html\" title=\"enum move_model::ast::ConditionKind\">ConditionKind</a>","synthetic":true,"types":["move_model::ast::ConditionKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_model/ast/enum.QuantKind.html\" title=\"enum move_model::ast::QuantKind\">QuantKind</a>","synthetic":true,"types":["move_model::ast::QuantKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_model/ast/struct.Condition.html\" title=\"struct move_model::ast::Condition\">Condition</a>","synthetic":true,"types":["move_model::ast::Condition"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_model/ast/enum.PropertyValue.html\" title=\"enum move_model::ast::PropertyValue\">PropertyValue</a>","synthetic":true,"types":["move_model::ast::PropertyValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_model/ast/struct.Spec.html\" title=\"struct move_model::ast::Spec\">Spec</a>","synthetic":true,"types":["move_model::ast::Spec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_model/ast/struct.SpecBlockInfo.html\" title=\"struct move_model::ast::SpecBlockInfo\">SpecBlockInfo</a>","synthetic":true,"types":["move_model::ast::SpecBlockInfo"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_model/ast/enum.SpecBlockTarget.html\" title=\"enum move_model::ast::SpecBlockTarget\">SpecBlockTarget</a>","synthetic":true,"types":["move_model::ast::SpecBlockTarget"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_model/ast/struct.GlobalInvariant.html\" title=\"struct move_model::ast::GlobalInvariant\">GlobalInvariant</a>","synthetic":true,"types":["move_model::ast::GlobalInvariant"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_model/ast/enum.ExpData.html\" title=\"enum move_model::ast::ExpData\">ExpData</a>","synthetic":true,"types":["move_model::ast::ExpData"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_model/ast/struct.Exp.html\" title=\"struct move_model::ast::Exp\">Exp</a>","synthetic":true,"types":["move_model::ast::Exp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_model/ast/enum.Operation.html\" title=\"enum move_model::ast::Operation\">Operation</a>","synthetic":true,"types":["move_model::ast::Operation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_model/ast/struct.LocalVarDecl.html\" title=\"struct move_model::ast::LocalVarDecl\">LocalVarDecl</a>","synthetic":true,"types":["move_model::ast::LocalVarDecl"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_model/ast/enum.TraceKind.html\" title=\"enum move_model::ast::TraceKind\">TraceKind</a>","synthetic":true,"types":["move_model::ast::TraceKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_model/ast/enum.Value.html\" title=\"enum move_model::ast::Value\">Value</a>","synthetic":true,"types":["move_model::ast::Value"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_model/ast/struct.ModuleName.html\" title=\"struct move_model::ast::ModuleName\">ModuleName</a>","synthetic":true,"types":["move_model::ast::ModuleName"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_model/ast/struct.ModuleNameDisplay.html\" title=\"struct move_model::ast::ModuleNameDisplay\">ModuleNameDisplay</a>&lt;'a&gt;","synthetic":true,"types":["move_model::ast::ModuleNameDisplay"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_model/ast/struct.QualifiedSymbol.html\" title=\"struct move_model::ast::QualifiedSymbol\">QualifiedSymbol</a>","synthetic":true,"types":["move_model::ast::QualifiedSymbol"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_model/ast/struct.QualifiedSymbolDisplay.html\" title=\"struct move_model::ast::QualifiedSymbolDisplay\">QualifiedSymbolDisplay</a>&lt;'a&gt;","synthetic":true,"types":["move_model::ast::QualifiedSymbolDisplay"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_model/ast/struct.ExpDisplay.html\" title=\"struct move_model::ast::ExpDisplay\">ExpDisplay</a>&lt;'a&gt;","synthetic":true,"types":["move_model::ast::ExpDisplay"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_model/ast/struct.OperationDisplay.html\" title=\"struct move_model::ast::OperationDisplay\">OperationDisplay</a>&lt;'a&gt;","synthetic":true,"types":["move_model::ast::OperationDisplay"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"move_model/code_writer/struct.CodeWriter.html\" title=\"struct move_model::code_writer::CodeWriter\">CodeWriter</a>","synthetic":true,"types":["move_model::code_writer::CodeWriter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_model/code_writer/struct.CodeWriterLabel.html\" title=\"struct move_model::code_writer::CodeWriterLabel\">CodeWriterLabel</a>","synthetic":true,"types":["move_model::code_writer::CodeWriterLabel"]},{"text":"impl&lt;'env, 'rewriter&gt; Freeze for <a class=\"struct\" href=\"move_model/exp_rewriter/struct.ExpRewriter.html\" title=\"struct move_model::exp_rewriter::ExpRewriter\">ExpRewriter</a>&lt;'env, 'rewriter&gt;","synthetic":true,"types":["move_model::exp_rewriter::ExpRewriter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_model/exp_rewriter/enum.RewriteTarget.html\" title=\"enum move_model::exp_rewriter::RewriteTarget\">RewriteTarget</a>","synthetic":true,"types":["move_model::exp_rewriter::RewriteTarget"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_model/model/struct.Loc.html\" title=\"struct move_model::model::Loc\">Loc</a>","synthetic":true,"types":["move_model::model::Loc"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_model/model/struct.ModuleId.html\" title=\"struct move_model::model::ModuleId\">ModuleId</a>","synthetic":true,"types":["move_model::model::ModuleId"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_model/model/struct.NamedConstantId.html\" title=\"struct move_model::model::NamedConstantId\">NamedConstantId</a>","synthetic":true,"types":["move_model::model::NamedConstantId"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_model/model/struct.StructId.html\" title=\"struct move_model::model::StructId\">StructId</a>","synthetic":true,"types":["move_model::model::StructId"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_model/model/struct.FieldId.html\" title=\"struct move_model::model::FieldId\">FieldId</a>","synthetic":true,"types":["move_model::model::FieldId"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_model/model/struct.FunId.html\" title=\"struct move_model::model::FunId\">FunId</a>","synthetic":true,"types":["move_model::model::FunId"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_model/model/struct.SchemaId.html\" title=\"struct move_model::model::SchemaId\">SchemaId</a>","synthetic":true,"types":["move_model::model::SchemaId"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_model/model/struct.SpecFunId.html\" title=\"struct move_model::model::SpecFunId\">SpecFunId</a>","synthetic":true,"types":["move_model::model::SpecFunId"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_model/model/struct.SpecVarId.html\" title=\"struct move_model::model::SpecVarId\">SpecVarId</a>","synthetic":true,"types":["move_model::model::SpecVarId"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_model/model/struct.NodeId.html\" title=\"struct move_model::model::NodeId\">NodeId</a>","synthetic":true,"types":["move_model::model::NodeId"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_model/model/struct.GlobalId.html\" title=\"struct move_model::model::GlobalId\">GlobalId</a>","synthetic":true,"types":["move_model::model::GlobalId"]},{"text":"impl&lt;Id&gt; Freeze for <a class=\"struct\" href=\"move_model/model/struct.QualifiedId.html\" title=\"struct move_model::model::QualifiedId\">QualifiedId</a>&lt;Id&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Id: Freeze,&nbsp;</span>","synthetic":true,"types":["move_model::model::QualifiedId"]},{"text":"impl&lt;Id&gt; Freeze for <a class=\"struct\" href=\"move_model/model/struct.QualifiedInstId.html\" title=\"struct move_model::model::QualifiedInstId\">QualifiedInstId</a>&lt;Id&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Id: Freeze,&nbsp;</span>","synthetic":true,"types":["move_model::model::QualifiedInstId"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_model/model/enum.VerificationScope.html\" title=\"enum move_model::model::VerificationScope\">VerificationScope</a>","synthetic":true,"types":["move_model::model::VerificationScope"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"move_model/model/struct.GlobalEnv.html\" title=\"struct move_model::model::GlobalEnv\">GlobalEnv</a>","synthetic":true,"types":["move_model::model::GlobalEnv"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"move_model/model/struct.EnvDisplay.html\" title=\"struct move_model::model::EnvDisplay\">EnvDisplay</a>&lt;'a, T&gt;","synthetic":true,"types":["move_model::model::EnvDisplay"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"move_model/model/struct.ModuleData.html\" title=\"struct move_model::model::ModuleData\">ModuleData</a>","synthetic":true,"types":["move_model::model::ModuleData"]},{"text":"impl&lt;'env&gt; Freeze for <a class=\"struct\" href=\"move_model/model/struct.ModuleEnv.html\" title=\"struct move_model::model::ModuleEnv\">ModuleEnv</a>&lt;'env&gt;","synthetic":true,"types":["move_model::model::ModuleEnv"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_model/model/struct.StructData.html\" title=\"struct move_model::model::StructData\">StructData</a>","synthetic":true,"types":["move_model::model::StructData"]},{"text":"impl&lt;'env&gt; Freeze for <a class=\"struct\" href=\"move_model/model/struct.StructEnv.html\" title=\"struct move_model::model::StructEnv\">StructEnv</a>&lt;'env&gt;","synthetic":true,"types":["move_model::model::StructEnv"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_model/model/struct.FieldData.html\" title=\"struct move_model::model::FieldData\">FieldData</a>","synthetic":true,"types":["move_model::model::FieldData"]},{"text":"impl&lt;'env&gt; Freeze for <a class=\"struct\" href=\"move_model/model/struct.FieldEnv.html\" title=\"struct move_model::model::FieldEnv\">FieldEnv</a>&lt;'env&gt;","synthetic":true,"types":["move_model::model::FieldEnv"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_model/model/struct.NamedConstantData.html\" title=\"struct move_model::model::NamedConstantData\">NamedConstantData</a>","synthetic":true,"types":["move_model::model::NamedConstantData"]},{"text":"impl&lt;'env&gt; Freeze for <a class=\"struct\" href=\"move_model/model/struct.NamedConstantEnv.html\" title=\"struct move_model::model::NamedConstantEnv\">NamedConstantEnv</a>&lt;'env&gt;","synthetic":true,"types":["move_model::model::NamedConstantEnv"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_model/model/struct.TypeParameter.html\" title=\"struct move_model::model::TypeParameter\">TypeParameter</a>","synthetic":true,"types":["move_model::model::TypeParameter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_model/model/struct.AbilityConstraint.html\" title=\"struct move_model::model::AbilityConstraint\">AbilityConstraint</a>","synthetic":true,"types":["move_model::model::AbilityConstraint"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_model/model/struct.Parameter.html\" title=\"struct move_model::model::Parameter\">Parameter</a>","synthetic":true,"types":["move_model::model::Parameter"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"move_model/model/struct.FunctionData.html\" title=\"struct move_model::model::FunctionData\">FunctionData</a>","synthetic":true,"types":["move_model::model::FunctionData"]},{"text":"impl&lt;'env&gt; Freeze for <a class=\"struct\" href=\"move_model/model/struct.FunctionEnv.html\" title=\"struct move_model::model::FunctionEnv\">FunctionEnv</a>&lt;'env&gt;","synthetic":true,"types":["move_model::model::FunctionEnv"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_model/model/struct.ExpInfo.html\" title=\"struct move_model::model::ExpInfo\">ExpInfo</a>","synthetic":true,"types":["move_model::model::ExpInfo"]},{"text":"impl&lt;'env&gt; Freeze for <a class=\"struct\" href=\"move_model/model/struct.LocDisplay.html\" title=\"struct move_model::model::LocDisplay\">LocDisplay</a>&lt;'env&gt;","synthetic":true,"types":["move_model::model::LocDisplay"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_model/options/struct.ModelBuilderOptions.html\" title=\"struct move_model::options::ModelBuilderOptions\">ModelBuilderOptions</a>","synthetic":true,"types":["move_model::options::ModelBuilderOptions"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_model/simplifier/enum.SimplificationPass.html\" title=\"enum move_model::simplifier::SimplificationPass\">SimplificationPass</a>","synthetic":true,"types":["move_model::simplifier::SimplificationPass"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_model/simplifier/struct.SpecRewriterPipeline.html\" title=\"struct move_model::simplifier::SpecRewriterPipeline\">SpecRewriterPipeline</a>","synthetic":true,"types":["move_model::simplifier::SpecRewriterPipeline"]},{"text":"impl&lt;'a, 'b, T&gt; Freeze for <a class=\"struct\" href=\"move_model/spec_translator/struct.SpecTranslator.html\" title=\"struct move_model::spec_translator::SpecTranslator\">SpecTranslator</a>&lt;'a, 'b, T&gt;","synthetic":true,"types":["move_model::spec_translator::SpecTranslator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_model/spec_translator/struct.TranslatedSpec.html\" title=\"struct move_model::spec_translator::TranslatedSpec\">TranslatedSpec</a>","synthetic":true,"types":["move_model::spec_translator::TranslatedSpec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_model/symbol/struct.Symbol.html\" title=\"struct move_model::symbol::Symbol\">Symbol</a>","synthetic":true,"types":["move_model::symbol::Symbol"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_model/symbol/struct.SymbolDisplay.html\" title=\"struct move_model::symbol::SymbolDisplay\">SymbolDisplay</a>&lt;'a&gt;","synthetic":true,"types":["move_model::symbol::SymbolDisplay"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"move_model/symbol/struct.SymbolPool.html\" title=\"struct move_model::symbol::SymbolPool\">SymbolPool</a>","synthetic":true,"types":["move_model::symbol::SymbolPool"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_model/ty/enum.Type.html\" title=\"enum move_model::ty::Type\">Type</a>","synthetic":true,"types":["move_model::ty::Type"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_model/ty/enum.PrimitiveType.html\" title=\"enum move_model::ty::PrimitiveType\">PrimitiveType</a>","synthetic":true,"types":["move_model::ty::PrimitiveType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_model/ty/struct.Substitution.html\" title=\"struct move_model::ty::Substitution\">Substitution</a>","synthetic":true,"types":["move_model::ty::Substitution"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_model/ty/enum.TypeUnificationError.html\" title=\"enum move_model::ty::TypeUnificationError\">TypeUnificationError</a>","synthetic":true,"types":["move_model::ty::TypeUnificationError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_model/ty/enum.Variance.html\" title=\"enum move_model::ty::Variance\">Variance</a>","synthetic":true,"types":["move_model::ty::Variance"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_model/ty/struct.TypeUnificationAdapter.html\" title=\"struct move_model::ty::TypeUnificationAdapter\">TypeUnificationAdapter</a>","synthetic":true,"types":["move_model::ty::TypeUnificationAdapter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_model/ty/struct.TypeInstantiationDerivation.html\" title=\"struct move_model::ty::TypeInstantiationDerivation\">TypeInstantiationDerivation</a>","synthetic":true,"types":["move_model::ty::TypeInstantiationDerivation"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"move_model/ty/enum.TypeDisplayContext.html\" title=\"enum move_model::ty::TypeDisplayContext\">TypeDisplayContext</a>&lt;'a&gt;","synthetic":true,"types":["move_model::ty::TypeDisplayContext"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_model/ty/struct.TypeDisplay.html\" title=\"struct move_model::ty::TypeDisplay\">TypeDisplay</a>&lt;'a&gt;","synthetic":true,"types":["move_model::ty::TypeDisplay"]}];
implementors["move_package"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"move_package/compilation/build_plan/struct.BuildPlan.html\" title=\"struct move_package::compilation::build_plan::BuildPlan\">BuildPlan</a>","synthetic":true,"types":["move_package::compilation::build_plan::BuildPlan"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_package/compilation/compiled_package/enum.CompilationCachingStatus.html\" title=\"enum move_package::compilation::compiled_package::CompilationCachingStatus\">CompilationCachingStatus</a>","synthetic":true,"types":["move_package::compilation::compiled_package::CompilationCachingStatus"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_package/compilation/compiled_package/struct.CompiledUnitWithSource.html\" title=\"struct move_package::compilation::compiled_package::CompiledUnitWithSource\">CompiledUnitWithSource</a>","synthetic":true,"types":["move_package::compilation::compiled_package::CompiledUnitWithSource"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_package/compilation/compiled_package/struct.CompiledPackageInfo.html\" title=\"struct move_package::compilation::compiled_package::CompiledPackageInfo\">CompiledPackageInfo</a>","synthetic":true,"types":["move_package::compilation::compiled_package::CompiledPackageInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_package/compilation/compiled_package/struct.CompiledPackage.html\" title=\"struct move_package::compilation::compiled_package::CompiledPackage\">CompiledPackage</a>","synthetic":true,"types":["move_package::compilation::compiled_package::CompiledPackage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_package/compilation/compiled_package/struct.OnDiskPackage.html\" title=\"struct move_package::compilation::compiled_package::OnDiskPackage\">OnDiskPackage</a>","synthetic":true,"types":["move_package::compilation::compiled_package::OnDiskPackage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_package/compilation/compiled_package/struct.OnDiskCompiledPackage.html\" title=\"struct move_package::compilation::compiled_package::OnDiskCompiledPackage\">OnDiskCompiledPackage</a>","synthetic":true,"types":["move_package::compilation::compiled_package::OnDiskCompiledPackage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_package/compilation/model_builder/struct.ModelBuilder.html\" title=\"struct move_package::compilation::model_builder::ModelBuilder\">ModelBuilder</a>","synthetic":true,"types":["move_package::compilation::model_builder::ModelBuilder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_package/compilation/package_layout/enum.CompiledPackageLayout.html\" title=\"enum move_package::compilation::package_layout::CompiledPackageLayout\">CompiledPackageLayout</a>","synthetic":true,"types":["move_package::compilation::package_layout::CompiledPackageLayout"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_package/resolution/resolution_graph/struct.ResolvingNamedAddress.html\" title=\"struct move_package::resolution::resolution_graph::ResolvingNamedAddress\">ResolvingNamedAddress</a>","synthetic":true,"types":["move_package::resolution::resolution_graph::ResolvingNamedAddress"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"move_package/resolution/resolution_graph/struct.ResolutionGraph.html\" title=\"struct move_package::resolution::resolution_graph::ResolutionGraph\">ResolutionGraph</a>&lt;T&gt;","synthetic":true,"types":["move_package::resolution::resolution_graph::ResolutionGraph"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"move_package/resolution/resolution_graph/struct.ResolutionPackage.html\" title=\"struct move_package::resolution::resolution_graph::ResolutionPackage\">ResolutionPackage</a>&lt;T&gt;","synthetic":true,"types":["move_package::resolution::resolution_graph::ResolutionPackage"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_package/source_package/layout/enum.SourcePackageLayout.html\" title=\"enum move_package::source_package::layout::SourcePackageLayout\">SourcePackageLayout</a>","synthetic":true,"types":["move_package::source_package::layout::SourcePackageLayout"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_package/source_package/parsed_manifest/struct.SourceManifest.html\" title=\"struct move_package::source_package::parsed_manifest::SourceManifest\">SourceManifest</a>","synthetic":true,"types":["move_package::source_package::parsed_manifest::SourceManifest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_package/source_package/parsed_manifest/struct.PackageInfo.html\" title=\"struct move_package::source_package::parsed_manifest::PackageInfo\">PackageInfo</a>","synthetic":true,"types":["move_package::source_package::parsed_manifest::PackageInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_package/source_package/parsed_manifest/struct.Dependency.html\" title=\"struct move_package::source_package::parsed_manifest::Dependency\">Dependency</a>","synthetic":true,"types":["move_package::source_package::parsed_manifest::Dependency"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_package/source_package/parsed_manifest/struct.GitInfo.html\" title=\"struct move_package::source_package::parsed_manifest::GitInfo\">GitInfo</a>","synthetic":true,"types":["move_package::source_package::parsed_manifest::GitInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_package/source_package/parsed_manifest/struct.BuildInfo.html\" title=\"struct move_package::source_package::parsed_manifest::BuildInfo\">BuildInfo</a>","synthetic":true,"types":["move_package::source_package::parsed_manifest::BuildInfo"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_package/source_package/parsed_manifest/enum.SubstOrRename.html\" title=\"enum move_package::source_package::parsed_manifest::SubstOrRename\">SubstOrRename</a>","synthetic":true,"types":["move_package::source_package::parsed_manifest::SubstOrRename"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_package/enum.Architecture.html\" title=\"enum move_package::Architecture\">Architecture</a>","synthetic":true,"types":["move_package::Architecture"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_package/struct.BuildConfig.html\" title=\"struct move_package::BuildConfig\">BuildConfig</a>","synthetic":true,"types":["move_package::BuildConfig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_package/struct.ModelConfig.html\" title=\"struct move_package::ModelConfig\">ModelConfig</a>","synthetic":true,"types":["move_package::ModelConfig"]}];
implementors["move_prover"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"move_prover/cli/struct.Options.html\" title=\"struct move_prover::cli::Options\">Options</a>","synthetic":true,"types":["move_prover::cli::Options"]}];
implementors["move_prover_boogie_backend"] = [{"text":"impl&lt;'env&gt; Freeze for <a class=\"struct\" href=\"move_prover_boogie_backend/boogie_wrapper/struct.BoogieWrapper.html\" title=\"struct move_prover_boogie_backend::boogie_wrapper::BoogieWrapper\">BoogieWrapper</a>&lt;'env&gt;","synthetic":true,"types":["move_prover_boogie_backend::boogie_wrapper::BoogieWrapper"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_prover_boogie_backend/boogie_wrapper/struct.BoogieOutput.html\" title=\"struct move_prover_boogie_backend::boogie_wrapper::BoogieOutput\">BoogieOutput</a>","synthetic":true,"types":["move_prover_boogie_backend::boogie_wrapper::BoogieOutput"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_prover_boogie_backend/boogie_wrapper/enum.BoogieErrorKind.html\" title=\"enum move_prover_boogie_backend::boogie_wrapper::BoogieErrorKind\">BoogieErrorKind</a>","synthetic":true,"types":["move_prover_boogie_backend::boogie_wrapper::BoogieErrorKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_prover_boogie_backend/boogie_wrapper/struct.BoogieError.html\" title=\"struct move_prover_boogie_backend::boogie_wrapper::BoogieError\">BoogieError</a>","synthetic":true,"types":["move_prover_boogie_backend::boogie_wrapper::BoogieError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_prover_boogie_backend/boogie_wrapper/enum.TraceEntry.html\" title=\"enum move_prover_boogie_backend::boogie_wrapper::TraceEntry\">TraceEntry</a>","synthetic":true,"types":["move_prover_boogie_backend::boogie_wrapper::TraceEntry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_prover_boogie_backend/boogie_wrapper/struct.Model.html\" title=\"struct move_prover_boogie_backend::boogie_wrapper::Model\">Model</a>","synthetic":true,"types":["move_prover_boogie_backend::boogie_wrapper::Model"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_prover_boogie_backend/boogie_wrapper/enum.ModelValue.html\" title=\"enum move_prover_boogie_backend::boogie_wrapper::ModelValue\">ModelValue</a>","synthetic":true,"types":["move_prover_boogie_backend::boogie_wrapper::ModelValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_prover_boogie_backend/boogie_wrapper/struct.ModelValueVector.html\" title=\"struct move_prover_boogie_backend::boogie_wrapper::ModelValueVector\">ModelValueVector</a>","synthetic":true,"types":["move_prover_boogie_backend::boogie_wrapper::ModelValueVector"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_prover_boogie_backend/boogie_wrapper/struct.ModelValueTable.html\" title=\"struct move_prover_boogie_backend::boogie_wrapper::ModelValueTable\">ModelValueTable</a>","synthetic":true,"types":["move_prover_boogie_backend::boogie_wrapper::ModelValueTable"]},{"text":"impl&lt;'env&gt; !Freeze for <a class=\"struct\" href=\"move_prover_boogie_backend/bytecode_translator/struct.BoogieTranslator.html\" title=\"struct move_prover_boogie_backend::bytecode_translator::BoogieTranslator\">BoogieTranslator</a>&lt;'env&gt;","synthetic":true,"types":["move_prover_boogie_backend::bytecode_translator::BoogieTranslator"]},{"text":"impl&lt;'env&gt; Freeze for <a class=\"struct\" href=\"move_prover_boogie_backend/bytecode_translator/struct.FunctionTranslator.html\" title=\"struct move_prover_boogie_backend::bytecode_translator::FunctionTranslator\">FunctionTranslator</a>&lt;'env&gt;","synthetic":true,"types":["move_prover_boogie_backend::bytecode_translator::FunctionTranslator"]},{"text":"impl&lt;'env&gt; Freeze for <a class=\"struct\" href=\"move_prover_boogie_backend/bytecode_translator/struct.StructTranslator.html\" title=\"struct move_prover_boogie_backend::bytecode_translator::StructTranslator\">StructTranslator</a>&lt;'env&gt;","synthetic":true,"types":["move_prover_boogie_backend::bytecode_translator::StructTranslator"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_prover_boogie_backend/options/enum.VectorTheory.html\" title=\"enum move_prover_boogie_backend::options::VectorTheory\">VectorTheory</a>","synthetic":true,"types":["move_prover_boogie_backend::options::VectorTheory"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_prover_boogie_backend/options/struct.BoogieOptions.html\" title=\"struct move_prover_boogie_backend::options::BoogieOptions\">BoogieOptions</a>","synthetic":true,"types":["move_prover_boogie_backend::options::BoogieOptions"]}];
implementors["move_read_write_set_types"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"move_read_write_set_types/enum.Access.html\" title=\"enum move_read_write_set_types::Access\">Access</a>","synthetic":true,"types":["move_read_write_set_types::access::Access"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_read_write_set_types/enum.Offset.html\" title=\"enum move_read_write_set_types::Offset\">Offset</a>","synthetic":true,"types":["move_read_write_set_types::Offset"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_read_write_set_types/struct.TrieNode.html\" title=\"struct move_read_write_set_types::TrieNode\">TrieNode</a>","synthetic":true,"types":["move_read_write_set_types::TrieNode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_read_write_set_types/enum.RootAddress.html\" title=\"enum move_read_write_set_types::RootAddress\">RootAddress</a>","synthetic":true,"types":["move_read_write_set_types::RootAddress"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_read_write_set_types/struct.Root.html\" title=\"struct move_read_write_set_types::Root\">Root</a>","synthetic":true,"types":["move_read_write_set_types::Root"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_read_write_set_types/struct.AccessPath.html\" title=\"struct move_read_write_set_types::AccessPath\">AccessPath</a>","synthetic":true,"types":["move_read_write_set_types::AccessPath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_read_write_set_types/struct.ReadWriteSet.html\" title=\"struct move_read_write_set_types::ReadWriteSet\">ReadWriteSet</a>","synthetic":true,"types":["move_read_write_set_types::ReadWriteSet"]}];
implementors["move_resource_viewer"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"move_resource_viewer/struct.AnnotatedMoveStruct.html\" title=\"struct move_resource_viewer::AnnotatedMoveStruct\">AnnotatedMoveStruct</a>","synthetic":true,"types":["move_resource_viewer::AnnotatedMoveStruct"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_resource_viewer/enum.AnnotatedMoveValue.html\" title=\"enum move_resource_viewer::AnnotatedMoveValue\">AnnotatedMoveValue</a>","synthetic":true,"types":["move_resource_viewer::AnnotatedMoveValue"]},{"text":"impl&lt;'a, T&gt; !Freeze for <a class=\"struct\" href=\"move_resource_viewer/struct.MoveValueAnnotator.html\" title=\"struct move_resource_viewer::MoveValueAnnotator\">MoveValueAnnotator</a>&lt;'a, T&gt;","synthetic":true,"types":["move_resource_viewer::MoveValueAnnotator"]}];
implementors["move_stackless_bytecode"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/access_path/struct.AbsStructType.html\" title=\"struct move_stackless_bytecode::access_path::AbsStructType\">AbsStructType</a>","synthetic":true,"types":["move_stackless_bytecode::access_path::AbsStructType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_stackless_bytecode/access_path/enum.Addr.html\" title=\"enum move_stackless_bytecode::access_path::Addr\">Addr</a>","synthetic":true,"types":["move_stackless_bytecode::access_path::Addr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/access_path/struct.GlobalKey.html\" title=\"struct move_stackless_bytecode::access_path::GlobalKey\">GlobalKey</a>","synthetic":true,"types":["move_stackless_bytecode::access_path::GlobalKey"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_stackless_bytecode/access_path/enum.Root.html\" title=\"enum move_stackless_bytecode::access_path::Root\">Root</a>","synthetic":true,"types":["move_stackless_bytecode::access_path::Root"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_stackless_bytecode/access_path/enum.Offset.html\" title=\"enum move_stackless_bytecode::access_path::Offset\">Offset</a>","synthetic":true,"types":["move_stackless_bytecode::access_path::Offset"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/access_path/struct.AccessPath.html\" title=\"struct move_stackless_bytecode::access_path::AccessPath\">AccessPath</a>","synthetic":true,"types":["move_stackless_bytecode::access_path::AccessPath"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/access_path/struct.AbsStructTypeDisplay.html\" title=\"struct move_stackless_bytecode::access_path::AbsStructTypeDisplay\">AbsStructTypeDisplay</a>&lt;'a&gt;","synthetic":true,"types":["move_stackless_bytecode::access_path::AbsStructTypeDisplay"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/access_path/struct.AddrDisplay.html\" title=\"struct move_stackless_bytecode::access_path::AddrDisplay\">AddrDisplay</a>&lt;'a&gt;","synthetic":true,"types":["move_stackless_bytecode::access_path::AddrDisplay"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/access_path/struct.AbsAddrDisplay.html\" title=\"struct move_stackless_bytecode::access_path::AbsAddrDisplay\">AbsAddrDisplay</a>&lt;'a&gt;","synthetic":true,"types":["move_stackless_bytecode::access_path::AbsAddrDisplay"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/access_path/struct.GlobalKeyDisplay.html\" title=\"struct move_stackless_bytecode::access_path::GlobalKeyDisplay\">GlobalKeyDisplay</a>&lt;'a&gt;","synthetic":true,"types":["move_stackless_bytecode::access_path::GlobalKeyDisplay"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/access_path/struct.RootDisplay.html\" title=\"struct move_stackless_bytecode::access_path::RootDisplay\">RootDisplay</a>&lt;'a&gt;","synthetic":true,"types":["move_stackless_bytecode::access_path::RootDisplay"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/access_path/struct.OffsetDisplay.html\" title=\"struct move_stackless_bytecode::access_path::OffsetDisplay\">OffsetDisplay</a>&lt;'a&gt;","synthetic":true,"types":["move_stackless_bytecode::access_path::OffsetDisplay"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/access_path/struct.AccessPathDisplay.html\" title=\"struct move_stackless_bytecode::access_path::AccessPathDisplay\">AccessPathDisplay</a>&lt;'a&gt;","synthetic":true,"types":["move_stackless_bytecode::access_path::AccessPathDisplay"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/access_path_trie/struct.TrieNode.html\" title=\"struct move_stackless_bytecode::access_path_trie::TrieNode\">TrieNode</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["move_stackless_bytecode::access_path_trie::TrieNode"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/access_path_trie/struct.AccessPathTrie.html\" title=\"struct move_stackless_bytecode::access_path_trie::AccessPathTrie\">AccessPathTrie</a>&lt;T&gt;","synthetic":true,"types":["move_stackless_bytecode::access_path_trie::AccessPathTrie"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/access_path_trie/struct.AccessPathTrieDisplay.html\" title=\"struct move_stackless_bytecode::access_path_trie::AccessPathTrieDisplay\">AccessPathTrieDisplay</a>&lt;'a, T&gt;","synthetic":true,"types":["move_stackless_bytecode::access_path_trie::AccessPathTrieDisplay"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/annotations/struct.Annotations.html\" title=\"struct move_stackless_bytecode::annotations::Annotations\">Annotations</a>","synthetic":true,"types":["move_stackless_bytecode::annotations::Annotations"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/borrow_analysis/struct.BorrowInfo.html\" title=\"struct move_stackless_bytecode::borrow_analysis::BorrowInfo\">BorrowInfo</a>","synthetic":true,"types":["move_stackless_bytecode::borrow_analysis::BorrowInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/borrow_analysis/struct.BorrowInfoAtCodeOffset.html\" title=\"struct move_stackless_bytecode::borrow_analysis::BorrowInfoAtCodeOffset\">BorrowInfoAtCodeOffset</a>","synthetic":true,"types":["move_stackless_bytecode::borrow_analysis::BorrowInfoAtCodeOffset"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/borrow_analysis/struct.BorrowAnnotation.html\" title=\"struct move_stackless_bytecode::borrow_analysis::BorrowAnnotation\">BorrowAnnotation</a>","synthetic":true,"types":["move_stackless_bytecode::borrow_analysis::BorrowAnnotation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/borrow_analysis/struct.BorrowAnalysisProcessor.html\" title=\"struct move_stackless_bytecode::borrow_analysis::BorrowAnalysisProcessor\">BorrowAnalysisProcessor</a>","synthetic":true,"types":["move_stackless_bytecode::borrow_analysis::BorrowAnalysisProcessor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/clean_and_optimize/struct.CleanAndOptimizeProcessor.html\" title=\"struct move_stackless_bytecode::clean_and_optimize::CleanAndOptimizeProcessor\">CleanAndOptimizeProcessor</a>","synthetic":true,"types":["move_stackless_bytecode::clean_and_optimize::CleanAndOptimizeProcessor"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/compositional_analysis/struct.SummaryCache.html\" title=\"struct move_stackless_bytecode::compositional_analysis::SummaryCache\">SummaryCache</a>&lt;'a&gt;","synthetic":true,"types":["move_stackless_bytecode::compositional_analysis::SummaryCache"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/data_invariant_instrumentation/struct.DataInvariantInstrumentationProcessor.html\" title=\"struct move_stackless_bytecode::data_invariant_instrumentation::DataInvariantInstrumentationProcessor\">DataInvariantInstrumentationProcessor</a>","synthetic":true,"types":["move_stackless_bytecode::data_invariant_instrumentation::DataInvariantInstrumentationProcessor"]},{"text":"impl&lt;State&gt; Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/dataflow_analysis/struct.BlockState.html\" title=\"struct move_stackless_bytecode::dataflow_analysis::BlockState\">BlockState</a>&lt;State&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;State: Freeze,&nbsp;</span>","synthetic":true,"types":["move_stackless_bytecode::dataflow_analysis::BlockState"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_stackless_bytecode/dataflow_domains/enum.JoinResult.html\" title=\"enum move_stackless_bytecode::dataflow_domains::JoinResult\">JoinResult</a>","synthetic":true,"types":["move_stackless_bytecode::dataflow_domains::JoinResult"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/dataflow_domains/struct.SetDomain.html\" title=\"struct move_stackless_bytecode::dataflow_domains::SetDomain\">SetDomain</a>&lt;E&gt;","synthetic":true,"types":["move_stackless_bytecode::dataflow_domains::SetDomain"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/dataflow_domains/struct.MapDomain.html\" title=\"struct move_stackless_bytecode::dataflow_domains::MapDomain\">MapDomain</a>&lt;K, V&gt;","synthetic":true,"types":["move_stackless_bytecode::dataflow_domains::MapDomain"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/debug_instrumentation/struct.DebugInstrumenter.html\" title=\"struct move_stackless_bytecode::debug_instrumentation::DebugInstrumenter\">DebugInstrumenter</a>","synthetic":true,"types":["move_stackless_bytecode::debug_instrumentation::DebugInstrumenter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/eliminate_imm_refs/struct.EliminateImmRefsProcessor.html\" title=\"struct move_stackless_bytecode::eliminate_imm_refs::EliminateImmRefsProcessor\">EliminateImmRefsProcessor</a>","synthetic":true,"types":["move_stackless_bytecode::eliminate_imm_refs::EliminateImmRefsProcessor"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/eliminate_imm_refs/struct.EliminateImmRefs.html\" title=\"struct move_stackless_bytecode::eliminate_imm_refs::EliminateImmRefs\">EliminateImmRefs</a>&lt;'a&gt;","synthetic":true,"types":["move_stackless_bytecode::eliminate_imm_refs::EliminateImmRefs"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_stackless_bytecode/escape_analysis/enum.AbsValue.html\" title=\"enum move_stackless_bytecode::escape_analysis::AbsValue\">AbsValue</a>","synthetic":true,"types":["move_stackless_bytecode::escape_analysis::AbsValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/escape_analysis/struct.EscapeAnalysisProcessor.html\" title=\"struct move_stackless_bytecode::escape_analysis::EscapeAnalysisProcessor\">EscapeAnalysisProcessor</a>","synthetic":true,"types":["move_stackless_bytecode::escape_analysis::EscapeAnalysisProcessor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/function_data_builder/struct.FunctionDataBuilderOptions.html\" title=\"struct move_stackless_bytecode::function_data_builder::FunctionDataBuilderOptions\">FunctionDataBuilderOptions</a>","synthetic":true,"types":["move_stackless_bytecode::function_data_builder::FunctionDataBuilderOptions"]},{"text":"impl&lt;'env&gt; Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/function_data_builder/struct.FunctionDataBuilder.html\" title=\"struct move_stackless_bytecode::function_data_builder::FunctionDataBuilder\">FunctionDataBuilder</a>&lt;'env&gt;","synthetic":true,"types":["move_stackless_bytecode::function_data_builder::FunctionDataBuilder"]},{"text":"impl&lt;'env&gt; !Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/function_target/struct.FunctionTarget.html\" title=\"struct move_stackless_bytecode::function_target::FunctionTarget\">FunctionTarget</a>&lt;'env&gt;","synthetic":true,"types":["move_stackless_bytecode::function_target::FunctionTarget"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/function_target/struct.FunctionData.html\" title=\"struct move_stackless_bytecode::function_target::FunctionData\">FunctionData</a>","synthetic":true,"types":["move_stackless_bytecode::function_target::FunctionData"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/function_target_pipeline/struct.FunctionTargetsHolder.html\" title=\"struct move_stackless_bytecode::function_target_pipeline::FunctionTargetsHolder\">FunctionTargetsHolder</a>","synthetic":true,"types":["move_stackless_bytecode::function_target_pipeline::FunctionTargetsHolder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_stackless_bytecode/function_target_pipeline/enum.VerificationFlavor.html\" title=\"enum move_stackless_bytecode::function_target_pipeline::VerificationFlavor\">VerificationFlavor</a>","synthetic":true,"types":["move_stackless_bytecode::function_target_pipeline::VerificationFlavor"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_stackless_bytecode/function_target_pipeline/enum.FunctionVariant.html\" title=\"enum move_stackless_bytecode::function_target_pipeline::FunctionVariant\">FunctionVariant</a>","synthetic":true,"types":["move_stackless_bytecode::function_target_pipeline::FunctionVariant"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/function_target_pipeline/struct.ProcessorResultDisplay.html\" title=\"struct move_stackless_bytecode::function_target_pipeline::ProcessorResultDisplay\">ProcessorResultDisplay</a>&lt;'a&gt;","synthetic":true,"types":["move_stackless_bytecode::function_target_pipeline::ProcessorResultDisplay"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/function_target_pipeline/struct.FunctionTargetPipeline.html\" title=\"struct move_stackless_bytecode::function_target_pipeline::FunctionTargetPipeline\">FunctionTargetPipeline</a>","synthetic":true,"types":["move_stackless_bytecode::function_target_pipeline::FunctionTargetPipeline"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/global_invariant_analysis/struct.PerBytecodeRelevance.html\" title=\"struct move_stackless_bytecode::global_invariant_analysis::PerBytecodeRelevance\">PerBytecodeRelevance</a>","synthetic":true,"types":["move_stackless_bytecode::global_invariant_analysis::PerBytecodeRelevance"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/global_invariant_analysis/struct.PerFunctionRelevance.html\" title=\"struct move_stackless_bytecode::global_invariant_analysis::PerFunctionRelevance\">PerFunctionRelevance</a>","synthetic":true,"types":["move_stackless_bytecode::global_invariant_analysis::PerFunctionRelevance"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/global_invariant_analysis/struct.GlobalInvariantAnalysisProcessor.html\" title=\"struct move_stackless_bytecode::global_invariant_analysis::GlobalInvariantAnalysisProcessor\">GlobalInvariantAnalysisProcessor</a>","synthetic":true,"types":["move_stackless_bytecode::global_invariant_analysis::GlobalInvariantAnalysisProcessor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/global_invariant_instrumentation/struct.GlobalInvariantInstrumentationProcessor.html\" title=\"struct move_stackless_bytecode::global_invariant_instrumentation::GlobalInvariantInstrumentationProcessor\">GlobalInvariantInstrumentationProcessor</a>","synthetic":true,"types":["move_stackless_bytecode::global_invariant_instrumentation::GlobalInvariantInstrumentationProcessor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/global_invariant_instrumentation_v2/struct.GlobalInvariantInstrumentationProcessorV2.html\" title=\"struct move_stackless_bytecode::global_invariant_instrumentation_v2::GlobalInvariantInstrumentationProcessorV2\">GlobalInvariantInstrumentationProcessorV2</a>","synthetic":true,"types":["move_stackless_bytecode::global_invariant_instrumentation_v2::GlobalInvariantInstrumentationProcessorV2"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/graph/struct.NaturalLoop.html\" title=\"struct move_stackless_bytecode::graph::NaturalLoop\">NaturalLoop</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["move_stackless_bytecode::graph::NaturalLoop"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/graph/struct.Graph.html\" title=\"struct move_stackless_bytecode::graph::Graph\">Graph</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["move_stackless_bytecode::graph::Graph"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/inconsistency_check/struct.InconsistencyCheckInstrumenter.html\" title=\"struct move_stackless_bytecode::inconsistency_check::InconsistencyCheckInstrumenter\">InconsistencyCheckInstrumenter</a>","synthetic":true,"types":["move_stackless_bytecode::inconsistency_check::InconsistencyCheckInstrumenter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/livevar_analysis/struct.LiveVarInfoAtCodeOffset.html\" title=\"struct move_stackless_bytecode::livevar_analysis::LiveVarInfoAtCodeOffset\">LiveVarInfoAtCodeOffset</a>","synthetic":true,"types":["move_stackless_bytecode::livevar_analysis::LiveVarInfoAtCodeOffset"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/livevar_analysis/struct.LiveVarAnnotation.html\" title=\"struct move_stackless_bytecode::livevar_analysis::LiveVarAnnotation\">LiveVarAnnotation</a>","synthetic":true,"types":["move_stackless_bytecode::livevar_analysis::LiveVarAnnotation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/livevar_analysis/struct.LiveVarAnalysisProcessor.html\" title=\"struct move_stackless_bytecode::livevar_analysis::LiveVarAnalysisProcessor\">LiveVarAnalysisProcessor</a>","synthetic":true,"types":["move_stackless_bytecode::livevar_analysis::LiveVarAnalysisProcessor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/loop_analysis/struct.FatLoop.html\" title=\"struct move_stackless_bytecode::loop_analysis::FatLoop\">FatLoop</a>","synthetic":true,"types":["move_stackless_bytecode::loop_analysis::FatLoop"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/loop_analysis/struct.LoopAnnotation.html\" title=\"struct move_stackless_bytecode::loop_analysis::LoopAnnotation\">LoopAnnotation</a>","synthetic":true,"types":["move_stackless_bytecode::loop_analysis::LoopAnnotation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/loop_analysis/struct.LoopAnalysisProcessor.html\" title=\"struct move_stackless_bytecode::loop_analysis::LoopAnalysisProcessor\">LoopAnalysisProcessor</a>","synthetic":true,"types":["move_stackless_bytecode::loop_analysis::LoopAnalysisProcessor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/memory_instrumentation/struct.MemoryInstrumentationProcessor.html\" title=\"struct move_stackless_bytecode::memory_instrumentation::MemoryInstrumentationProcessor\">MemoryInstrumentationProcessor</a>","synthetic":true,"types":["move_stackless_bytecode::memory_instrumentation::MemoryInstrumentationProcessor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/mono_analysis/struct.MonoInfo.html\" title=\"struct move_stackless_bytecode::mono_analysis::MonoInfo\">MonoInfo</a>","synthetic":true,"types":["move_stackless_bytecode::mono_analysis::MonoInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/mono_analysis/struct.MonoAnalysisProcessor.html\" title=\"struct move_stackless_bytecode::mono_analysis::MonoAnalysisProcessor\">MonoAnalysisProcessor</a>","synthetic":true,"types":["move_stackless_bytecode::mono_analysis::MonoAnalysisProcessor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/mut_ref_instrumentation/struct.MutRefInstrumenter.html\" title=\"struct move_stackless_bytecode::mut_ref_instrumentation::MutRefInstrumenter\">MutRefInstrumenter</a>","synthetic":true,"types":["move_stackless_bytecode::mut_ref_instrumentation::MutRefInstrumenter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/mutation_tester/struct.MutationTester.html\" title=\"struct move_stackless_bytecode::mutation_tester::MutationTester\">MutationTester</a>","synthetic":true,"types":["move_stackless_bytecode::mutation_tester::MutationTester"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/mutation_tester/struct.MutationManager.html\" title=\"struct move_stackless_bytecode::mutation_tester::MutationManager\">MutationManager</a>","synthetic":true,"types":["move_stackless_bytecode::mutation_tester::MutationManager"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_stackless_bytecode/options/enum.AutoTraceLevel.html\" title=\"enum move_stackless_bytecode::options::AutoTraceLevel\">AutoTraceLevel</a>","synthetic":true,"types":["move_stackless_bytecode::options::AutoTraceLevel"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/options/struct.ProverOptions.html\" title=\"struct move_stackless_bytecode::options::ProverOptions\">ProverOptions</a>","synthetic":true,"types":["move_stackless_bytecode::options::ProverOptions"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/packed_types_analysis/struct.PackedTypesProcessor.html\" title=\"struct move_stackless_bytecode::packed_types_analysis::PackedTypesProcessor\">PackedTypesProcessor</a>","synthetic":true,"types":["move_stackless_bytecode::packed_types_analysis::PackedTypesProcessor"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_stackless_bytecode/reaching_def_analysis/enum.Def.html\" title=\"enum move_stackless_bytecode::reaching_def_analysis::Def\">Def</a>","synthetic":true,"types":["move_stackless_bytecode::reaching_def_analysis::Def"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/reaching_def_analysis/struct.ReachingDefAnnotation.html\" title=\"struct move_stackless_bytecode::reaching_def_analysis::ReachingDefAnnotation\">ReachingDefAnnotation</a>","synthetic":true,"types":["move_stackless_bytecode::reaching_def_analysis::ReachingDefAnnotation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/reaching_def_analysis/struct.ReachingDefProcessor.html\" title=\"struct move_stackless_bytecode::reaching_def_analysis::ReachingDefProcessor\">ReachingDefProcessor</a>","synthetic":true,"types":["move_stackless_bytecode::reaching_def_analysis::ReachingDefProcessor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/read_write_set_analysis/struct.ReadWriteSetState.html\" title=\"struct move_stackless_bytecode::read_write_set_analysis::ReadWriteSetState\">ReadWriteSetState</a>","synthetic":true,"types":["move_stackless_bytecode::read_write_set_analysis::ReadWriteSetState"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/read_write_set_analysis/struct.SpecializedReadWriteSetState.html\" title=\"struct move_stackless_bytecode::read_write_set_analysis::SpecializedReadWriteSetState\">SpecializedReadWriteSetState</a>","synthetic":true,"types":["move_stackless_bytecode::read_write_set_analysis::SpecializedReadWriteSetState"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/read_write_set_analysis/struct.ReadWriteSetProcessor.html\" title=\"struct move_stackless_bytecode::read_write_set_analysis::ReadWriteSetProcessor\">ReadWriteSetProcessor</a>","synthetic":true,"types":["move_stackless_bytecode::read_write_set_analysis::ReadWriteSetProcessor"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/read_write_set_analysis/struct.ReadWriteSetStateDisplay.html\" title=\"struct move_stackless_bytecode::read_write_set_analysis::ReadWriteSetStateDisplay\">ReadWriteSetStateDisplay</a>&lt;'a&gt;","synthetic":true,"types":["move_stackless_bytecode::read_write_set_analysis::ReadWriteSetStateDisplay"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/spec_instrumentation/struct.SpecInstrumentationProcessor.html\" title=\"struct move_stackless_bytecode::spec_instrumentation::SpecInstrumentationProcessor\">SpecInstrumentationProcessor</a>","synthetic":true,"types":["move_stackless_bytecode::spec_instrumentation::SpecInstrumentationProcessor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/stackless_bytecode/struct.Label.html\" title=\"struct move_stackless_bytecode::stackless_bytecode::Label\">Label</a>","synthetic":true,"types":["move_stackless_bytecode::stackless_bytecode::Label"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/stackless_bytecode/struct.AttrId.html\" title=\"struct move_stackless_bytecode::stackless_bytecode::AttrId\">AttrId</a>","synthetic":true,"types":["move_stackless_bytecode::stackless_bytecode::AttrId"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/stackless_bytecode/struct.SpecBlockId.html\" title=\"struct move_stackless_bytecode::stackless_bytecode::SpecBlockId\">SpecBlockId</a>","synthetic":true,"types":["move_stackless_bytecode::stackless_bytecode::SpecBlockId"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_stackless_bytecode/stackless_bytecode/enum.AssignKind.html\" title=\"enum move_stackless_bytecode::stackless_bytecode::AssignKind\">AssignKind</a>","synthetic":true,"types":["move_stackless_bytecode::stackless_bytecode::AssignKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_stackless_bytecode/stackless_bytecode/enum.HavocKind.html\" title=\"enum move_stackless_bytecode::stackless_bytecode::HavocKind\">HavocKind</a>","synthetic":true,"types":["move_stackless_bytecode::stackless_bytecode::HavocKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_stackless_bytecode/stackless_bytecode/enum.Constant.html\" title=\"enum move_stackless_bytecode::stackless_bytecode::Constant\">Constant</a>","synthetic":true,"types":["move_stackless_bytecode::stackless_bytecode::Constant"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_stackless_bytecode/stackless_bytecode/enum.Operation.html\" title=\"enum move_stackless_bytecode::stackless_bytecode::Operation\">Operation</a>","synthetic":true,"types":["move_stackless_bytecode::stackless_bytecode::Operation"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_stackless_bytecode/stackless_bytecode/enum.BorrowNode.html\" title=\"enum move_stackless_bytecode::stackless_bytecode::BorrowNode\">BorrowNode</a>","synthetic":true,"types":["move_stackless_bytecode::stackless_bytecode::BorrowNode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_stackless_bytecode/stackless_bytecode/enum.BorrowEdge.html\" title=\"enum move_stackless_bytecode::stackless_bytecode::BorrowEdge\">BorrowEdge</a>","synthetic":true,"types":["move_stackless_bytecode::stackless_bytecode::BorrowEdge"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_stackless_bytecode/stackless_bytecode/enum.PropKind.html\" title=\"enum move_stackless_bytecode::stackless_bytecode::PropKind\">PropKind</a>","synthetic":true,"types":["move_stackless_bytecode::stackless_bytecode::PropKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/stackless_bytecode/struct.AbortAction.html\" title=\"struct move_stackless_bytecode::stackless_bytecode::AbortAction\">AbortAction</a>","synthetic":true,"types":["move_stackless_bytecode::stackless_bytecode::AbortAction"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_stackless_bytecode/stackless_bytecode/enum.Bytecode.html\" title=\"enum move_stackless_bytecode::stackless_bytecode::Bytecode\">Bytecode</a>","synthetic":true,"types":["move_stackless_bytecode::stackless_bytecode::Bytecode"]},{"text":"impl&lt;'env&gt; Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/stackless_bytecode/struct.BytecodeDisplay.html\" title=\"struct move_stackless_bytecode::stackless_bytecode::BytecodeDisplay\">BytecodeDisplay</a>&lt;'env&gt;","synthetic":true,"types":["move_stackless_bytecode::stackless_bytecode::BytecodeDisplay"]},{"text":"impl&lt;'env&gt; Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/stackless_bytecode/struct.OperationDisplay.html\" title=\"struct move_stackless_bytecode::stackless_bytecode::OperationDisplay\">OperationDisplay</a>&lt;'env&gt;","synthetic":true,"types":["move_stackless_bytecode::stackless_bytecode::OperationDisplay"]},{"text":"impl&lt;'env&gt; Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/stackless_bytecode/struct.BorrowNodeDisplay.html\" title=\"struct move_stackless_bytecode::stackless_bytecode::BorrowNodeDisplay\">BorrowNodeDisplay</a>&lt;'env&gt;","synthetic":true,"types":["move_stackless_bytecode::stackless_bytecode::BorrowNodeDisplay"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/stackless_bytecode/struct.BorrowEdgeDisplay.html\" title=\"struct move_stackless_bytecode::stackless_bytecode::BorrowEdgeDisplay\">BorrowEdgeDisplay</a>&lt;'a&gt;","synthetic":true,"types":["move_stackless_bytecode::stackless_bytecode::BorrowEdgeDisplay"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/stackless_bytecode_generator/struct.StacklessBytecodeGenerator.html\" title=\"struct move_stackless_bytecode::stackless_bytecode_generator::StacklessBytecodeGenerator\">StacklessBytecodeGenerator</a>&lt;'a&gt;","synthetic":true,"types":["move_stackless_bytecode::stackless_bytecode_generator::StacklessBytecodeGenerator"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_stackless_bytecode/stackless_control_flow_graph/enum.BlockContent.html\" title=\"enum move_stackless_bytecode::stackless_control_flow_graph::BlockContent\">BlockContent</a>","synthetic":true,"types":["move_stackless_bytecode::stackless_control_flow_graph::BlockContent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/stackless_control_flow_graph/struct.StacklessControlFlowGraph.html\" title=\"struct move_stackless_bytecode::stackless_control_flow_graph::StacklessControlFlowGraph\">StacklessControlFlowGraph</a>","synthetic":true,"types":["move_stackless_bytecode::stackless_control_flow_graph::StacklessControlFlowGraph"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/usage_analysis/struct.MemoryUsage.html\" title=\"struct move_stackless_bytecode::usage_analysis::MemoryUsage\">MemoryUsage</a>","synthetic":true,"types":["move_stackless_bytecode::usage_analysis::MemoryUsage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/usage_analysis/struct.UsageState.html\" title=\"struct move_stackless_bytecode::usage_analysis::UsageState\">UsageState</a>","synthetic":true,"types":["move_stackless_bytecode::usage_analysis::UsageState"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/usage_analysis/struct.UsageProcessor.html\" title=\"struct move_stackless_bytecode::usage_analysis::UsageProcessor\">UsageProcessor</a>","synthetic":true,"types":["move_stackless_bytecode::usage_analysis::UsageProcessor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/verification_analysis/struct.VerificationInfo.html\" title=\"struct move_stackless_bytecode::verification_analysis::VerificationInfo\">VerificationInfo</a>","synthetic":true,"types":["move_stackless_bytecode::verification_analysis::VerificationInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/verification_analysis/struct.InvariantRelevance.html\" title=\"struct move_stackless_bytecode::verification_analysis::InvariantRelevance\">InvariantRelevance</a>","synthetic":true,"types":["move_stackless_bytecode::verification_analysis::InvariantRelevance"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/verification_analysis/struct.InvariantAnalysisData.html\" title=\"struct move_stackless_bytecode::verification_analysis::InvariantAnalysisData\">InvariantAnalysisData</a>","synthetic":true,"types":["move_stackless_bytecode::verification_analysis::InvariantAnalysisData"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/verification_analysis/struct.VerificationAnalysisProcessor.html\" title=\"struct move_stackless_bytecode::verification_analysis::VerificationAnalysisProcessor\">VerificationAnalysisProcessor</a>","synthetic":true,"types":["move_stackless_bytecode::verification_analysis::VerificationAnalysisProcessor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/verification_analysis_v2/struct.VerificationInfoV2.html\" title=\"struct move_stackless_bytecode::verification_analysis_v2::VerificationInfoV2\">VerificationInfoV2</a>","synthetic":true,"types":["move_stackless_bytecode::verification_analysis_v2::VerificationInfoV2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/verification_analysis_v2/struct.InvariantAnalysisData.html\" title=\"struct move_stackless_bytecode::verification_analysis_v2::InvariantAnalysisData\">InvariantAnalysisData</a>","synthetic":true,"types":["move_stackless_bytecode::verification_analysis_v2::InvariantAnalysisData"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/verification_analysis_v2/struct.VerificationAnalysisProcessorV2.html\" title=\"struct move_stackless_bytecode::verification_analysis_v2::VerificationAnalysisProcessorV2\">VerificationAnalysisProcessorV2</a>","synthetic":true,"types":["move_stackless_bytecode::verification_analysis_v2::VerificationAnalysisProcessorV2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode/well_formed_instrumentation/struct.WellFormedInstrumentationProcessor.html\" title=\"struct move_stackless_bytecode::well_formed_instrumentation::WellFormedInstrumentationProcessor\">WellFormedInstrumentationProcessor</a>","synthetic":true,"types":["move_stackless_bytecode::well_formed_instrumentation::WellFormedInstrumentationProcessor"]}];
implementors["move_stackless_bytecode_interpreter"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode_interpreter/concrete/evaluator/struct.ExpState.html\" title=\"struct move_stackless_bytecode_interpreter::concrete::evaluator::ExpState\">ExpState</a>","synthetic":true,"types":["move_stackless_bytecode_interpreter::concrete::evaluator::ExpState"]},{"text":"impl&lt;'env&gt; !Freeze for <a class=\"struct\" href=\"move_stackless_bytecode_interpreter/concrete/evaluator/struct.Evaluator.html\" title=\"struct move_stackless_bytecode_interpreter::concrete::evaluator::Evaluator\">Evaluator</a>&lt;'env&gt;","synthetic":true,"types":["move_stackless_bytecode_interpreter::concrete::evaluator::Evaluator"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_stackless_bytecode_interpreter/concrete/local_state/enum.AbortInfo.html\" title=\"enum move_stackless_bytecode_interpreter::concrete::local_state::AbortInfo\">AbortInfo</a>","synthetic":true,"types":["move_stackless_bytecode_interpreter::concrete::local_state::AbortInfo"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_stackless_bytecode_interpreter/concrete/local_state/enum.TerminationStatus.html\" title=\"enum move_stackless_bytecode_interpreter::concrete::local_state::TerminationStatus\">TerminationStatus</a>","synthetic":true,"types":["move_stackless_bytecode_interpreter::concrete::local_state::TerminationStatus"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode_interpreter/concrete/local_state/struct.LocalState.html\" title=\"struct move_stackless_bytecode_interpreter::concrete::local_state::LocalState\">LocalState</a>","synthetic":true,"types":["move_stackless_bytecode_interpreter::concrete::local_state::LocalState"]},{"text":"impl&lt;'env&gt; !Freeze for <a class=\"struct\" href=\"move_stackless_bytecode_interpreter/concrete/player/struct.FunctionContext.html\" title=\"struct move_stackless_bytecode_interpreter::concrete::player::FunctionContext\">FunctionContext</a>&lt;'env&gt;","synthetic":true,"types":["move_stackless_bytecode_interpreter::concrete::player::FunctionContext"]},{"text":"impl&lt;'env&gt; Freeze for <a class=\"struct\" href=\"move_stackless_bytecode_interpreter/concrete/runtime/struct.Runtime.html\" title=\"struct move_stackless_bytecode_interpreter::concrete::runtime::Runtime\">Runtime</a>&lt;'env&gt;","synthetic":true,"types":["move_stackless_bytecode_interpreter::concrete::runtime::Runtime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode_interpreter/concrete/settings/struct.InterpreterSettings.html\" title=\"struct move_stackless_bytecode_interpreter::concrete::settings::InterpreterSettings\">InterpreterSettings</a>","synthetic":true,"types":["move_stackless_bytecode_interpreter::concrete::settings::InterpreterSettings"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_stackless_bytecode_interpreter/concrete/ty/enum.IntType.html\" title=\"enum move_stackless_bytecode_interpreter::concrete::ty::IntType\">IntType</a>","synthetic":true,"types":["move_stackless_bytecode_interpreter::concrete::ty::IntType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_stackless_bytecode_interpreter/concrete/ty/enum.PrimitiveType.html\" title=\"enum move_stackless_bytecode_interpreter::concrete::ty::PrimitiveType\">PrimitiveType</a>","synthetic":true,"types":["move_stackless_bytecode_interpreter::concrete::ty::PrimitiveType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode_interpreter/concrete/ty/struct.StructField.html\" title=\"struct move_stackless_bytecode_interpreter::concrete::ty::StructField\">StructField</a>","synthetic":true,"types":["move_stackless_bytecode_interpreter::concrete::ty::StructField"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode_interpreter/concrete/ty/struct.StructInstantiation.html\" title=\"struct move_stackless_bytecode_interpreter::concrete::ty::StructInstantiation\">StructInstantiation</a>","synthetic":true,"types":["move_stackless_bytecode_interpreter::concrete::ty::StructInstantiation"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_stackless_bytecode_interpreter/concrete/ty/enum.BaseType.html\" title=\"enum move_stackless_bytecode_interpreter::concrete::ty::BaseType\">BaseType</a>","synthetic":true,"types":["move_stackless_bytecode_interpreter::concrete::ty::BaseType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_stackless_bytecode_interpreter/concrete/ty/enum.Type.html\" title=\"enum move_stackless_bytecode_interpreter::concrete::ty::Type\">Type</a>","synthetic":true,"types":["move_stackless_bytecode_interpreter::concrete::ty::Type"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_stackless_bytecode_interpreter/concrete/ty/enum.PartialBaseType.html\" title=\"enum move_stackless_bytecode_interpreter::concrete::ty::PartialBaseType\">PartialBaseType</a>","synthetic":true,"types":["move_stackless_bytecode_interpreter::concrete::ty::PartialBaseType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode_interpreter/concrete/ty/struct.PartialStructField.html\" title=\"struct move_stackless_bytecode_interpreter::concrete::ty::PartialStructField\">PartialStructField</a>","synthetic":true,"types":["move_stackless_bytecode_interpreter::concrete::ty::PartialStructField"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode_interpreter/concrete/ty/struct.PartialStructInstantiation.html\" title=\"struct move_stackless_bytecode_interpreter::concrete::ty::PartialStructInstantiation\">PartialStructInstantiation</a>","synthetic":true,"types":["move_stackless_bytecode_interpreter::concrete::ty::PartialStructInstantiation"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_stackless_bytecode_interpreter/concrete/value/enum.BaseValue.html\" title=\"enum move_stackless_bytecode_interpreter::concrete::value::BaseValue\">BaseValue</a>","synthetic":true,"types":["move_stackless_bytecode_interpreter::concrete::value::BaseValue"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_stackless_bytecode_interpreter/concrete/value/enum.Pointer.html\" title=\"enum move_stackless_bytecode_interpreter::concrete::value::Pointer\">Pointer</a>","synthetic":true,"types":["move_stackless_bytecode_interpreter::concrete::value::Pointer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode_interpreter/concrete/value/struct.TypedValue.html\" title=\"struct move_stackless_bytecode_interpreter::concrete::value::TypedValue\">TypedValue</a>","synthetic":true,"types":["move_stackless_bytecode_interpreter::concrete::value::TypedValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode_interpreter/concrete/value/struct.LocalSlot.html\" title=\"struct move_stackless_bytecode_interpreter::concrete::value::LocalSlot\">LocalSlot</a>","synthetic":true,"types":["move_stackless_bytecode_interpreter::concrete::value::LocalSlot"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode_interpreter/concrete/value/struct.GlobalState.html\" title=\"struct move_stackless_bytecode_interpreter::concrete::value::GlobalState\">GlobalState</a>","synthetic":true,"types":["move_stackless_bytecode_interpreter::concrete::value::GlobalState"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode_interpreter/concrete/value/struct.EvalState.html\" title=\"struct move_stackless_bytecode_interpreter::concrete::value::EvalState\">EvalState</a>","synthetic":true,"types":["move_stackless_bytecode_interpreter::concrete::value::EvalState"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode_interpreter/shared/ident/struct.ModuleIdent.html\" title=\"struct move_stackless_bytecode_interpreter::shared::ident::ModuleIdent\">ModuleIdent</a>","synthetic":true,"types":["move_stackless_bytecode_interpreter::shared::ident::ModuleIdent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode_interpreter/shared/ident/struct.FunctionIdent.html\" title=\"struct move_stackless_bytecode_interpreter::shared::ident::FunctionIdent\">FunctionIdent</a>","synthetic":true,"types":["move_stackless_bytecode_interpreter::shared::ident::FunctionIdent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode_interpreter/shared/ident/struct.StructIdent.html\" title=\"struct move_stackless_bytecode_interpreter::shared::ident::StructIdent\">StructIdent</a>","synthetic":true,"types":["move_stackless_bytecode_interpreter::shared::ident::StructIdent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_stackless_bytecode_interpreter/struct.InterpreterOptions.html\" title=\"struct move_stackless_bytecode_interpreter::InterpreterOptions\">InterpreterOptions</a>","synthetic":true,"types":["move_stackless_bytecode_interpreter::InterpreterOptions"]},{"text":"impl&lt;'env&gt; Freeze for <a class=\"struct\" href=\"move_stackless_bytecode_interpreter/struct.StacklessBytecodeInterpreter.html\" title=\"struct move_stackless_bytecode_interpreter::StacklessBytecodeInterpreter\">StacklessBytecodeInterpreter</a>&lt;'env&gt;","synthetic":true,"types":["move_stackless_bytecode_interpreter::StacklessBytecodeInterpreter"]}];
implementors["move_symbol_pool"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"move_symbol_pool/symbol/struct.Symbol.html\" title=\"struct move_symbol_pool::symbol::Symbol\">Symbol</a>","synthetic":true,"types":["move_symbol_pool::symbol::Symbol"]}];
implementors["move_table_extension"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"move_table_extension/struct.TableHandle.html\" title=\"struct move_table_extension::TableHandle\">TableHandle</a>","synthetic":true,"types":["move_table_extension::TableHandle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_table_extension/struct.TableChangeSet.html\" title=\"struct move_table_extension::TableChangeSet\">TableChangeSet</a>","synthetic":true,"types":["move_table_extension::TableChangeSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_table_extension/struct.TableChange.html\" title=\"struct move_table_extension::TableChange\">TableChange</a>","synthetic":true,"types":["move_table_extension::TableChange"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_table_extension/enum.TableOperation.html\" title=\"enum move_table_extension::TableOperation\">TableOperation</a>","synthetic":true,"types":["move_table_extension::TableOperation"]},{"text":"impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"move_table_extension/struct.NativeTableContext.html\" title=\"struct move_table_extension::NativeTableContext\">NativeTableContext</a>&lt;'a&gt;","synthetic":true,"types":["move_table_extension::NativeTableContext"]}];
implementors["move_unit_test"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"move_unit_test/test_reporter/enum.FailureReason.html\" title=\"enum move_unit_test::test_reporter::FailureReason\">FailureReason</a>","synthetic":true,"types":["move_unit_test::test_reporter::FailureReason"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_unit_test/test_reporter/struct.TestFailure.html\" title=\"struct move_unit_test::test_reporter::TestFailure\">TestFailure</a>","synthetic":true,"types":["move_unit_test::test_reporter::TestFailure"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_unit_test/test_reporter/struct.TestRunInfo.html\" title=\"struct move_unit_test::test_reporter::TestRunInfo\">TestRunInfo</a>","synthetic":true,"types":["move_unit_test::test_reporter::TestRunInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_unit_test/test_reporter/struct.TestStatistics.html\" title=\"struct move_unit_test::test_reporter::TestStatistics\">TestStatistics</a>","synthetic":true,"types":["move_unit_test::test_reporter::TestStatistics"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_unit_test/test_reporter/struct.TestResults.html\" title=\"struct move_unit_test::test_reporter::TestResults\">TestResults</a>","synthetic":true,"types":["move_unit_test::test_reporter::TestResults"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_unit_test/test_runner/struct.SharedTestingConfig.html\" title=\"struct move_unit_test::test_runner::SharedTestingConfig\">SharedTestingConfig</a>","synthetic":true,"types":["move_unit_test::test_runner::SharedTestingConfig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_unit_test/test_runner/struct.TestRunner.html\" title=\"struct move_unit_test::test_runner::TestRunner\">TestRunner</a>","synthetic":true,"types":["move_unit_test::test_runner::TestRunner"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_unit_test/struct.UnitTestingConfig.html\" title=\"struct move_unit_test::UnitTestingConfig\">UnitTestingConfig</a>","synthetic":true,"types":["move_unit_test::UnitTestingConfig"]}];
implementors["move_vm_runtime"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"move_vm_runtime/data_cache/struct.AccountDataCache.html\" title=\"struct move_vm_runtime::data_cache::AccountDataCache\">AccountDataCache</a>","synthetic":true,"types":["move_vm_runtime::data_cache::AccountDataCache"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"move_vm_runtime/move_vm/struct.MoveVM.html\" title=\"struct move_vm_runtime::move_vm::MoveVM\">MoveVM</a>","synthetic":true,"types":["move_vm_runtime::move_vm::MoveVM"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_vm_runtime/native_extensions/struct.NativeContextExtensions.html\" title=\"struct move_vm_runtime::native_extensions::NativeContextExtensions\">NativeContextExtensions</a>&lt;'a&gt;","synthetic":true,"types":["move_vm_runtime::native_extensions::NativeContextExtensions"]},{"text":"impl&lt;'a, 'b&gt; Freeze for <a class=\"struct\" href=\"move_vm_runtime/native_functions/struct.NativeContext.html\" title=\"struct move_vm_runtime::native_functions::NativeContext\">NativeContext</a>&lt;'a, 'b&gt;","synthetic":true,"types":["move_vm_runtime::native_functions::NativeContext"]},{"text":"impl&lt;'r, 'l, S&gt; Freeze for <a class=\"struct\" href=\"move_vm_runtime/session/struct.Session.html\" title=\"struct move_vm_runtime::session::Session\">Session</a>&lt;'r, 'l, S&gt;","synthetic":true,"types":["move_vm_runtime::session::Session"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_vm_runtime/session/struct.SerializedReturnValues.html\" title=\"struct move_vm_runtime::session::SerializedReturnValues\">SerializedReturnValues</a>","synthetic":true,"types":["move_vm_runtime::session::SerializedReturnValues"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_vm_runtime/session/struct.LoadedFunctionInstantiation.html\" title=\"struct move_vm_runtime::session::LoadedFunctionInstantiation\">LoadedFunctionInstantiation</a>","synthetic":true,"types":["move_vm_runtime::session::LoadedFunctionInstantiation"]}];
implementors["move_vm_test_utils"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"move_vm_test_utils/struct.BlankStorage.html\" title=\"struct move_vm_test_utils::BlankStorage\">BlankStorage</a>","synthetic":true,"types":["move_vm_test_utils::storage::BlankStorage"]},{"text":"impl&lt;'a, 'b, S&gt; Freeze for <a class=\"struct\" href=\"move_vm_test_utils/struct.DeltaStorage.html\" title=\"struct move_vm_test_utils::DeltaStorage\">DeltaStorage</a>&lt;'a, 'b, S&gt;","synthetic":true,"types":["move_vm_test_utils::storage::DeltaStorage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_vm_test_utils/struct.InMemoryStorage.html\" title=\"struct move_vm_test_utils::InMemoryStorage\">InMemoryStorage</a>","synthetic":true,"types":["move_vm_test_utils::storage::InMemoryStorage"]}];
implementors["move_vm_types"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"move_vm_types/gas_schedule/struct.GasStatus.html\" title=\"struct move_vm_types::gas_schedule::GasStatus\">GasStatus</a>&lt;'a&gt;","synthetic":true,"types":["move_vm_types::gas_schedule::GasStatus"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_vm_types/gas_schedule/enum.NativeCostIndex.html\" title=\"enum move_vm_types::gas_schedule::NativeCostIndex\">NativeCostIndex</a>","synthetic":true,"types":["move_vm_types::gas_schedule::NativeCostIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_vm_types/loaded_data/runtime_types/struct.StructType.html\" title=\"struct move_vm_types::loaded_data::runtime_types::StructType\">StructType</a>","synthetic":true,"types":["move_vm_types::loaded_data::runtime_types::StructType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_vm_types/loaded_data/runtime_types/struct.CachedStructIndex.html\" title=\"struct move_vm_types::loaded_data::runtime_types::CachedStructIndex\">CachedStructIndex</a>","synthetic":true,"types":["move_vm_types::loaded_data::runtime_types::CachedStructIndex"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_vm_types/loaded_data/runtime_types/enum.Type.html\" title=\"enum move_vm_types::loaded_data::runtime_types::Type\">Type</a>","synthetic":true,"types":["move_vm_types::loaded_data::runtime_types::Type"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_vm_types/natives/function/struct.NativeResult.html\" title=\"struct move_vm_types::natives::function::NativeResult\">NativeResult</a>","synthetic":true,"types":["move_vm_types::natives::function::NativeResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_vm_types/values/values_impl/struct.SignerRef.html\" title=\"struct move_vm_types::values::values_impl::SignerRef\">SignerRef</a>","synthetic":true,"types":["move_vm_types::values::values_impl::SignerRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_vm_types/values/values_impl/struct.VectorRef.html\" title=\"struct move_vm_types::values::values_impl::VectorRef\">VectorRef</a>","synthetic":true,"types":["move_vm_types::values::values_impl::VectorRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_vm_types/values/values_impl/struct.Vector.html\" title=\"struct move_vm_types::values::values_impl::Vector\">Vector</a>","synthetic":true,"types":["move_vm_types::values::values_impl::Vector"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_vm_types/values/values_impl/struct.StructRef.html\" title=\"struct move_vm_types::values::values_impl::StructRef\">StructRef</a>","synthetic":true,"types":["move_vm_types::values::values_impl::StructRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_vm_types/values/values_impl/struct.Reference.html\" title=\"struct move_vm_types::values::values_impl::Reference\">Reference</a>","synthetic":true,"types":["move_vm_types::values::values_impl::Reference"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_vm_types/values/values_impl/struct.Value.html\" title=\"struct move_vm_types::values::values_impl::Value\">Value</a>","synthetic":true,"types":["move_vm_types::values::values_impl::Value"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_vm_types/values/values_impl/struct.Locals.html\" title=\"struct move_vm_types::values::values_impl::Locals\">Locals</a>","synthetic":true,"types":["move_vm_types::values::values_impl::Locals"]},{"text":"impl Freeze for <a class=\"enum\" href=\"move_vm_types/values/values_impl/enum.IntegerValue.html\" title=\"enum move_vm_types::values::values_impl::IntegerValue\">IntegerValue</a>","synthetic":true,"types":["move_vm_types::values::values_impl::IntegerValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_vm_types/values/values_impl/struct.Struct.html\" title=\"struct move_vm_types::values::values_impl::Struct\">Struct</a>","synthetic":true,"types":["move_vm_types::values::values_impl::Struct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"move_vm_types/values/values_impl/struct.GlobalValue.html\" title=\"struct move_vm_types::values::values_impl::GlobalValue\">GlobalValue</a>","synthetic":true,"types":["move_vm_types::values::values_impl::GlobalValue"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"move_vm_types/values/values_impl/enum.GlobalValueEffect.html\" title=\"enum move_vm_types::values::values_impl::GlobalValueEffect\">GlobalValueEffect</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["move_vm_types::values::values_impl::GlobalValueEffect"]}];
implementors["multipart"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"multipart/server/struct.FieldHeaders.html\" title=\"struct multipart::server::FieldHeaders\">FieldHeaders</a>","synthetic":true,"types":["multipart::server::field::FieldHeaders"]},{"text":"impl&lt;M&gt; Freeze for <a class=\"struct\" href=\"multipart/server/struct.MultipartField.html\" title=\"struct multipart::server::MultipartField\">MultipartField</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Freeze,&nbsp;</span>","synthetic":true,"types":["multipart::server::field::MultipartField"]},{"text":"impl&lt;M&gt; Freeze for <a class=\"struct\" href=\"multipart/server/struct.MultipartData.html\" title=\"struct multipart::server::MultipartData\">MultipartData</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Freeze,&nbsp;</span>","synthetic":true,"types":["multipart::server::field::MultipartData"]},{"text":"impl&lt;M, Entry&gt; Freeze for <a class=\"enum\" href=\"multipart/server/enum.ReadEntryResult.html\" title=\"enum multipart::server::ReadEntryResult\">ReadEntryResult</a>&lt;M, Entry&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Entry: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Freeze,&nbsp;</span>","synthetic":true,"types":["multipart::server::field::ReadEntryResult"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"multipart/server/save/struct.SaveBuilder.html\" title=\"struct multipart::server::save::SaveBuilder\">SaveBuilder</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["multipart::server::save::SaveBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"multipart/server/save/struct.SavedField.html\" title=\"struct multipart::server::save::SavedField\">SavedField</a>","synthetic":true,"types":["multipart::server::save::SavedField"]},{"text":"impl Freeze for <a class=\"enum\" href=\"multipart/server/save/enum.SavedData.html\" title=\"enum multipart::server::save::SavedData\">SavedData</a>","synthetic":true,"types":["multipart::server::save::SavedData"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"multipart/server/save/enum.DataReader.html\" title=\"enum multipart::server::save::DataReader\">DataReader</a>&lt;'a&gt;","synthetic":true,"types":["multipart::server::save::DataReader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"multipart/server/save/struct.Entries.html\" title=\"struct multipart::server::save::Entries\">Entries</a>","synthetic":true,"types":["multipart::server::save::Entries"]},{"text":"impl Freeze for <a class=\"enum\" href=\"multipart/server/save/enum.SaveDir.html\" title=\"enum multipart::server::save::SaveDir\">SaveDir</a>","synthetic":true,"types":["multipart::server::save::SaveDir"]},{"text":"impl Freeze for <a class=\"enum\" href=\"multipart/server/save/enum.PartialReason.html\" title=\"enum multipart::server::save::PartialReason\">PartialReason</a>","synthetic":true,"types":["multipart::server::save::PartialReason"]},{"text":"impl&lt;M&gt; Freeze for <a class=\"struct\" href=\"multipart/server/save/struct.PartialSavedField.html\" title=\"struct multipart::server::save::PartialSavedField\">PartialSavedField</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Freeze,&nbsp;</span>","synthetic":true,"types":["multipart::server::save::PartialSavedField"]},{"text":"impl&lt;M&gt; Freeze for <a class=\"struct\" href=\"multipart/server/save/struct.PartialEntries.html\" title=\"struct multipart::server::save::PartialEntries\">PartialEntries</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Freeze,&nbsp;</span>","synthetic":true,"types":["multipart::server::save::PartialEntries"]},{"text":"impl&lt;Success, Partial&gt; Freeze for <a class=\"enum\" href=\"multipart/server/save/enum.SaveResult.html\" title=\"enum multipart::server::save::SaveResult\">SaveResult</a>&lt;Success, Partial&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Partial: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Success: Freeze,&nbsp;</span>","synthetic":true,"types":["multipart::server::save::SaveResult"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"multipart/server/struct.Multipart.html\" title=\"struct multipart::server::Multipart\">Multipart</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["multipart::server::Multipart"]}];
implementors["mvhashmap"] = [{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"mvhashmap/struct.MVHashMap.html\" title=\"struct mvhashmap::MVHashMap\">MVHashMap</a>&lt;K, V&gt;","synthetic":true,"types":["mvhashmap::MVHashMap"]}];
implementors["named_lock"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"named_lock/enum.Error.html\" title=\"enum named_lock::Error\">Error</a>","synthetic":true,"types":["named_lock::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"named_lock/struct.NamedLock.html\" title=\"struct named_lock::NamedLock\">NamedLock</a>","synthetic":true,"types":["named_lock::NamedLock"]},{"text":"impl&lt;'r&gt; Freeze for <a class=\"struct\" href=\"named_lock/struct.NamedLockGuard.html\" title=\"struct named_lock::NamedLockGuard\">NamedLockGuard</a>&lt;'r&gt;","synthetic":true,"types":["named_lock::NamedLockGuard"]}];
implementors["native_tls"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"native_tls/struct.Error.html\" title=\"struct native_tls::Error\">Error</a>","synthetic":true,"types":["native_tls::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"native_tls/struct.Identity.html\" title=\"struct native_tls::Identity\">Identity</a>","synthetic":true,"types":["native_tls::Identity"]},{"text":"impl Freeze for <a class=\"struct\" href=\"native_tls/struct.Certificate.html\" title=\"struct native_tls::Certificate\">Certificate</a>","synthetic":true,"types":["native_tls::Certificate"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"native_tls/struct.MidHandshakeTlsStream.html\" title=\"struct native_tls::MidHandshakeTlsStream\">MidHandshakeTlsStream</a>&lt;S&gt;","synthetic":true,"types":["native_tls::MidHandshakeTlsStream"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"enum\" href=\"native_tls/enum.HandshakeError.html\" title=\"enum native_tls::HandshakeError\">HandshakeError</a>&lt;S&gt;","synthetic":true,"types":["native_tls::HandshakeError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"native_tls/enum.Protocol.html\" title=\"enum native_tls::Protocol\">Protocol</a>","synthetic":true,"types":["native_tls::Protocol"]},{"text":"impl Freeze for <a class=\"struct\" href=\"native_tls/struct.TlsConnectorBuilder.html\" title=\"struct native_tls::TlsConnectorBuilder\">TlsConnectorBuilder</a>","synthetic":true,"types":["native_tls::TlsConnectorBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"native_tls/struct.TlsConnector.html\" title=\"struct native_tls::TlsConnector\">TlsConnector</a>","synthetic":true,"types":["native_tls::TlsConnector"]},{"text":"impl Freeze for <a class=\"struct\" href=\"native_tls/struct.TlsAcceptorBuilder.html\" title=\"struct native_tls::TlsAcceptorBuilder\">TlsAcceptorBuilder</a>","synthetic":true,"types":["native_tls::TlsAcceptorBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"native_tls/struct.TlsAcceptor.html\" title=\"struct native_tls::TlsAcceptor\">TlsAcceptor</a>","synthetic":true,"types":["native_tls::TlsAcceptor"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"native_tls/struct.TlsStream.html\" title=\"struct native_tls::TlsStream\">TlsStream</a>&lt;S&gt;","synthetic":true,"types":["native_tls::TlsStream"]}];
implementors["nom"] = [{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"nom/error/struct.VerboseError.html\" title=\"struct nom::error::VerboseError\">VerboseError</a>&lt;I&gt;","synthetic":true,"types":["nom::error::VerboseError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"nom/error/enum.VerboseErrorKind.html\" title=\"enum nom::error::VerboseErrorKind\">VerboseErrorKind</a>","synthetic":true,"types":["nom::error::VerboseErrorKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"nom/error/enum.ErrorKind.html\" title=\"enum nom::error::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["nom::error::ErrorKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"nom/enum.Needed.html\" title=\"enum nom::Needed\">Needed</a>","synthetic":true,"types":["nom::internal::Needed"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"enum\" href=\"nom/enum.Err.html\" title=\"enum nom::Err\">Err</a>&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":["nom::internal::Err"]},{"text":"impl Freeze for <a class=\"enum\" href=\"nom/enum.CompareResult.html\" title=\"enum nom::CompareResult\">CompareResult</a>","synthetic":true,"types":["nom::traits::CompareResult"]},{"text":"impl&lt;I, E, F&gt; Freeze for <a class=\"struct\" href=\"nom/combinator/struct.ParserIterator.html\" title=\"struct nom::combinator::ParserIterator\">ParserIterator</a>&lt;I, E, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["nom::combinator::ParserIterator"]},{"text":"impl Freeze for <a class=\"enum\" href=\"nom/number/enum.Endianness.html\" title=\"enum nom::number::Endianness\">Endianness</a>","synthetic":true,"types":["nom::number::Endianness"]}];
implementors["num_bigint"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"num_bigint/enum.Sign.html\" title=\"enum num_bigint::Sign\">Sign</a>","synthetic":true,"types":["num_bigint::bigint::Sign"]},{"text":"impl Freeze for <a class=\"struct\" href=\"num_bigint/struct.BigInt.html\" title=\"struct num_bigint::BigInt\">BigInt</a>","synthetic":true,"types":["num_bigint::bigint::BigInt"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"num_bigint/struct.U32Digits.html\" title=\"struct num_bigint::U32Digits\">U32Digits</a>&lt;'a&gt;","synthetic":true,"types":["num_bigint::biguint::iter::U32Digits"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"num_bigint/struct.U64Digits.html\" title=\"struct num_bigint::U64Digits\">U64Digits</a>&lt;'a&gt;","synthetic":true,"types":["num_bigint::biguint::iter::U64Digits"]},{"text":"impl Freeze for <a class=\"struct\" href=\"num_bigint/struct.BigUint.html\" title=\"struct num_bigint::BigUint\">BigUint</a>","synthetic":true,"types":["num_bigint::biguint::BigUint"]},{"text":"impl Freeze for <a class=\"struct\" href=\"num_bigint/struct.ParseBigIntError.html\" title=\"struct num_bigint::ParseBigIntError\">ParseBigIntError</a>","synthetic":true,"types":["num_bigint::ParseBigIntError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"num_bigint/struct.TryFromBigIntError.html\" title=\"struct num_bigint::TryFromBigIntError\">TryFromBigIntError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["num_bigint::TryFromBigIntError"]}];
implementors["num_complex"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["num_complex::Complex"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"num_complex/struct.ParseComplexError.html\" title=\"struct num_complex::ParseComplexError\">ParseComplexError</a>&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":["num_complex::ParseComplexError"]}];
implementors["num_integer"] = [{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"num_integer/struct.ExtendedGcd.html\" title=\"struct num_integer::ExtendedGcd\">ExtendedGcd</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["num_integer::ExtendedGcd"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"num_integer/struct.IterBinomial.html\" title=\"struct num_integer::IterBinomial\">IterBinomial</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["num_integer::IterBinomial"]}];
implementors["num_iter"] = [{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"num_iter/struct.Range.html\" title=\"struct num_iter::Range\">Range</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["num_iter::Range"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"num_iter/struct.RangeInclusive.html\" title=\"struct num_iter::RangeInclusive\">RangeInclusive</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["num_iter::RangeInclusive"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"num_iter/struct.RangeStep.html\" title=\"struct num_iter::RangeStep\">RangeStep</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["num_iter::RangeStep"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"num_iter/struct.RangeStepInclusive.html\" title=\"struct num_iter::RangeStepInclusive\">RangeStepInclusive</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["num_iter::RangeStepInclusive"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"num_iter/struct.RangeFrom.html\" title=\"struct num_iter::RangeFrom\">RangeFrom</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["num_iter::RangeFrom"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"num_iter/struct.RangeStepFrom.html\" title=\"struct num_iter::RangeStepFrom\">RangeStepFrom</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["num_iter::RangeStepFrom"]}];
implementors["num_rational"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["num_rational::Ratio"]},{"text":"impl Freeze for <a class=\"struct\" href=\"num_rational/struct.ParseRatioError.html\" title=\"struct num_rational::ParseRatioError\">ParseRatioError</a>","synthetic":true,"types":["num_rational::ParseRatioError"]}];
implementors["num_traits"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"num_traits/enum.FloatErrorKind.html\" title=\"enum num_traits::FloatErrorKind\">FloatErrorKind</a>","synthetic":true,"types":["num_traits::FloatErrorKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"num_traits/struct.ParseFloatError.html\" title=\"struct num_traits::ParseFloatError\">ParseFloatError</a>","synthetic":true,"types":["num_traits::ParseFloatError"]}];
implementors["object"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"object/enum.Architecture.html\" title=\"enum object::Architecture\">Architecture</a>","synthetic":true,"types":["object::common::Architecture"]},{"text":"impl Freeze for <a class=\"enum\" href=\"object/enum.AddressSize.html\" title=\"enum object::AddressSize\">AddressSize</a>","synthetic":true,"types":["object::common::AddressSize"]},{"text":"impl Freeze for <a class=\"enum\" href=\"object/enum.BinaryFormat.html\" title=\"enum object::BinaryFormat\">BinaryFormat</a>","synthetic":true,"types":["object::common::BinaryFormat"]},{"text":"impl Freeze for <a class=\"enum\" href=\"object/enum.SectionKind.html\" title=\"enum object::SectionKind\">SectionKind</a>","synthetic":true,"types":["object::common::SectionKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"object/enum.ComdatKind.html\" title=\"enum object::ComdatKind\">ComdatKind</a>","synthetic":true,"types":["object::common::ComdatKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"object/enum.SymbolKind.html\" title=\"enum object::SymbolKind\">SymbolKind</a>","synthetic":true,"types":["object::common::SymbolKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"object/enum.SymbolScope.html\" title=\"enum object::SymbolScope\">SymbolScope</a>","synthetic":true,"types":["object::common::SymbolScope"]},{"text":"impl Freeze for <a class=\"enum\" href=\"object/enum.RelocationKind.html\" title=\"enum object::RelocationKind\">RelocationKind</a>","synthetic":true,"types":["object::common::RelocationKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"object/enum.RelocationEncoding.html\" title=\"enum object::RelocationEncoding\">RelocationEncoding</a>","synthetic":true,"types":["object::common::RelocationEncoding"]},{"text":"impl Freeze for <a class=\"enum\" href=\"object/enum.FileFlags.html\" title=\"enum object::FileFlags\">FileFlags</a>","synthetic":true,"types":["object::common::FileFlags"]},{"text":"impl Freeze for <a class=\"enum\" href=\"object/enum.SegmentFlags.html\" title=\"enum object::SegmentFlags\">SegmentFlags</a>","synthetic":true,"types":["object::common::SegmentFlags"]},{"text":"impl Freeze for <a class=\"enum\" href=\"object/enum.SectionFlags.html\" title=\"enum object::SectionFlags\">SectionFlags</a>","synthetic":true,"types":["object::common::SectionFlags"]},{"text":"impl&lt;Section&gt; Freeze for <a class=\"enum\" href=\"object/enum.SymbolFlags.html\" title=\"enum object::SymbolFlags\">SymbolFlags</a>&lt;Section&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Section: Freeze,&nbsp;</span>","synthetic":true,"types":["object::common::SymbolFlags"]},{"text":"impl Freeze for <a class=\"enum\" href=\"object/endian/enum.Endianness.html\" title=\"enum object::endian::Endianness\">Endianness</a>","synthetic":true,"types":["object::endian::Endianness"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/endian/struct.LittleEndian.html\" title=\"struct object::endian::LittleEndian\">LittleEndian</a>","synthetic":true,"types":["object::endian::LittleEndian"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/endian/struct.BigEndian.html\" title=\"struct object::endian::BigEndian\">BigEndian</a>","synthetic":true,"types":["object::endian::BigEndian"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/endian/struct.U16Bytes.html\" title=\"struct object::endian::U16Bytes\">U16Bytes</a>&lt;E&gt;","synthetic":true,"types":["object::endian::U16Bytes"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/endian/struct.U32Bytes.html\" title=\"struct object::endian::U32Bytes\">U32Bytes</a>&lt;E&gt;","synthetic":true,"types":["object::endian::U32Bytes"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/endian/struct.U64Bytes.html\" title=\"struct object::endian::U64Bytes\">U64Bytes</a>&lt;E&gt;","synthetic":true,"types":["object::endian::U64Bytes"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/endian/struct.I16Bytes.html\" title=\"struct object::endian::I16Bytes\">I16Bytes</a>&lt;E&gt;","synthetic":true,"types":["object::endian::I16Bytes"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/endian/struct.I32Bytes.html\" title=\"struct object::endian::I32Bytes\">I32Bytes</a>&lt;E&gt;","synthetic":true,"types":["object::endian::I32Bytes"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/endian/struct.I64Bytes.html\" title=\"struct object::endian::I64Bytes\">I64Bytes</a>&lt;E&gt;","synthetic":true,"types":["object::endian::I64Bytes"]},{"text":"impl&lt;'data&gt; Freeze for <a class=\"struct\" href=\"object/read/struct.Bytes.html\" title=\"struct object::read::Bytes\">Bytes</a>&lt;'data&gt;","synthetic":true,"types":["object::read::util::Bytes"]},{"text":"impl&lt;'data, R&gt; Freeze for <a class=\"struct\" href=\"object/read/struct.StringTable.html\" title=\"struct object::read::StringTable\">StringTable</a>&lt;'data, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["object::read::util::StringTable"]},{"text":"impl&lt;'data, R&gt; Freeze for <a class=\"struct\" href=\"object/read/struct.File.html\" title=\"struct object::read::File\">File</a>&lt;'data, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["object::read::any::File"]},{"text":"impl&lt;'data, 'file, R&gt; Freeze for <a class=\"struct\" href=\"object/read/struct.SegmentIterator.html\" title=\"struct object::read::SegmentIterator\">SegmentIterator</a>&lt;'data, 'file, R&gt;","synthetic":true,"types":["object::read::any::SegmentIterator"]},{"text":"impl&lt;'data, 'file, R&gt; Freeze for <a class=\"struct\" href=\"object/read/struct.Segment.html\" title=\"struct object::read::Segment\">Segment</a>&lt;'data, 'file, R&gt;","synthetic":true,"types":["object::read::any::Segment"]},{"text":"impl&lt;'data, 'file, R&gt; Freeze for <a class=\"struct\" href=\"object/read/struct.SectionIterator.html\" title=\"struct object::read::SectionIterator\">SectionIterator</a>&lt;'data, 'file, R&gt;","synthetic":true,"types":["object::read::any::SectionIterator"]},{"text":"impl&lt;'data, 'file, R&gt; Freeze for <a class=\"struct\" href=\"object/read/struct.Section.html\" title=\"struct object::read::Section\">Section</a>&lt;'data, 'file, R&gt;","synthetic":true,"types":["object::read::any::Section"]},{"text":"impl&lt;'data, 'file, R&gt; Freeze for <a class=\"struct\" href=\"object/read/struct.ComdatIterator.html\" title=\"struct object::read::ComdatIterator\">ComdatIterator</a>&lt;'data, 'file, R&gt;","synthetic":true,"types":["object::read::any::ComdatIterator"]},{"text":"impl&lt;'data, 'file, R&gt; Freeze for <a class=\"struct\" href=\"object/read/struct.Comdat.html\" title=\"struct object::read::Comdat\">Comdat</a>&lt;'data, 'file, R&gt;","synthetic":true,"types":["object::read::any::Comdat"]},{"text":"impl&lt;'data, 'file, R&gt; Freeze for <a class=\"struct\" href=\"object/read/struct.ComdatSectionIterator.html\" title=\"struct object::read::ComdatSectionIterator\">ComdatSectionIterator</a>&lt;'data, 'file, R&gt;","synthetic":true,"types":["object::read::any::ComdatSectionIterator"]},{"text":"impl&lt;'data, 'file, R&gt; Freeze for <a class=\"struct\" href=\"object/read/struct.SymbolTable.html\" title=\"struct object::read::SymbolTable\">SymbolTable</a>&lt;'data, 'file, R&gt;","synthetic":true,"types":["object::read::any::SymbolTable"]},{"text":"impl&lt;'data, 'file, R&gt; Freeze for <a class=\"struct\" href=\"object/read/struct.SymbolIterator.html\" title=\"struct object::read::SymbolIterator\">SymbolIterator</a>&lt;'data, 'file, R&gt;","synthetic":true,"types":["object::read::any::SymbolIterator"]},{"text":"impl&lt;'data, 'file, R&gt; Freeze for <a class=\"struct\" href=\"object/read/struct.Symbol.html\" title=\"struct object::read::Symbol\">Symbol</a>&lt;'data, 'file, R&gt;","synthetic":true,"types":["object::read::any::Symbol"]},{"text":"impl&lt;'data, 'file, R&gt; Freeze for <a class=\"struct\" href=\"object/read/struct.DynamicRelocationIterator.html\" title=\"struct object::read::DynamicRelocationIterator\">DynamicRelocationIterator</a>&lt;'data, 'file, R&gt;","synthetic":true,"types":["object::read::any::DynamicRelocationIterator"]},{"text":"impl&lt;'data, 'file, R&gt; Freeze for <a class=\"struct\" href=\"object/read/struct.SectionRelocationIterator.html\" title=\"struct object::read::SectionRelocationIterator\">SectionRelocationIterator</a>&lt;'data, 'file, R&gt;","synthetic":true,"types":["object::read::any::SectionRelocationIterator"]},{"text":"impl Freeze for <a class=\"enum\" href=\"object/read/archive/enum.ArchiveKind.html\" title=\"enum object::read::archive::ArchiveKind\">ArchiveKind</a>","synthetic":true,"types":["object::read::archive::ArchiveKind"]},{"text":"impl&lt;'data, R&gt; Freeze for <a class=\"struct\" href=\"object/read/archive/struct.ArchiveFile.html\" title=\"struct object::read::archive::ArchiveFile\">ArchiveFile</a>&lt;'data, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["object::read::archive::ArchiveFile"]},{"text":"impl&lt;'data, R&gt; Freeze for <a class=\"struct\" href=\"object/read/archive/struct.ArchiveMemberIterator.html\" title=\"struct object::read::archive::ArchiveMemberIterator\">ArchiveMemberIterator</a>&lt;'data, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["object::read::archive::ArchiveMemberIterator"]},{"text":"impl&lt;'data&gt; Freeze for <a class=\"struct\" href=\"object/read/archive/struct.ArchiveMember.html\" title=\"struct object::read::archive::ArchiveMember\">ArchiveMember</a>&lt;'data&gt;","synthetic":true,"types":["object::read::archive::ArchiveMember"]},{"text":"impl&lt;'data, R&gt; Freeze for <a class=\"struct\" href=\"object/read/coff/struct.CoffFile.html\" title=\"struct object::read::coff::CoffFile\">CoffFile</a>&lt;'data, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["object::read::coff::file::CoffFile"]},{"text":"impl&lt;'data&gt; Freeze for <a class=\"struct\" href=\"object/read/coff/struct.SectionTable.html\" title=\"struct object::read::coff::SectionTable\">SectionTable</a>&lt;'data&gt;","synthetic":true,"types":["object::read::coff::section::SectionTable"]},{"text":"impl&lt;'data, 'file, R&gt; Freeze for <a class=\"struct\" href=\"object/read/coff/struct.CoffSegmentIterator.html\" title=\"struct object::read::coff::CoffSegmentIterator\">CoffSegmentIterator</a>&lt;'data, 'file, R&gt;","synthetic":true,"types":["object::read::coff::section::CoffSegmentIterator"]},{"text":"impl&lt;'data, 'file, R&gt; Freeze for <a class=\"struct\" href=\"object/read/coff/struct.CoffSegment.html\" title=\"struct object::read::coff::CoffSegment\">CoffSegment</a>&lt;'data, 'file, R&gt;","synthetic":true,"types":["object::read::coff::section::CoffSegment"]},{"text":"impl&lt;'data, 'file, R&gt; Freeze for <a class=\"struct\" href=\"object/read/coff/struct.CoffSectionIterator.html\" title=\"struct object::read::coff::CoffSectionIterator\">CoffSectionIterator</a>&lt;'data, 'file, R&gt;","synthetic":true,"types":["object::read::coff::section::CoffSectionIterator"]},{"text":"impl&lt;'data, 'file, R&gt; Freeze for <a class=\"struct\" href=\"object/read/coff/struct.CoffSection.html\" title=\"struct object::read::coff::CoffSection\">CoffSection</a>&lt;'data, 'file, R&gt;","synthetic":true,"types":["object::read::coff::section::CoffSection"]},{"text":"impl&lt;'data, R&gt; Freeze for <a class=\"struct\" href=\"object/read/coff/struct.SymbolTable.html\" title=\"struct object::read::coff::SymbolTable\">SymbolTable</a>&lt;'data, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["object::read::coff::symbol::SymbolTable"]},{"text":"impl&lt;'data, 'table, R&gt; Freeze for <a class=\"struct\" href=\"object/read/coff/struct.SymbolIterator.html\" title=\"struct object::read::coff::SymbolIterator\">SymbolIterator</a>&lt;'data, 'table, R&gt;","synthetic":true,"types":["object::read::coff::symbol::SymbolIterator"]},{"text":"impl&lt;'data, 'file, R&gt; Freeze for <a class=\"struct\" href=\"object/read/coff/struct.CoffSymbolTable.html\" title=\"struct object::read::coff::CoffSymbolTable\">CoffSymbolTable</a>&lt;'data, 'file, R&gt;","synthetic":true,"types":["object::read::coff::symbol::CoffSymbolTable"]},{"text":"impl&lt;'data, 'file, R&gt; Freeze for <a class=\"struct\" href=\"object/read/coff/struct.CoffSymbolIterator.html\" title=\"struct object::read::coff::CoffSymbolIterator\">CoffSymbolIterator</a>&lt;'data, 'file, R&gt;","synthetic":true,"types":["object::read::coff::symbol::CoffSymbolIterator"]},{"text":"impl&lt;'data, 'file, R&gt; Freeze for <a class=\"struct\" href=\"object/read/coff/struct.CoffSymbol.html\" title=\"struct object::read::coff::CoffSymbol\">CoffSymbol</a>&lt;'data, 'file, R&gt;","synthetic":true,"types":["object::read::coff::symbol::CoffSymbol"]},{"text":"impl&lt;'data, 'file, R&gt; Freeze for <a class=\"struct\" href=\"object/read/coff/struct.CoffRelocationIterator.html\" title=\"struct object::read::coff::CoffRelocationIterator\">CoffRelocationIterator</a>&lt;'data, 'file, R&gt;","synthetic":true,"types":["object::read::coff::relocation::CoffRelocationIterator"]},{"text":"impl&lt;'data, 'file, R&gt; Freeze for <a class=\"struct\" href=\"object/read/coff/struct.CoffComdatIterator.html\" title=\"struct object::read::coff::CoffComdatIterator\">CoffComdatIterator</a>&lt;'data, 'file, R&gt;","synthetic":true,"types":["object::read::coff::comdat::CoffComdatIterator"]},{"text":"impl&lt;'data, 'file, R&gt; Freeze for <a class=\"struct\" href=\"object/read/coff/struct.CoffComdat.html\" title=\"struct object::read::coff::CoffComdat\">CoffComdat</a>&lt;'data, 'file, R&gt;","synthetic":true,"types":["object::read::coff::comdat::CoffComdat"]},{"text":"impl&lt;'data, 'file, R&gt; Freeze for <a class=\"struct\" href=\"object/read/coff/struct.CoffComdatSectionIterator.html\" title=\"struct object::read::coff::CoffComdatSectionIterator\">CoffComdatSectionIterator</a>&lt;'data, 'file, R&gt;","synthetic":true,"types":["object::read::coff::comdat::CoffComdatSectionIterator"]},{"text":"impl&lt;'data, Elf, R&gt; Freeze for <a class=\"struct\" href=\"object/read/elf/struct.ElfFile.html\" title=\"struct object::read::elf::ElfFile\">ElfFile</a>&lt;'data, Elf, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as <a class=\"trait\" href=\"object/read/elf/trait.FileHeader.html\" title=\"trait object::read::elf::FileHeader\">FileHeader</a>&gt;::<a class=\"associatedtype\" href=\"object/read/elf/trait.FileHeader.html#associatedtype.Endian\" title=\"type object::read::elf::FileHeader::Endian\">Endian</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["object::read::elf::file::ElfFile"]},{"text":"impl&lt;'data, 'file, Elf, R&gt; Freeze for <a class=\"struct\" href=\"object/read/elf/struct.ElfSegmentIterator.html\" title=\"struct object::read::elf::ElfSegmentIterator\">ElfSegmentIterator</a>&lt;'data, 'file, Elf, R&gt;","synthetic":true,"types":["object::read::elf::segment::ElfSegmentIterator"]},{"text":"impl&lt;'data, 'file, Elf, R&gt; Freeze for <a class=\"struct\" href=\"object/read/elf/struct.ElfSegment.html\" title=\"struct object::read::elf::ElfSegment\">ElfSegment</a>&lt;'data, 'file, Elf, R&gt;","synthetic":true,"types":["object::read::elf::segment::ElfSegment"]},{"text":"impl&lt;'data, Elf, R&gt; Freeze for <a class=\"struct\" href=\"object/read/elf/struct.SectionTable.html\" title=\"struct object::read::elf::SectionTable\">SectionTable</a>&lt;'data, Elf, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["object::read::elf::section::SectionTable"]},{"text":"impl&lt;'data, 'file, Elf, R&gt; Freeze for <a class=\"struct\" href=\"object/read/elf/struct.ElfSectionIterator.html\" title=\"struct object::read::elf::ElfSectionIterator\">ElfSectionIterator</a>&lt;'data, 'file, Elf, R&gt;","synthetic":true,"types":["object::read::elf::section::ElfSectionIterator"]},{"text":"impl&lt;'data, 'file, Elf, R&gt; Freeze for <a class=\"struct\" href=\"object/read/elf/struct.ElfSection.html\" title=\"struct object::read::elf::ElfSection\">ElfSection</a>&lt;'data, 'file, Elf, R&gt;","synthetic":true,"types":["object::read::elf::section::ElfSection"]},{"text":"impl&lt;'data, Elf, R&gt; Freeze for <a class=\"struct\" href=\"object/read/elf/struct.SymbolTable.html\" title=\"struct object::read::elf::SymbolTable\">SymbolTable</a>&lt;'data, Elf, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["object::read::elf::symbol::SymbolTable"]},{"text":"impl&lt;'data, 'file, Elf, R&gt; Freeze for <a class=\"struct\" href=\"object/read/elf/struct.ElfSymbolTable.html\" title=\"struct object::read::elf::ElfSymbolTable\">ElfSymbolTable</a>&lt;'data, 'file, Elf, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as <a class=\"trait\" href=\"object/read/elf/trait.FileHeader.html\" title=\"trait object::read::elf::FileHeader\">FileHeader</a>&gt;::<a class=\"associatedtype\" href=\"object/read/elf/trait.FileHeader.html#associatedtype.Endian\" title=\"type object::read::elf::FileHeader::Endian\">Endian</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["object::read::elf::symbol::ElfSymbolTable"]},{"text":"impl&lt;'data, 'file, Elf, R&gt; Freeze for <a class=\"struct\" href=\"object/read/elf/struct.ElfSymbolIterator.html\" title=\"struct object::read::elf::ElfSymbolIterator\">ElfSymbolIterator</a>&lt;'data, 'file, Elf, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as <a class=\"trait\" href=\"object/read/elf/trait.FileHeader.html\" title=\"trait object::read::elf::FileHeader\">FileHeader</a>&gt;::<a class=\"associatedtype\" href=\"object/read/elf/trait.FileHeader.html#associatedtype.Endian\" title=\"type object::read::elf::FileHeader::Endian\">Endian</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["object::read::elf::symbol::ElfSymbolIterator"]},{"text":"impl&lt;'data, 'file, Elf, R&gt; Freeze for <a class=\"struct\" href=\"object/read/elf/struct.ElfSymbol.html\" title=\"struct object::read::elf::ElfSymbol\">ElfSymbol</a>&lt;'data, 'file, Elf, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as <a class=\"trait\" href=\"object/read/elf/trait.FileHeader.html\" title=\"trait object::read::elf::FileHeader\">FileHeader</a>&gt;::<a class=\"associatedtype\" href=\"object/read/elf/trait.FileHeader.html#associatedtype.Endian\" title=\"type object::read::elf::FileHeader::Endian\">Endian</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["object::read::elf::symbol::ElfSymbol"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/read/elf/struct.RelocationSections.html\" title=\"struct object::read::elf::RelocationSections\">RelocationSections</a>","synthetic":true,"types":["object::read::elf::relocation::RelocationSections"]},{"text":"impl&lt;'data, 'file, Elf, R&gt; Freeze for <a class=\"struct\" href=\"object/read/elf/struct.ElfDynamicRelocationIterator.html\" title=\"struct object::read::elf::ElfDynamicRelocationIterator\">ElfDynamicRelocationIterator</a>&lt;'data, 'file, Elf, R&gt;","synthetic":true,"types":["object::read::elf::relocation::ElfDynamicRelocationIterator"]},{"text":"impl&lt;'data, 'file, Elf, R&gt; Freeze for <a class=\"struct\" href=\"object/read/elf/struct.ElfSectionRelocationIterator.html\" title=\"struct object::read::elf::ElfSectionRelocationIterator\">ElfSectionRelocationIterator</a>&lt;'data, 'file, Elf, R&gt;","synthetic":true,"types":["object::read::elf::relocation::ElfSectionRelocationIterator"]},{"text":"impl&lt;'data, 'file, Elf, R&gt; Freeze for <a class=\"struct\" href=\"object/read/elf/struct.ElfComdatIterator.html\" title=\"struct object::read::elf::ElfComdatIterator\">ElfComdatIterator</a>&lt;'data, 'file, Elf, R&gt;","synthetic":true,"types":["object::read::elf::comdat::ElfComdatIterator"]},{"text":"impl&lt;'data, 'file, Elf, R&gt; Freeze for <a class=\"struct\" href=\"object/read/elf/struct.ElfComdat.html\" title=\"struct object::read::elf::ElfComdat\">ElfComdat</a>&lt;'data, 'file, Elf, R&gt;","synthetic":true,"types":["object::read::elf::comdat::ElfComdat"]},{"text":"impl&lt;'data, 'file, Elf, R&gt; Freeze for <a class=\"struct\" href=\"object/read/elf/struct.ElfComdatSectionIterator.html\" title=\"struct object::read::elf::ElfComdatSectionIterator\">ElfComdatSectionIterator</a>&lt;'data, 'file, Elf, R&gt;","synthetic":true,"types":["object::read::elf::comdat::ElfComdatSectionIterator"]},{"text":"impl&lt;'data, Elf&gt; Freeze for <a class=\"struct\" href=\"object/read/elf/struct.NoteIterator.html\" title=\"struct object::read::elf::NoteIterator\">NoteIterator</a>&lt;'data, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as <a class=\"trait\" href=\"object/read/elf/trait.FileHeader.html\" title=\"trait object::read::elf::FileHeader\">FileHeader</a>&gt;::<a class=\"associatedtype\" href=\"object/read/elf/trait.FileHeader.html#associatedtype.Endian\" title=\"type object::read::elf::FileHeader::Endian\">Endian</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["object::read::elf::note::NoteIterator"]},{"text":"impl&lt;'data, Elf&gt; Freeze for <a class=\"struct\" href=\"object/read/elf/struct.Note.html\" title=\"struct object::read::elf::Note\">Note</a>&lt;'data, Elf&gt;","synthetic":true,"types":["object::read::elf::note::Note"]},{"text":"impl&lt;'data, Elf&gt; Freeze for <a class=\"struct\" href=\"object/read/elf/struct.HashTable.html\" title=\"struct object::read::elf::HashTable\">HashTable</a>&lt;'data, Elf&gt;","synthetic":true,"types":["object::read::elf::hash::HashTable"]},{"text":"impl&lt;'data, Elf&gt; Freeze for <a class=\"struct\" href=\"object/read/elf/struct.GnuHashTable.html\" title=\"struct object::read::elf::GnuHashTable\">GnuHashTable</a>&lt;'data, Elf&gt;","synthetic":true,"types":["object::read::elf::hash::GnuHashTable"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/read/elf/struct.VersionIndex.html\" title=\"struct object::read::elf::VersionIndex\">VersionIndex</a>","synthetic":true,"types":["object::read::elf::version::VersionIndex"]},{"text":"impl&lt;'data&gt; Freeze for <a class=\"struct\" href=\"object/read/elf/struct.Version.html\" title=\"struct object::read::elf::Version\">Version</a>&lt;'data&gt;","synthetic":true,"types":["object::read::elf::version::Version"]},{"text":"impl&lt;'data, Elf&gt; Freeze for <a class=\"struct\" href=\"object/read/elf/struct.VersionTable.html\" title=\"struct object::read::elf::VersionTable\">VersionTable</a>&lt;'data, Elf&gt;","synthetic":true,"types":["object::read::elf::version::VersionTable"]},{"text":"impl&lt;'data, Elf&gt; Freeze for <a class=\"struct\" href=\"object/read/elf/struct.VerdefIterator.html\" title=\"struct object::read::elf::VerdefIterator\">VerdefIterator</a>&lt;'data, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as <a class=\"trait\" href=\"object/read/elf/trait.FileHeader.html\" title=\"trait object::read::elf::FileHeader\">FileHeader</a>&gt;::<a class=\"associatedtype\" href=\"object/read/elf/trait.FileHeader.html#associatedtype.Endian\" title=\"type object::read::elf::FileHeader::Endian\">Endian</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["object::read::elf::version::VerdefIterator"]},{"text":"impl&lt;'data, Elf&gt; Freeze for <a class=\"struct\" href=\"object/read/elf/struct.VerdauxIterator.html\" title=\"struct object::read::elf::VerdauxIterator\">VerdauxIterator</a>&lt;'data, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as <a class=\"trait\" href=\"object/read/elf/trait.FileHeader.html\" title=\"trait object::read::elf::FileHeader\">FileHeader</a>&gt;::<a class=\"associatedtype\" href=\"object/read/elf/trait.FileHeader.html#associatedtype.Endian\" title=\"type object::read::elf::FileHeader::Endian\">Endian</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["object::read::elf::version::VerdauxIterator"]},{"text":"impl&lt;'data, Elf&gt; Freeze for <a class=\"struct\" href=\"object/read/elf/struct.VerneedIterator.html\" title=\"struct object::read::elf::VerneedIterator\">VerneedIterator</a>&lt;'data, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as <a class=\"trait\" href=\"object/read/elf/trait.FileHeader.html\" title=\"trait object::read::elf::FileHeader\">FileHeader</a>&gt;::<a class=\"associatedtype\" href=\"object/read/elf/trait.FileHeader.html#associatedtype.Endian\" title=\"type object::read::elf::FileHeader::Endian\">Endian</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["object::read::elf::version::VerneedIterator"]},{"text":"impl&lt;'data, Elf&gt; Freeze for <a class=\"struct\" href=\"object/read/elf/struct.VernauxIterator.html\" title=\"struct object::read::elf::VernauxIterator\">VernauxIterator</a>&lt;'data, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as <a class=\"trait\" href=\"object/read/elf/trait.FileHeader.html\" title=\"trait object::read::elf::FileHeader\">FileHeader</a>&gt;::<a class=\"associatedtype\" href=\"object/read/elf/trait.FileHeader.html#associatedtype.Endian\" title=\"type object::read::elf::FileHeader::Endian\">Endian</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["object::read::elf::version::VernauxIterator"]},{"text":"impl&lt;'data, E, R&gt; Freeze for <a class=\"struct\" href=\"object/read/macho/struct.DyldCache.html\" title=\"struct object::read::macho::DyldCache\">DyldCache</a>&lt;'data, E, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["object::read::macho::dyld_cache::DyldCache"]},{"text":"impl&lt;'data, E, R&gt; Freeze for <a class=\"struct\" href=\"object/read/macho/struct.DyldSubCache.html\" title=\"struct object::read::macho::DyldSubCache\">DyldSubCache</a>&lt;'data, E, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["object::read::macho::dyld_cache::DyldSubCache"]},{"text":"impl&lt;'data, 'cache, E, R&gt; Freeze for <a class=\"struct\" href=\"object/read/macho/struct.DyldCacheImageIterator.html\" title=\"struct object::read::macho::DyldCacheImageIterator\">DyldCacheImageIterator</a>&lt;'data, 'cache, E, R&gt;","synthetic":true,"types":["object::read::macho::dyld_cache::DyldCacheImageIterator"]},{"text":"impl&lt;'data, 'cache, E, R&gt; Freeze for <a class=\"struct\" href=\"object/read/macho/struct.DyldCacheImage.html\" title=\"struct object::read::macho::DyldCacheImage\">DyldCacheImage</a>&lt;'data, 'cache, E, R&gt;","synthetic":true,"types":["object::read::macho::dyld_cache::DyldCacheImage"]},{"text":"impl&lt;'data, Mach, R&gt; Freeze for <a class=\"struct\" href=\"object/read/macho/struct.MachOFile.html\" title=\"struct object::read::macho::MachOFile\">MachOFile</a>&lt;'data, Mach, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as <a class=\"trait\" href=\"object/read/macho/trait.MachHeader.html\" title=\"trait object::read::macho::MachHeader\">MachHeader</a>&gt;::<a class=\"associatedtype\" href=\"object/read/macho/trait.MachHeader.html#associatedtype.Endian\" title=\"type object::read::macho::MachHeader::Endian\">Endian</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["object::read::macho::file::MachOFile"]},{"text":"impl&lt;'data, 'file, Mach, R&gt; Freeze for <a class=\"struct\" href=\"object/read/macho/struct.MachOComdatIterator.html\" title=\"struct object::read::macho::MachOComdatIterator\">MachOComdatIterator</a>&lt;'data, 'file, Mach, R&gt;","synthetic":true,"types":["object::read::macho::file::MachOComdatIterator"]},{"text":"impl&lt;'data, 'file, Mach, R&gt; Freeze for <a class=\"struct\" href=\"object/read/macho/struct.MachOComdat.html\" title=\"struct object::read::macho::MachOComdat\">MachOComdat</a>&lt;'data, 'file, Mach, R&gt;","synthetic":true,"types":["object::read::macho::file::MachOComdat"]},{"text":"impl&lt;'data, 'file, Mach, R&gt; Freeze for <a class=\"struct\" href=\"object/read/macho/struct.MachOComdatSectionIterator.html\" title=\"struct object::read::macho::MachOComdatSectionIterator\">MachOComdatSectionIterator</a>&lt;'data, 'file, Mach, R&gt;","synthetic":true,"types":["object::read::macho::file::MachOComdatSectionIterator"]},{"text":"impl&lt;'data, E&gt; Freeze for <a class=\"struct\" href=\"object/read/macho/struct.LoadCommandIterator.html\" title=\"struct object::read::macho::LoadCommandIterator\">LoadCommandIterator</a>&lt;'data, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":["object::read::macho::load_command::LoadCommandIterator"]},{"text":"impl&lt;'data, E&gt; Freeze for <a class=\"struct\" href=\"object/read/macho/struct.LoadCommandData.html\" title=\"struct object::read::macho::LoadCommandData\">LoadCommandData</a>&lt;'data, E&gt;","synthetic":true,"types":["object::read::macho::load_command::LoadCommandData"]},{"text":"impl&lt;'data, E&gt; Freeze for <a class=\"enum\" href=\"object/read/macho/enum.LoadCommandVariant.html\" title=\"enum object::read::macho::LoadCommandVariant\">LoadCommandVariant</a>&lt;'data, E&gt;","synthetic":true,"types":["object::read::macho::load_command::LoadCommandVariant"]},{"text":"impl&lt;'data, 'file, Mach, R&gt; Freeze for <a class=\"struct\" href=\"object/read/macho/struct.MachOSegmentIterator.html\" title=\"struct object::read::macho::MachOSegmentIterator\">MachOSegmentIterator</a>&lt;'data, 'file, Mach, R&gt;","synthetic":true,"types":["object::read::macho::segment::MachOSegmentIterator"]},{"text":"impl&lt;'data, 'file, Mach, R&gt; Freeze for <a class=\"struct\" href=\"object/read/macho/struct.MachOSegment.html\" title=\"struct object::read::macho::MachOSegment\">MachOSegment</a>&lt;'data, 'file, Mach, R&gt;","synthetic":true,"types":["object::read::macho::segment::MachOSegment"]},{"text":"impl&lt;'data, 'file, Mach, R&gt; Freeze for <a class=\"struct\" href=\"object/read/macho/struct.MachOSectionIterator.html\" title=\"struct object::read::macho::MachOSectionIterator\">MachOSectionIterator</a>&lt;'data, 'file, Mach, R&gt;","synthetic":true,"types":["object::read::macho::section::MachOSectionIterator"]},{"text":"impl&lt;'data, 'file, Mach, R&gt; Freeze for <a class=\"struct\" href=\"object/read/macho/struct.MachOSection.html\" title=\"struct object::read::macho::MachOSection\">MachOSection</a>&lt;'data, 'file, Mach, R&gt;","synthetic":true,"types":["object::read::macho::section::MachOSection"]},{"text":"impl&lt;'data, Mach, R&gt; Freeze for <a class=\"struct\" href=\"object/read/macho/struct.SymbolTable.html\" title=\"struct object::read::macho::SymbolTable\">SymbolTable</a>&lt;'data, Mach, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["object::read::macho::symbol::SymbolTable"]},{"text":"impl&lt;'data, 'file, Mach, R&gt; Freeze for <a class=\"struct\" href=\"object/read/macho/struct.MachOSymbolTable.html\" title=\"struct object::read::macho::MachOSymbolTable\">MachOSymbolTable</a>&lt;'data, 'file, Mach, R&gt;","synthetic":true,"types":["object::read::macho::symbol::MachOSymbolTable"]},{"text":"impl&lt;'data, 'file, Mach, R&gt; Freeze for <a class=\"struct\" href=\"object/read/macho/struct.MachOSymbolIterator.html\" title=\"struct object::read::macho::MachOSymbolIterator\">MachOSymbolIterator</a>&lt;'data, 'file, Mach, R&gt;","synthetic":true,"types":["object::read::macho::symbol::MachOSymbolIterator"]},{"text":"impl&lt;'data, 'file, Mach, R&gt; Freeze for <a class=\"struct\" href=\"object/read/macho/struct.MachOSymbol.html\" title=\"struct object::read::macho::MachOSymbol\">MachOSymbol</a>&lt;'data, 'file, Mach, R&gt;","synthetic":true,"types":["object::read::macho::symbol::MachOSymbol"]},{"text":"impl&lt;'data, 'file, Mach, R&gt; Freeze for <a class=\"struct\" href=\"object/read/macho/struct.MachORelocationIterator.html\" title=\"struct object::read::macho::MachORelocationIterator\">MachORelocationIterator</a>&lt;'data, 'file, Mach, R&gt;","synthetic":true,"types":["object::read::macho::relocation::MachORelocationIterator"]},{"text":"impl&lt;'data, Pe, R&gt; Freeze for <a class=\"struct\" href=\"object/read/pe/struct.PeFile.html\" title=\"struct object::read::pe::PeFile\">PeFile</a>&lt;'data, Pe, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["object::read::pe::file::PeFile"]},{"text":"impl&lt;'data, 'file, Pe, R&gt; Freeze for <a class=\"struct\" href=\"object/read/pe/struct.PeComdatIterator.html\" title=\"struct object::read::pe::PeComdatIterator\">PeComdatIterator</a>&lt;'data, 'file, Pe, R&gt;","synthetic":true,"types":["object::read::pe::file::PeComdatIterator"]},{"text":"impl&lt;'data, 'file, Pe, R&gt; Freeze for <a class=\"struct\" href=\"object/read/pe/struct.PeComdat.html\" title=\"struct object::read::pe::PeComdat\">PeComdat</a>&lt;'data, 'file, Pe, R&gt;","synthetic":true,"types":["object::read::pe::file::PeComdat"]},{"text":"impl&lt;'data, 'file, Pe, R&gt; Freeze for <a class=\"struct\" href=\"object/read/pe/struct.PeComdatSectionIterator.html\" title=\"struct object::read::pe::PeComdatSectionIterator\">PeComdatSectionIterator</a>&lt;'data, 'file, Pe, R&gt;","synthetic":true,"types":["object::read::pe::file::PeComdatSectionIterator"]},{"text":"impl&lt;'data, 'file, Pe, R&gt; Freeze for <a class=\"struct\" href=\"object/read/pe/struct.PeSegmentIterator.html\" title=\"struct object::read::pe::PeSegmentIterator\">PeSegmentIterator</a>&lt;'data, 'file, Pe, R&gt;","synthetic":true,"types":["object::read::pe::section::PeSegmentIterator"]},{"text":"impl&lt;'data, 'file, Pe, R&gt; Freeze for <a class=\"struct\" href=\"object/read/pe/struct.PeSegment.html\" title=\"struct object::read::pe::PeSegment\">PeSegment</a>&lt;'data, 'file, Pe, R&gt;","synthetic":true,"types":["object::read::pe::section::PeSegment"]},{"text":"impl&lt;'data, 'file, Pe, R&gt; Freeze for <a class=\"struct\" href=\"object/read/pe/struct.PeSectionIterator.html\" title=\"struct object::read::pe::PeSectionIterator\">PeSectionIterator</a>&lt;'data, 'file, Pe, R&gt;","synthetic":true,"types":["object::read::pe::section::PeSectionIterator"]},{"text":"impl&lt;'data, 'file, Pe, R&gt; Freeze for <a class=\"struct\" href=\"object/read/pe/struct.PeSection.html\" title=\"struct object::read::pe::PeSection\">PeSection</a>&lt;'data, 'file, Pe, R&gt;","synthetic":true,"types":["object::read::pe::section::PeSection"]},{"text":"impl&lt;'data, 'file, R&gt; Freeze for <a class=\"struct\" href=\"object/read/pe/struct.PeRelocationIterator.html\" title=\"struct object::read::pe::PeRelocationIterator\">PeRelocationIterator</a>&lt;'data, 'file, R&gt;","synthetic":true,"types":["object::read::pe::section::PeRelocationIterator"]},{"text":"impl&lt;'data&gt; Freeze for <a class=\"struct\" href=\"object/read/pe/struct.DataDirectories.html\" title=\"struct object::read::pe::DataDirectories\">DataDirectories</a>&lt;'data&gt;","synthetic":true,"types":["object::read::pe::data_directory::DataDirectories"]},{"text":"impl&lt;'data&gt; Freeze for <a class=\"enum\" href=\"object/read/pe/enum.ExportTarget.html\" title=\"enum object::read::pe::ExportTarget\">ExportTarget</a>&lt;'data&gt;","synthetic":true,"types":["object::read::pe::export::ExportTarget"]},{"text":"impl&lt;'data&gt; Freeze for <a class=\"struct\" href=\"object/read/pe/struct.Export.html\" title=\"struct object::read::pe::Export\">Export</a>&lt;'data&gt;","synthetic":true,"types":["object::read::pe::export::Export"]},{"text":"impl&lt;'data&gt; Freeze for <a class=\"struct\" href=\"object/read/pe/struct.ExportTable.html\" title=\"struct object::read::pe::ExportTable\">ExportTable</a>&lt;'data&gt;","synthetic":true,"types":["object::read::pe::export::ExportTable"]},{"text":"impl&lt;'data&gt; Freeze for <a class=\"struct\" href=\"object/read/pe/struct.ImportTable.html\" title=\"struct object::read::pe::ImportTable\">ImportTable</a>&lt;'data&gt;","synthetic":true,"types":["object::read::pe::import::ImportTable"]},{"text":"impl&lt;'data&gt; Freeze for <a class=\"struct\" href=\"object/read/pe/struct.ImportDescriptorIterator.html\" title=\"struct object::read::pe::ImportDescriptorIterator\">ImportDescriptorIterator</a>&lt;'data&gt;","synthetic":true,"types":["object::read::pe::import::ImportDescriptorIterator"]},{"text":"impl&lt;'data&gt; Freeze for <a class=\"struct\" href=\"object/read/pe/struct.ImportThunkList.html\" title=\"struct object::read::pe::ImportThunkList\">ImportThunkList</a>&lt;'data&gt;","synthetic":true,"types":["object::read::pe::import::ImportThunkList"]},{"text":"impl&lt;'data&gt; Freeze for <a class=\"enum\" href=\"object/read/pe/enum.Import.html\" title=\"enum object::read::pe::Import\">Import</a>&lt;'data&gt;","synthetic":true,"types":["object::read::pe::import::Import"]},{"text":"impl&lt;'data&gt; Freeze for <a class=\"struct\" href=\"object/read/pe/struct.RelocationBlockIterator.html\" title=\"struct object::read::pe::RelocationBlockIterator\">RelocationBlockIterator</a>&lt;'data&gt;","synthetic":true,"types":["object::read::pe::relocation::RelocationBlockIterator"]},{"text":"impl&lt;'data&gt; Freeze for <a class=\"struct\" href=\"object/read/pe/struct.RelocationIterator.html\" title=\"struct object::read::pe::RelocationIterator\">RelocationIterator</a>&lt;'data&gt;","synthetic":true,"types":["object::read::pe::relocation::RelocationIterator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/read/pe/struct.Relocation.html\" title=\"struct object::read::pe::Relocation\">Relocation</a>","synthetic":true,"types":["object::read::pe::relocation::Relocation"]},{"text":"impl&lt;'data&gt; Freeze for <a class=\"struct\" href=\"object/read/pe/struct.ResourceDirectory.html\" title=\"struct object::read::pe::ResourceDirectory\">ResourceDirectory</a>&lt;'data&gt;","synthetic":true,"types":["object::read::pe::resource::ResourceDirectory"]},{"text":"impl&lt;'data&gt; Freeze for <a class=\"struct\" href=\"object/read/pe/struct.ResourceDirectoryTable.html\" title=\"struct object::read::pe::ResourceDirectoryTable\">ResourceDirectoryTable</a>&lt;'data&gt;","synthetic":true,"types":["object::read::pe::resource::ResourceDirectoryTable"]},{"text":"impl&lt;'data&gt; Freeze for <a class=\"enum\" href=\"object/read/pe/enum.ResourceDirectoryEntryData.html\" title=\"enum object::read::pe::ResourceDirectoryEntryData\">ResourceDirectoryEntryData</a>&lt;'data&gt;","synthetic":true,"types":["object::read::pe::resource::ResourceDirectoryEntryData"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/read/pe/struct.ResourceName.html\" title=\"struct object::read::pe::ResourceName\">ResourceName</a>","synthetic":true,"types":["object::read::pe::resource::ResourceName"]},{"text":"impl Freeze for <a class=\"enum\" href=\"object/read/pe/enum.ResourceNameOrId.html\" title=\"enum object::read::pe::ResourceNameOrId\">ResourceNameOrId</a>","synthetic":true,"types":["object::read::pe::resource::ResourceNameOrId"]},{"text":"impl&lt;'data&gt; Freeze for <a class=\"struct\" href=\"object/read/pe/struct.RichHeaderInfo.html\" title=\"struct object::read::pe::RichHeaderInfo\">RichHeaderInfo</a>&lt;'data&gt;","synthetic":true,"types":["object::read::pe::rich::RichHeaderInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/read/pe/struct.RichHeaderEntry.html\" title=\"struct object::read::pe::RichHeaderEntry\">RichHeaderEntry</a>","synthetic":true,"types":["object::read::pe::rich::RichHeaderEntry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/read/struct.NoDynamicRelocationIterator.html\" title=\"struct object::read::NoDynamicRelocationIterator\">NoDynamicRelocationIterator</a>","synthetic":true,"types":["object::read::traits::NoDynamicRelocationIterator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/read/struct.Error.html\" title=\"struct object::read::Error\">Error</a>","synthetic":true,"types":["object::read::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"object/read/enum.FileKind.html\" title=\"enum object::read::FileKind\">FileKind</a>","synthetic":true,"types":["object::read::FileKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"object/read/enum.ObjectKind.html\" title=\"enum object::read::ObjectKind\">ObjectKind</a>","synthetic":true,"types":["object::read::ObjectKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/read/struct.SectionIndex.html\" title=\"struct object::read::SectionIndex\">SectionIndex</a>","synthetic":true,"types":["object::read::SectionIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/read/struct.SymbolIndex.html\" title=\"struct object::read::SymbolIndex\">SymbolIndex</a>","synthetic":true,"types":["object::read::SymbolIndex"]},{"text":"impl Freeze for <a class=\"enum\" href=\"object/read/enum.SymbolSection.html\" title=\"enum object::read::SymbolSection\">SymbolSection</a>","synthetic":true,"types":["object::read::SymbolSection"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"object/read/struct.SymbolMap.html\" title=\"struct object::read::SymbolMap\">SymbolMap</a>&lt;T&gt;","synthetic":true,"types":["object::read::SymbolMap"]},{"text":"impl&lt;'data&gt; Freeze for <a class=\"struct\" href=\"object/read/struct.SymbolMapName.html\" title=\"struct object::read::SymbolMapName\">SymbolMapName</a>&lt;'data&gt;","synthetic":true,"types":["object::read::SymbolMapName"]},{"text":"impl&lt;'data&gt; Freeze for <a class=\"struct\" href=\"object/read/struct.ObjectMap.html\" title=\"struct object::read::ObjectMap\">ObjectMap</a>&lt;'data&gt;","synthetic":true,"types":["object::read::ObjectMap"]},{"text":"impl&lt;'data&gt; Freeze for <a class=\"struct\" href=\"object/read/struct.ObjectMapEntry.html\" title=\"struct object::read::ObjectMapEntry\">ObjectMapEntry</a>&lt;'data&gt;","synthetic":true,"types":["object::read::ObjectMapEntry"]},{"text":"impl&lt;'data&gt; Freeze for <a class=\"struct\" href=\"object/read/struct.Import.html\" title=\"struct object::read::Import\">Import</a>&lt;'data&gt;","synthetic":true,"types":["object::read::Import"]},{"text":"impl&lt;'data&gt; Freeze for <a class=\"struct\" href=\"object/read/struct.Export.html\" title=\"struct object::read::Export\">Export</a>&lt;'data&gt;","synthetic":true,"types":["object::read::Export"]},{"text":"impl&lt;'data&gt; Freeze for <a class=\"struct\" href=\"object/read/struct.CodeView.html\" title=\"struct object::read::CodeView\">CodeView</a>&lt;'data&gt;","synthetic":true,"types":["object::read::CodeView"]},{"text":"impl Freeze for <a class=\"enum\" href=\"object/read/enum.RelocationTarget.html\" title=\"enum object::read::RelocationTarget\">RelocationTarget</a>","synthetic":true,"types":["object::read::RelocationTarget"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/read/struct.Relocation.html\" title=\"struct object::read::Relocation\">Relocation</a>","synthetic":true,"types":["object::read::Relocation"]},{"text":"impl Freeze for <a class=\"enum\" href=\"object/read/enum.CompressionFormat.html\" title=\"enum object::read::CompressionFormat\">CompressionFormat</a>","synthetic":true,"types":["object::read::CompressionFormat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/read/struct.CompressedFileRange.html\" title=\"struct object::read::CompressedFileRange\">CompressedFileRange</a>","synthetic":true,"types":["object::read::CompressedFileRange"]},{"text":"impl&lt;'data&gt; Freeze for <a class=\"struct\" href=\"object/read/struct.CompressedData.html\" title=\"struct object::read::CompressedData\">CompressedData</a>&lt;'data&gt;","synthetic":true,"types":["object::read::CompressedData"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/archive/struct.Header.html\" title=\"struct object::archive::Header\">Header</a>","synthetic":true,"types":["object::archive::Header"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/elf/struct.FileHeader32.html\" title=\"struct object::elf::FileHeader32\">FileHeader32</a>&lt;E&gt;","synthetic":true,"types":["object::elf::FileHeader32"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/elf/struct.FileHeader64.html\" title=\"struct object::elf::FileHeader64\">FileHeader64</a>&lt;E&gt;","synthetic":true,"types":["object::elf::FileHeader64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/elf/struct.Ident.html\" title=\"struct object::elf::Ident\">Ident</a>","synthetic":true,"types":["object::elf::Ident"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/elf/struct.SectionHeader32.html\" title=\"struct object::elf::SectionHeader32\">SectionHeader32</a>&lt;E&gt;","synthetic":true,"types":["object::elf::SectionHeader32"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/elf/struct.SectionHeader64.html\" title=\"struct object::elf::SectionHeader64\">SectionHeader64</a>&lt;E&gt;","synthetic":true,"types":["object::elf::SectionHeader64"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/elf/struct.CompressionHeader32.html\" title=\"struct object::elf::CompressionHeader32\">CompressionHeader32</a>&lt;E&gt;","synthetic":true,"types":["object::elf::CompressionHeader32"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/elf/struct.CompressionHeader64.html\" title=\"struct object::elf::CompressionHeader64\">CompressionHeader64</a>&lt;E&gt;","synthetic":true,"types":["object::elf::CompressionHeader64"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/elf/struct.Sym32.html\" title=\"struct object::elf::Sym32\">Sym32</a>&lt;E&gt;","synthetic":true,"types":["object::elf::Sym32"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/elf/struct.Sym64.html\" title=\"struct object::elf::Sym64\">Sym64</a>&lt;E&gt;","synthetic":true,"types":["object::elf::Sym64"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/elf/struct.Syminfo32.html\" title=\"struct object::elf::Syminfo32\">Syminfo32</a>&lt;E&gt;","synthetic":true,"types":["object::elf::Syminfo32"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/elf/struct.Syminfo64.html\" title=\"struct object::elf::Syminfo64\">Syminfo64</a>&lt;E&gt;","synthetic":true,"types":["object::elf::Syminfo64"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/elf/struct.Rel32.html\" title=\"struct object::elf::Rel32\">Rel32</a>&lt;E&gt;","synthetic":true,"types":["object::elf::Rel32"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/elf/struct.Rela32.html\" title=\"struct object::elf::Rela32\">Rela32</a>&lt;E&gt;","synthetic":true,"types":["object::elf::Rela32"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/elf/struct.Rel64.html\" title=\"struct object::elf::Rel64\">Rel64</a>&lt;E&gt;","synthetic":true,"types":["object::elf::Rel64"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/elf/struct.Rela64.html\" title=\"struct object::elf::Rela64\">Rela64</a>&lt;E&gt;","synthetic":true,"types":["object::elf::Rela64"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/elf/struct.ProgramHeader32.html\" title=\"struct object::elf::ProgramHeader32\">ProgramHeader32</a>&lt;E&gt;","synthetic":true,"types":["object::elf::ProgramHeader32"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/elf/struct.ProgramHeader64.html\" title=\"struct object::elf::ProgramHeader64\">ProgramHeader64</a>&lt;E&gt;","synthetic":true,"types":["object::elf::ProgramHeader64"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/elf/struct.Dyn32.html\" title=\"struct object::elf::Dyn32\">Dyn32</a>&lt;E&gt;","synthetic":true,"types":["object::elf::Dyn32"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/elf/struct.Dyn64.html\" title=\"struct object::elf::Dyn64\">Dyn64</a>&lt;E&gt;","synthetic":true,"types":["object::elf::Dyn64"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/elf/struct.Versym.html\" title=\"struct object::elf::Versym\">Versym</a>&lt;E&gt;","synthetic":true,"types":["object::elf::Versym"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/elf/struct.Verdef.html\" title=\"struct object::elf::Verdef\">Verdef</a>&lt;E&gt;","synthetic":true,"types":["object::elf::Verdef"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/elf/struct.Verdaux.html\" title=\"struct object::elf::Verdaux\">Verdaux</a>&lt;E&gt;","synthetic":true,"types":["object::elf::Verdaux"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/elf/struct.Verneed.html\" title=\"struct object::elf::Verneed\">Verneed</a>&lt;E&gt;","synthetic":true,"types":["object::elf::Verneed"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/elf/struct.Vernaux.html\" title=\"struct object::elf::Vernaux\">Vernaux</a>&lt;E&gt;","synthetic":true,"types":["object::elf::Vernaux"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/elf/struct.NoteHeader32.html\" title=\"struct object::elf::NoteHeader32\">NoteHeader32</a>&lt;E&gt;","synthetic":true,"types":["object::elf::NoteHeader32"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/elf/struct.NoteHeader64.html\" title=\"struct object::elf::NoteHeader64\">NoteHeader64</a>&lt;E&gt;","synthetic":true,"types":["object::elf::NoteHeader64"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/elf/struct.HashHeader.html\" title=\"struct object::elf::HashHeader\">HashHeader</a>&lt;E&gt;","synthetic":true,"types":["object::elf::HashHeader"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/elf/struct.GnuHashHeader.html\" title=\"struct object::elf::GnuHashHeader\">GnuHashHeader</a>&lt;E&gt;","synthetic":true,"types":["object::elf::GnuHashHeader"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.DyldCacheHeader.html\" title=\"struct object::macho::DyldCacheHeader\">DyldCacheHeader</a>&lt;E&gt;","synthetic":true,"types":["object::macho::DyldCacheHeader"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.DyldCacheMappingInfo.html\" title=\"struct object::macho::DyldCacheMappingInfo\">DyldCacheMappingInfo</a>&lt;E&gt;","synthetic":true,"types":["object::macho::DyldCacheMappingInfo"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.DyldCacheImageInfo.html\" title=\"struct object::macho::DyldCacheImageInfo\">DyldCacheImageInfo</a>&lt;E&gt;","synthetic":true,"types":["object::macho::DyldCacheImageInfo"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.DyldSubCacheInfo.html\" title=\"struct object::macho::DyldSubCacheInfo\">DyldSubCacheInfo</a>&lt;E&gt;","synthetic":true,"types":["object::macho::DyldSubCacheInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/macho/struct.FatHeader.html\" title=\"struct object::macho::FatHeader\">FatHeader</a>","synthetic":true,"types":["object::macho::FatHeader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/macho/struct.FatArch32.html\" title=\"struct object::macho::FatArch32\">FatArch32</a>","synthetic":true,"types":["object::macho::FatArch32"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/macho/struct.FatArch64.html\" title=\"struct object::macho::FatArch64\">FatArch64</a>","synthetic":true,"types":["object::macho::FatArch64"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.MachHeader32.html\" title=\"struct object::macho::MachHeader32\">MachHeader32</a>&lt;E&gt;","synthetic":true,"types":["object::macho::MachHeader32"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.MachHeader64.html\" title=\"struct object::macho::MachHeader64\">MachHeader64</a>&lt;E&gt;","synthetic":true,"types":["object::macho::MachHeader64"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.LoadCommand.html\" title=\"struct object::macho::LoadCommand\">LoadCommand</a>&lt;E&gt;","synthetic":true,"types":["object::macho::LoadCommand"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.LcStr.html\" title=\"struct object::macho::LcStr\">LcStr</a>&lt;E&gt;","synthetic":true,"types":["object::macho::LcStr"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.SegmentCommand32.html\" title=\"struct object::macho::SegmentCommand32\">SegmentCommand32</a>&lt;E&gt;","synthetic":true,"types":["object::macho::SegmentCommand32"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.SegmentCommand64.html\" title=\"struct object::macho::SegmentCommand64\">SegmentCommand64</a>&lt;E&gt;","synthetic":true,"types":["object::macho::SegmentCommand64"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.Section32.html\" title=\"struct object::macho::Section32\">Section32</a>&lt;E&gt;","synthetic":true,"types":["object::macho::Section32"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.Section64.html\" title=\"struct object::macho::Section64\">Section64</a>&lt;E&gt;","synthetic":true,"types":["object::macho::Section64"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.Fvmlib.html\" title=\"struct object::macho::Fvmlib\">Fvmlib</a>&lt;E&gt;","synthetic":true,"types":["object::macho::Fvmlib"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.FvmlibCommand.html\" title=\"struct object::macho::FvmlibCommand\">FvmlibCommand</a>&lt;E&gt;","synthetic":true,"types":["object::macho::FvmlibCommand"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.Dylib.html\" title=\"struct object::macho::Dylib\">Dylib</a>&lt;E&gt;","synthetic":true,"types":["object::macho::Dylib"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.DylibCommand.html\" title=\"struct object::macho::DylibCommand\">DylibCommand</a>&lt;E&gt;","synthetic":true,"types":["object::macho::DylibCommand"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.SubFrameworkCommand.html\" title=\"struct object::macho::SubFrameworkCommand\">SubFrameworkCommand</a>&lt;E&gt;","synthetic":true,"types":["object::macho::SubFrameworkCommand"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.SubClientCommand.html\" title=\"struct object::macho::SubClientCommand\">SubClientCommand</a>&lt;E&gt;","synthetic":true,"types":["object::macho::SubClientCommand"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.SubUmbrellaCommand.html\" title=\"struct object::macho::SubUmbrellaCommand\">SubUmbrellaCommand</a>&lt;E&gt;","synthetic":true,"types":["object::macho::SubUmbrellaCommand"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.SubLibraryCommand.html\" title=\"struct object::macho::SubLibraryCommand\">SubLibraryCommand</a>&lt;E&gt;","synthetic":true,"types":["object::macho::SubLibraryCommand"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.PreboundDylibCommand.html\" title=\"struct object::macho::PreboundDylibCommand\">PreboundDylibCommand</a>&lt;E&gt;","synthetic":true,"types":["object::macho::PreboundDylibCommand"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.DylinkerCommand.html\" title=\"struct object::macho::DylinkerCommand\">DylinkerCommand</a>&lt;E&gt;","synthetic":true,"types":["object::macho::DylinkerCommand"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.ThreadCommand.html\" title=\"struct object::macho::ThreadCommand\">ThreadCommand</a>&lt;E&gt;","synthetic":true,"types":["object::macho::ThreadCommand"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.RoutinesCommand32.html\" title=\"struct object::macho::RoutinesCommand32\">RoutinesCommand32</a>&lt;E&gt;","synthetic":true,"types":["object::macho::RoutinesCommand32"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.RoutinesCommand64.html\" title=\"struct object::macho::RoutinesCommand64\">RoutinesCommand64</a>&lt;E&gt;","synthetic":true,"types":["object::macho::RoutinesCommand64"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.SymtabCommand.html\" title=\"struct object::macho::SymtabCommand\">SymtabCommand</a>&lt;E&gt;","synthetic":true,"types":["object::macho::SymtabCommand"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.DysymtabCommand.html\" title=\"struct object::macho::DysymtabCommand\">DysymtabCommand</a>&lt;E&gt;","synthetic":true,"types":["object::macho::DysymtabCommand"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.DylibTableOfContents.html\" title=\"struct object::macho::DylibTableOfContents\">DylibTableOfContents</a>&lt;E&gt;","synthetic":true,"types":["object::macho::DylibTableOfContents"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.DylibModule32.html\" title=\"struct object::macho::DylibModule32\">DylibModule32</a>&lt;E&gt;","synthetic":true,"types":["object::macho::DylibModule32"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.DylibModule64.html\" title=\"struct object::macho::DylibModule64\">DylibModule64</a>&lt;E&gt;","synthetic":true,"types":["object::macho::DylibModule64"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.DylibReference.html\" title=\"struct object::macho::DylibReference\">DylibReference</a>&lt;E&gt;","synthetic":true,"types":["object::macho::DylibReference"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.TwolevelHintsCommand.html\" title=\"struct object::macho::TwolevelHintsCommand\">TwolevelHintsCommand</a>&lt;E&gt;","synthetic":true,"types":["object::macho::TwolevelHintsCommand"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.TwolevelHint.html\" title=\"struct object::macho::TwolevelHint\">TwolevelHint</a>&lt;E&gt;","synthetic":true,"types":["object::macho::TwolevelHint"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.PrebindCksumCommand.html\" title=\"struct object::macho::PrebindCksumCommand\">PrebindCksumCommand</a>&lt;E&gt;","synthetic":true,"types":["object::macho::PrebindCksumCommand"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.UuidCommand.html\" title=\"struct object::macho::UuidCommand\">UuidCommand</a>&lt;E&gt;","synthetic":true,"types":["object::macho::UuidCommand"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.RpathCommand.html\" title=\"struct object::macho::RpathCommand\">RpathCommand</a>&lt;E&gt;","synthetic":true,"types":["object::macho::RpathCommand"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.LinkeditDataCommand.html\" title=\"struct object::macho::LinkeditDataCommand\">LinkeditDataCommand</a>&lt;E&gt;","synthetic":true,"types":["object::macho::LinkeditDataCommand"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.FilesetEntryCommand.html\" title=\"struct object::macho::FilesetEntryCommand\">FilesetEntryCommand</a>&lt;E&gt;","synthetic":true,"types":["object::macho::FilesetEntryCommand"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.EncryptionInfoCommand32.html\" title=\"struct object::macho::EncryptionInfoCommand32\">EncryptionInfoCommand32</a>&lt;E&gt;","synthetic":true,"types":["object::macho::EncryptionInfoCommand32"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.EncryptionInfoCommand64.html\" title=\"struct object::macho::EncryptionInfoCommand64\">EncryptionInfoCommand64</a>&lt;E&gt;","synthetic":true,"types":["object::macho::EncryptionInfoCommand64"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.VersionMinCommand.html\" title=\"struct object::macho::VersionMinCommand\">VersionMinCommand</a>&lt;E&gt;","synthetic":true,"types":["object::macho::VersionMinCommand"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.BuildVersionCommand.html\" title=\"struct object::macho::BuildVersionCommand\">BuildVersionCommand</a>&lt;E&gt;","synthetic":true,"types":["object::macho::BuildVersionCommand"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.BuildToolVersion.html\" title=\"struct object::macho::BuildToolVersion\">BuildToolVersion</a>&lt;E&gt;","synthetic":true,"types":["object::macho::BuildToolVersion"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.DyldInfoCommand.html\" title=\"struct object::macho::DyldInfoCommand\">DyldInfoCommand</a>&lt;E&gt;","synthetic":true,"types":["object::macho::DyldInfoCommand"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.LinkerOptionCommand.html\" title=\"struct object::macho::LinkerOptionCommand\">LinkerOptionCommand</a>&lt;E&gt;","synthetic":true,"types":["object::macho::LinkerOptionCommand"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.SymsegCommand.html\" title=\"struct object::macho::SymsegCommand\">SymsegCommand</a>&lt;E&gt;","synthetic":true,"types":["object::macho::SymsegCommand"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.IdentCommand.html\" title=\"struct object::macho::IdentCommand\">IdentCommand</a>&lt;E&gt;","synthetic":true,"types":["object::macho::IdentCommand"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.FvmfileCommand.html\" title=\"struct object::macho::FvmfileCommand\">FvmfileCommand</a>&lt;E&gt;","synthetic":true,"types":["object::macho::FvmfileCommand"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.EntryPointCommand.html\" title=\"struct object::macho::EntryPointCommand\">EntryPointCommand</a>&lt;E&gt;","synthetic":true,"types":["object::macho::EntryPointCommand"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.SourceVersionCommand.html\" title=\"struct object::macho::SourceVersionCommand\">SourceVersionCommand</a>&lt;E&gt;","synthetic":true,"types":["object::macho::SourceVersionCommand"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.DataInCodeEntry.html\" title=\"struct object::macho::DataInCodeEntry\">DataInCodeEntry</a>&lt;E&gt;","synthetic":true,"types":["object::macho::DataInCodeEntry"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.NoteCommand.html\" title=\"struct object::macho::NoteCommand\">NoteCommand</a>&lt;E&gt;","synthetic":true,"types":["object::macho::NoteCommand"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.Nlist32.html\" title=\"struct object::macho::Nlist32\">Nlist32</a>&lt;E&gt;","synthetic":true,"types":["object::macho::Nlist32"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.Nlist64.html\" title=\"struct object::macho::Nlist64\">Nlist64</a>&lt;E&gt;","synthetic":true,"types":["object::macho::Nlist64"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"object/macho/struct.Relocation.html\" title=\"struct object::macho::Relocation\">Relocation</a>&lt;E&gt;","synthetic":true,"types":["object::macho::Relocation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/macho/struct.RelocationInfo.html\" title=\"struct object::macho::RelocationInfo\">RelocationInfo</a>","synthetic":true,"types":["object::macho::RelocationInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/macho/struct.ScatteredRelocationInfo.html\" title=\"struct object::macho::ScatteredRelocationInfo\">ScatteredRelocationInfo</a>","synthetic":true,"types":["object::macho::ScatteredRelocationInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageDosHeader.html\" title=\"struct object::pe::ImageDosHeader\">ImageDosHeader</a>","synthetic":true,"types":["object::pe::ImageDosHeader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageOs2Header.html\" title=\"struct object::pe::ImageOs2Header\">ImageOs2Header</a>","synthetic":true,"types":["object::pe::ImageOs2Header"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageVxdHeader.html\" title=\"struct object::pe::ImageVxdHeader\">ImageVxdHeader</a>","synthetic":true,"types":["object::pe::ImageVxdHeader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.MaskedRichHeaderEntry.html\" title=\"struct object::pe::MaskedRichHeaderEntry\">MaskedRichHeaderEntry</a>","synthetic":true,"types":["object::pe::MaskedRichHeaderEntry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageFileHeader.html\" title=\"struct object::pe::ImageFileHeader\">ImageFileHeader</a>","synthetic":true,"types":["object::pe::ImageFileHeader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageDataDirectory.html\" title=\"struct object::pe::ImageDataDirectory\">ImageDataDirectory</a>","synthetic":true,"types":["object::pe::ImageDataDirectory"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageOptionalHeader32.html\" title=\"struct object::pe::ImageOptionalHeader32\">ImageOptionalHeader32</a>","synthetic":true,"types":["object::pe::ImageOptionalHeader32"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageRomOptionalHeader.html\" title=\"struct object::pe::ImageRomOptionalHeader\">ImageRomOptionalHeader</a>","synthetic":true,"types":["object::pe::ImageRomOptionalHeader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageOptionalHeader64.html\" title=\"struct object::pe::ImageOptionalHeader64\">ImageOptionalHeader64</a>","synthetic":true,"types":["object::pe::ImageOptionalHeader64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageNtHeaders64.html\" title=\"struct object::pe::ImageNtHeaders64\">ImageNtHeaders64</a>","synthetic":true,"types":["object::pe::ImageNtHeaders64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageNtHeaders32.html\" title=\"struct object::pe::ImageNtHeaders32\">ImageNtHeaders32</a>","synthetic":true,"types":["object::pe::ImageNtHeaders32"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageRomHeaders.html\" title=\"struct object::pe::ImageRomHeaders\">ImageRomHeaders</a>","synthetic":true,"types":["object::pe::ImageRomHeaders"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.Guid.html\" title=\"struct object::pe::Guid\">Guid</a>","synthetic":true,"types":["object::pe::Guid"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.AnonObjectHeader.html\" title=\"struct object::pe::AnonObjectHeader\">AnonObjectHeader</a>","synthetic":true,"types":["object::pe::AnonObjectHeader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.AnonObjectHeaderV2.html\" title=\"struct object::pe::AnonObjectHeaderV2\">AnonObjectHeaderV2</a>","synthetic":true,"types":["object::pe::AnonObjectHeaderV2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.AnonObjectHeaderBigobj.html\" title=\"struct object::pe::AnonObjectHeaderBigobj\">AnonObjectHeaderBigobj</a>","synthetic":true,"types":["object::pe::AnonObjectHeaderBigobj"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageSectionHeader.html\" title=\"struct object::pe::ImageSectionHeader\">ImageSectionHeader</a>","synthetic":true,"types":["object::pe::ImageSectionHeader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageSymbol.html\" title=\"struct object::pe::ImageSymbol\">ImageSymbol</a>","synthetic":true,"types":["object::pe::ImageSymbol"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageSymbolBytes.html\" title=\"struct object::pe::ImageSymbolBytes\">ImageSymbolBytes</a>","synthetic":true,"types":["object::pe::ImageSymbolBytes"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageSymbolEx.html\" title=\"struct object::pe::ImageSymbolEx\">ImageSymbolEx</a>","synthetic":true,"types":["object::pe::ImageSymbolEx"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageSymbolExBytes.html\" title=\"struct object::pe::ImageSymbolExBytes\">ImageSymbolExBytes</a>","synthetic":true,"types":["object::pe::ImageSymbolExBytes"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageAuxSymbolTokenDef.html\" title=\"struct object::pe::ImageAuxSymbolTokenDef\">ImageAuxSymbolTokenDef</a>","synthetic":true,"types":["object::pe::ImageAuxSymbolTokenDef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageAuxSymbolFunction.html\" title=\"struct object::pe::ImageAuxSymbolFunction\">ImageAuxSymbolFunction</a>","synthetic":true,"types":["object::pe::ImageAuxSymbolFunction"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageAuxSymbolFunctionBeginEnd.html\" title=\"struct object::pe::ImageAuxSymbolFunctionBeginEnd\">ImageAuxSymbolFunctionBeginEnd</a>","synthetic":true,"types":["object::pe::ImageAuxSymbolFunctionBeginEnd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageAuxSymbolWeak.html\" title=\"struct object::pe::ImageAuxSymbolWeak\">ImageAuxSymbolWeak</a>","synthetic":true,"types":["object::pe::ImageAuxSymbolWeak"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageAuxSymbolSection.html\" title=\"struct object::pe::ImageAuxSymbolSection\">ImageAuxSymbolSection</a>","synthetic":true,"types":["object::pe::ImageAuxSymbolSection"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageAuxSymbolCrc.html\" title=\"struct object::pe::ImageAuxSymbolCrc\">ImageAuxSymbolCrc</a>","synthetic":true,"types":["object::pe::ImageAuxSymbolCrc"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageRelocation.html\" title=\"struct object::pe::ImageRelocation\">ImageRelocation</a>","synthetic":true,"types":["object::pe::ImageRelocation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageLinenumber.html\" title=\"struct object::pe::ImageLinenumber\">ImageLinenumber</a>","synthetic":true,"types":["object::pe::ImageLinenumber"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageBaseRelocation.html\" title=\"struct object::pe::ImageBaseRelocation\">ImageBaseRelocation</a>","synthetic":true,"types":["object::pe::ImageBaseRelocation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageArchiveMemberHeader.html\" title=\"struct object::pe::ImageArchiveMemberHeader\">ImageArchiveMemberHeader</a>","synthetic":true,"types":["object::pe::ImageArchiveMemberHeader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageExportDirectory.html\" title=\"struct object::pe::ImageExportDirectory\">ImageExportDirectory</a>","synthetic":true,"types":["object::pe::ImageExportDirectory"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageImportByName.html\" title=\"struct object::pe::ImageImportByName\">ImageImportByName</a>","synthetic":true,"types":["object::pe::ImageImportByName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageThunkData64.html\" title=\"struct object::pe::ImageThunkData64\">ImageThunkData64</a>","synthetic":true,"types":["object::pe::ImageThunkData64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageThunkData32.html\" title=\"struct object::pe::ImageThunkData32\">ImageThunkData32</a>","synthetic":true,"types":["object::pe::ImageThunkData32"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageTlsDirectory64.html\" title=\"struct object::pe::ImageTlsDirectory64\">ImageTlsDirectory64</a>","synthetic":true,"types":["object::pe::ImageTlsDirectory64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageTlsDirectory32.html\" title=\"struct object::pe::ImageTlsDirectory32\">ImageTlsDirectory32</a>","synthetic":true,"types":["object::pe::ImageTlsDirectory32"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageImportDescriptor.html\" title=\"struct object::pe::ImageImportDescriptor\">ImageImportDescriptor</a>","synthetic":true,"types":["object::pe::ImageImportDescriptor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageBoundImportDescriptor.html\" title=\"struct object::pe::ImageBoundImportDescriptor\">ImageBoundImportDescriptor</a>","synthetic":true,"types":["object::pe::ImageBoundImportDescriptor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageBoundForwarderRef.html\" title=\"struct object::pe::ImageBoundForwarderRef\">ImageBoundForwarderRef</a>","synthetic":true,"types":["object::pe::ImageBoundForwarderRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageDelayloadDescriptor.html\" title=\"struct object::pe::ImageDelayloadDescriptor\">ImageDelayloadDescriptor</a>","synthetic":true,"types":["object::pe::ImageDelayloadDescriptor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageResourceDirectory.html\" title=\"struct object::pe::ImageResourceDirectory\">ImageResourceDirectory</a>","synthetic":true,"types":["object::pe::ImageResourceDirectory"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageResourceDirectoryEntry.html\" title=\"struct object::pe::ImageResourceDirectoryEntry\">ImageResourceDirectoryEntry</a>","synthetic":true,"types":["object::pe::ImageResourceDirectoryEntry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageResourceDirectoryString.html\" title=\"struct object::pe::ImageResourceDirectoryString\">ImageResourceDirectoryString</a>","synthetic":true,"types":["object::pe::ImageResourceDirectoryString"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageResourceDirStringU.html\" title=\"struct object::pe::ImageResourceDirStringU\">ImageResourceDirStringU</a>","synthetic":true,"types":["object::pe::ImageResourceDirStringU"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageResourceDataEntry.html\" title=\"struct object::pe::ImageResourceDataEntry\">ImageResourceDataEntry</a>","synthetic":true,"types":["object::pe::ImageResourceDataEntry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageLoadConfigCodeIntegrity.html\" title=\"struct object::pe::ImageLoadConfigCodeIntegrity\">ImageLoadConfigCodeIntegrity</a>","synthetic":true,"types":["object::pe::ImageLoadConfigCodeIntegrity"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageDynamicRelocationTable.html\" title=\"struct object::pe::ImageDynamicRelocationTable\">ImageDynamicRelocationTable</a>","synthetic":true,"types":["object::pe::ImageDynamicRelocationTable"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageDynamicRelocation32.html\" title=\"struct object::pe::ImageDynamicRelocation32\">ImageDynamicRelocation32</a>","synthetic":true,"types":["object::pe::ImageDynamicRelocation32"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageDynamicRelocation64.html\" title=\"struct object::pe::ImageDynamicRelocation64\">ImageDynamicRelocation64</a>","synthetic":true,"types":["object::pe::ImageDynamicRelocation64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageDynamicRelocation32V2.html\" title=\"struct object::pe::ImageDynamicRelocation32V2\">ImageDynamicRelocation32V2</a>","synthetic":true,"types":["object::pe::ImageDynamicRelocation32V2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageDynamicRelocation64V2.html\" title=\"struct object::pe::ImageDynamicRelocation64V2\">ImageDynamicRelocation64V2</a>","synthetic":true,"types":["object::pe::ImageDynamicRelocation64V2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImagePrologueDynamicRelocationHeader.html\" title=\"struct object::pe::ImagePrologueDynamicRelocationHeader\">ImagePrologueDynamicRelocationHeader</a>","synthetic":true,"types":["object::pe::ImagePrologueDynamicRelocationHeader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageEpilogueDynamicRelocationHeader.html\" title=\"struct object::pe::ImageEpilogueDynamicRelocationHeader\">ImageEpilogueDynamicRelocationHeader</a>","synthetic":true,"types":["object::pe::ImageEpilogueDynamicRelocationHeader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageLoadConfigDirectory32.html\" title=\"struct object::pe::ImageLoadConfigDirectory32\">ImageLoadConfigDirectory32</a>","synthetic":true,"types":["object::pe::ImageLoadConfigDirectory32"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageLoadConfigDirectory64.html\" title=\"struct object::pe::ImageLoadConfigDirectory64\">ImageLoadConfigDirectory64</a>","synthetic":true,"types":["object::pe::ImageLoadConfigDirectory64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageHotPatchInfo.html\" title=\"struct object::pe::ImageHotPatchInfo\">ImageHotPatchInfo</a>","synthetic":true,"types":["object::pe::ImageHotPatchInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageHotPatchBase.html\" title=\"struct object::pe::ImageHotPatchBase\">ImageHotPatchBase</a>","synthetic":true,"types":["object::pe::ImageHotPatchBase"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageHotPatchHashes.html\" title=\"struct object::pe::ImageHotPatchHashes\">ImageHotPatchHashes</a>","synthetic":true,"types":["object::pe::ImageHotPatchHashes"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageArmRuntimeFunctionEntry.html\" title=\"struct object::pe::ImageArmRuntimeFunctionEntry\">ImageArmRuntimeFunctionEntry</a>","synthetic":true,"types":["object::pe::ImageArmRuntimeFunctionEntry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageArm64RuntimeFunctionEntry.html\" title=\"struct object::pe::ImageArm64RuntimeFunctionEntry\">ImageArm64RuntimeFunctionEntry</a>","synthetic":true,"types":["object::pe::ImageArm64RuntimeFunctionEntry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageAlpha64RuntimeFunctionEntry.html\" title=\"struct object::pe::ImageAlpha64RuntimeFunctionEntry\">ImageAlpha64RuntimeFunctionEntry</a>","synthetic":true,"types":["object::pe::ImageAlpha64RuntimeFunctionEntry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageAlphaRuntimeFunctionEntry.html\" title=\"struct object::pe::ImageAlphaRuntimeFunctionEntry\">ImageAlphaRuntimeFunctionEntry</a>","synthetic":true,"types":["object::pe::ImageAlphaRuntimeFunctionEntry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageRuntimeFunctionEntry.html\" title=\"struct object::pe::ImageRuntimeFunctionEntry\">ImageRuntimeFunctionEntry</a>","synthetic":true,"types":["object::pe::ImageRuntimeFunctionEntry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageEnclaveConfig32.html\" title=\"struct object::pe::ImageEnclaveConfig32\">ImageEnclaveConfig32</a>","synthetic":true,"types":["object::pe::ImageEnclaveConfig32"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageEnclaveConfig64.html\" title=\"struct object::pe::ImageEnclaveConfig64\">ImageEnclaveConfig64</a>","synthetic":true,"types":["object::pe::ImageEnclaveConfig64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageEnclaveImport.html\" title=\"struct object::pe::ImageEnclaveImport\">ImageEnclaveImport</a>","synthetic":true,"types":["object::pe::ImageEnclaveImport"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageDebugDirectory.html\" title=\"struct object::pe::ImageDebugDirectory\">ImageDebugDirectory</a>","synthetic":true,"types":["object::pe::ImageDebugDirectory"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageCoffSymbolsHeader.html\" title=\"struct object::pe::ImageCoffSymbolsHeader\">ImageCoffSymbolsHeader</a>","synthetic":true,"types":["object::pe::ImageCoffSymbolsHeader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageDebugMisc.html\" title=\"struct object::pe::ImageDebugMisc\">ImageDebugMisc</a>","synthetic":true,"types":["object::pe::ImageDebugMisc"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageFunctionEntry.html\" title=\"struct object::pe::ImageFunctionEntry\">ImageFunctionEntry</a>","synthetic":true,"types":["object::pe::ImageFunctionEntry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageFunctionEntry64.html\" title=\"struct object::pe::ImageFunctionEntry64\">ImageFunctionEntry64</a>","synthetic":true,"types":["object::pe::ImageFunctionEntry64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageSeparateDebugHeader.html\" title=\"struct object::pe::ImageSeparateDebugHeader\">ImageSeparateDebugHeader</a>","synthetic":true,"types":["object::pe::ImageSeparateDebugHeader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.NonPagedDebugInfo.html\" title=\"struct object::pe::NonPagedDebugInfo\">NonPagedDebugInfo</a>","synthetic":true,"types":["object::pe::NonPagedDebugInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageArchitectureEntry.html\" title=\"struct object::pe::ImageArchitectureEntry\">ImageArchitectureEntry</a>","synthetic":true,"types":["object::pe::ImageArchitectureEntry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImportObjectHeader.html\" title=\"struct object::pe::ImportObjectHeader\">ImportObjectHeader</a>","synthetic":true,"types":["object::pe::ImportObjectHeader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"object/pe/struct.ImageCor20Header.html\" title=\"struct object::pe::ImageCor20Header\">ImageCor20Header</a>","synthetic":true,"types":["object::pe::ImageCor20Header"]}];
implementors["once_cell"] = [{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"once_cell/unsync/struct.OnceCell.html\" title=\"struct once_cell::unsync::OnceCell\">OnceCell</a>&lt;T&gt;","synthetic":true,"types":["once_cell::unsync::OnceCell"]},{"text":"impl&lt;T, F&nbsp;=&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.61.0/std/primitive.fn.html\">fn</a>() -&gt; T&gt; !Freeze for <a class=\"struct\" href=\"once_cell/unsync/struct.Lazy.html\" title=\"struct once_cell::unsync::Lazy\">Lazy</a>&lt;T, F&gt;","synthetic":true,"types":["once_cell::unsync::Lazy"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"once_cell/sync/struct.OnceCell.html\" title=\"struct once_cell::sync::OnceCell\">OnceCell</a>&lt;T&gt;","synthetic":true,"types":["once_cell::sync::OnceCell"]},{"text":"impl&lt;T, F&nbsp;=&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.61.0/std/primitive.fn.html\">fn</a>() -&gt; T&gt; !Freeze for <a class=\"struct\" href=\"once_cell/sync/struct.Lazy.html\" title=\"struct once_cell::sync::Lazy\">Lazy</a>&lt;T, F&gt;","synthetic":true,"types":["once_cell::sync::Lazy"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"once_cell/race/struct.OnceBox.html\" title=\"struct once_cell::race::OnceBox\">OnceBox</a>&lt;T&gt;","synthetic":true,"types":["once_cell::race::once_box::OnceBox"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"once_cell/race/struct.OnceNonZeroUsize.html\" title=\"struct once_cell::race::OnceNonZeroUsize\">OnceNonZeroUsize</a>","synthetic":true,"types":["once_cell::race::OnceNonZeroUsize"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"once_cell/race/struct.OnceBool.html\" title=\"struct once_cell::race::OnceBool\">OnceBool</a>","synthetic":true,"types":["once_cell::race::OnceBool"]}];
implementors["openssl"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/aes/struct.KeyError.html\" title=\"struct openssl::aes::KeyError\">KeyError</a>","synthetic":true,"types":["openssl::aes::KeyError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/aes/struct.AesKey.html\" title=\"struct openssl::aes::AesKey\">AesKey</a>","synthetic":true,"types":["openssl::aes::AesKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/asn1/struct.Asn1GeneralizedTime.html\" title=\"struct openssl::asn1::Asn1GeneralizedTime\">Asn1GeneralizedTime</a>","synthetic":true,"types":["openssl::asn1::Asn1GeneralizedTime"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/asn1/struct.Asn1GeneralizedTimeRef.html\" title=\"struct openssl::asn1::Asn1GeneralizedTimeRef\">Asn1GeneralizedTimeRef</a>","synthetic":true,"types":["openssl::asn1::Asn1GeneralizedTimeRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/asn1/struct.Asn1Type.html\" title=\"struct openssl::asn1::Asn1Type\">Asn1Type</a>","synthetic":true,"types":["openssl::asn1::Asn1Type"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/asn1/struct.TimeDiff.html\" title=\"struct openssl::asn1::TimeDiff\">TimeDiff</a>","synthetic":true,"types":["openssl::asn1::TimeDiff"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/asn1/struct.Asn1Time.html\" title=\"struct openssl::asn1::Asn1Time\">Asn1Time</a>","synthetic":true,"types":["openssl::asn1::Asn1Time"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/asn1/struct.Asn1TimeRef.html\" title=\"struct openssl::asn1::Asn1TimeRef\">Asn1TimeRef</a>","synthetic":true,"types":["openssl::asn1::Asn1TimeRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/asn1/struct.Asn1String.html\" title=\"struct openssl::asn1::Asn1String\">Asn1String</a>","synthetic":true,"types":["openssl::asn1::Asn1String"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/asn1/struct.Asn1StringRef.html\" title=\"struct openssl::asn1::Asn1StringRef\">Asn1StringRef</a>","synthetic":true,"types":["openssl::asn1::Asn1StringRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/asn1/struct.Asn1Integer.html\" title=\"struct openssl::asn1::Asn1Integer\">Asn1Integer</a>","synthetic":true,"types":["openssl::asn1::Asn1Integer"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/asn1/struct.Asn1IntegerRef.html\" title=\"struct openssl::asn1::Asn1IntegerRef\">Asn1IntegerRef</a>","synthetic":true,"types":["openssl::asn1::Asn1IntegerRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/asn1/struct.Asn1BitString.html\" title=\"struct openssl::asn1::Asn1BitString\">Asn1BitString</a>","synthetic":true,"types":["openssl::asn1::Asn1BitString"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/asn1/struct.Asn1BitStringRef.html\" title=\"struct openssl::asn1::Asn1BitStringRef\">Asn1BitStringRef</a>","synthetic":true,"types":["openssl::asn1::Asn1BitStringRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/asn1/struct.Asn1Object.html\" title=\"struct openssl::asn1::Asn1Object\">Asn1Object</a>","synthetic":true,"types":["openssl::asn1::Asn1Object"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/asn1/struct.Asn1ObjectRef.html\" title=\"struct openssl::asn1::Asn1ObjectRef\">Asn1ObjectRef</a>","synthetic":true,"types":["openssl::asn1::Asn1ObjectRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/bn/struct.MsbOption.html\" title=\"struct openssl::bn::MsbOption\">MsbOption</a>","synthetic":true,"types":["openssl::bn::MsbOption"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/bn/struct.BigNumContext.html\" title=\"struct openssl::bn::BigNumContext\">BigNumContext</a>","synthetic":true,"types":["openssl::bn::BigNumContext"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/bn/struct.BigNumContextRef.html\" title=\"struct openssl::bn::BigNumContextRef\">BigNumContextRef</a>","synthetic":true,"types":["openssl::bn::BigNumContextRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/bn/struct.BigNum.html\" title=\"struct openssl::bn::BigNum\">BigNum</a>","synthetic":true,"types":["openssl::bn::BigNum"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/bn/struct.BigNumRef.html\" title=\"struct openssl::bn::BigNumRef\">BigNumRef</a>","synthetic":true,"types":["openssl::bn::BigNumRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/cipher/struct.Cipher.html\" title=\"struct openssl::cipher::Cipher\">Cipher</a>","synthetic":true,"types":["openssl::cipher::Cipher"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/cipher/struct.CipherRef.html\" title=\"struct openssl::cipher::CipherRef\">CipherRef</a>","synthetic":true,"types":["openssl::cipher::CipherRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/cipher_ctx/struct.CipherCtx.html\" title=\"struct openssl::cipher_ctx::CipherCtx\">CipherCtx</a>","synthetic":true,"types":["openssl::cipher_ctx::CipherCtx"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/cipher_ctx/struct.CipherCtxRef.html\" title=\"struct openssl::cipher_ctx::CipherCtxRef\">CipherCtxRef</a>","synthetic":true,"types":["openssl::cipher_ctx::CipherCtxRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/cms/struct.CMSOptions.html\" title=\"struct openssl::cms::CMSOptions\">CMSOptions</a>","synthetic":true,"types":["openssl::cms::CMSOptions"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/cms/struct.CmsContentInfo.html\" title=\"struct openssl::cms::CmsContentInfo\">CmsContentInfo</a>","synthetic":true,"types":["openssl::cms::CmsContentInfo"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/cms/struct.CmsContentInfoRef.html\" title=\"struct openssl::cms::CmsContentInfoRef\">CmsContentInfoRef</a>","synthetic":true,"types":["openssl::cms::CmsContentInfoRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/conf/struct.ConfMethod.html\" title=\"struct openssl::conf::ConfMethod\">ConfMethod</a>","synthetic":true,"types":["openssl::conf::ConfMethod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/conf/struct.Conf.html\" title=\"struct openssl::conf::Conf\">Conf</a>","synthetic":true,"types":["openssl::conf::Conf"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/conf/struct.ConfRef.html\" title=\"struct openssl::conf::ConfRef\">ConfRef</a>","synthetic":true,"types":["openssl::conf::ConfRef"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"openssl/derive/struct.Deriver.html\" title=\"struct openssl::derive::Deriver\">Deriver</a>&lt;'a&gt;","synthetic":true,"types":["openssl::derive::Deriver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"openssl/dh/struct.Dh.html\" title=\"struct openssl::dh::Dh\">Dh</a>&lt;T&gt;","synthetic":true,"types":["openssl::dh::Dh"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"openssl/dh/struct.DhRef.html\" title=\"struct openssl::dh::DhRef\">DhRef</a>&lt;T&gt;","synthetic":true,"types":["openssl::dh::DhRef"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"openssl/dsa/struct.Dsa.html\" title=\"struct openssl::dsa::Dsa\">Dsa</a>&lt;T&gt;","synthetic":true,"types":["openssl::dsa::Dsa"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"openssl/dsa/struct.DsaRef.html\" title=\"struct openssl::dsa::DsaRef\">DsaRef</a>&lt;T&gt;","synthetic":true,"types":["openssl::dsa::DsaRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ec/struct.PointConversionForm.html\" title=\"struct openssl::ec::PointConversionForm\">PointConversionForm</a>","synthetic":true,"types":["openssl::ec::PointConversionForm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ec/struct.Asn1Flag.html\" title=\"struct openssl::ec::Asn1Flag\">Asn1Flag</a>","synthetic":true,"types":["openssl::ec::Asn1Flag"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ec/struct.EcGroup.html\" title=\"struct openssl::ec::EcGroup\">EcGroup</a>","synthetic":true,"types":["openssl::ec::EcGroup"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/ec/struct.EcGroupRef.html\" title=\"struct openssl::ec::EcGroupRef\">EcGroupRef</a>","synthetic":true,"types":["openssl::ec::EcGroupRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ec/struct.EcPoint.html\" title=\"struct openssl::ec::EcPoint\">EcPoint</a>","synthetic":true,"types":["openssl::ec::EcPoint"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/ec/struct.EcPointRef.html\" title=\"struct openssl::ec::EcPointRef\">EcPointRef</a>","synthetic":true,"types":["openssl::ec::EcPointRef"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"openssl/ec/struct.EcKey.html\" title=\"struct openssl::ec::EcKey\">EcKey</a>&lt;T&gt;","synthetic":true,"types":["openssl::ec::EcKey"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"openssl/ec/struct.EcKeyRef.html\" title=\"struct openssl::ec::EcKeyRef\">EcKeyRef</a>&lt;T&gt;","synthetic":true,"types":["openssl::ec::EcKeyRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ecdsa/struct.EcdsaSig.html\" title=\"struct openssl::ecdsa::EcdsaSig\">EcdsaSig</a>","synthetic":true,"types":["openssl::ecdsa::EcdsaSig"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/ecdsa/struct.EcdsaSigRef.html\" title=\"struct openssl::ecdsa::EcdsaSigRef\">EcdsaSigRef</a>","synthetic":true,"types":["openssl::ecdsa::EcdsaSigRef"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"openssl/encrypt/struct.Encrypter.html\" title=\"struct openssl::encrypt::Encrypter\">Encrypter</a>&lt;'a&gt;","synthetic":true,"types":["openssl::encrypt::Encrypter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"openssl/encrypt/struct.Decrypter.html\" title=\"struct openssl::encrypt::Decrypter\">Decrypter</a>&lt;'a&gt;","synthetic":true,"types":["openssl::encrypt::Decrypter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/envelope/struct.Seal.html\" title=\"struct openssl::envelope::Seal\">Seal</a>","synthetic":true,"types":["openssl::envelope::Seal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/envelope/struct.Open.html\" title=\"struct openssl::envelope::Open\">Open</a>","synthetic":true,"types":["openssl::envelope::Open"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/error/struct.ErrorStack.html\" title=\"struct openssl::error::ErrorStack\">ErrorStack</a>","synthetic":true,"types":["openssl::error::ErrorStack"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/error/struct.Error.html\" title=\"struct openssl::error::Error\">Error</a>","synthetic":true,"types":["openssl::error::Error"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"openssl/ex_data/struct.Index.html\" title=\"struct openssl::ex_data::Index\">Index</a>&lt;T, U&gt;","synthetic":true,"types":["openssl::ex_data::Index"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/hash/struct.MessageDigest.html\" title=\"struct openssl::hash::MessageDigest\">MessageDigest</a>","synthetic":true,"types":["openssl::hash::MessageDigest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/hash/struct.Hasher.html\" title=\"struct openssl::hash::Hasher\">Hasher</a>","synthetic":true,"types":["openssl::hash::Hasher"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/hash/struct.DigestBytes.html\" title=\"struct openssl::hash::DigestBytes\">DigestBytes</a>","synthetic":true,"types":["openssl::hash::DigestBytes"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/md/struct.Md.html\" title=\"struct openssl::md::Md\">Md</a>","synthetic":true,"types":["openssl::md::Md"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/md/struct.MdRef.html\" title=\"struct openssl::md::MdRef\">MdRef</a>","synthetic":true,"types":["openssl::md::MdRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/md_ctx/struct.MdCtx.html\" title=\"struct openssl::md_ctx::MdCtx\">MdCtx</a>","synthetic":true,"types":["openssl::md_ctx::MdCtx"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/md_ctx/struct.MdCtxRef.html\" title=\"struct openssl::md_ctx::MdCtxRef\">MdCtxRef</a>","synthetic":true,"types":["openssl::md_ctx::MdCtxRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/nid/struct.SignatureAlgorithms.html\" title=\"struct openssl::nid::SignatureAlgorithms\">SignatureAlgorithms</a>","synthetic":true,"types":["openssl::nid::SignatureAlgorithms"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/nid/struct.Nid.html\" title=\"struct openssl::nid::Nid\">Nid</a>","synthetic":true,"types":["openssl::nid::Nid"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspFlag.html\" title=\"struct openssl::ocsp::OcspFlag\">OcspFlag</a>","synthetic":true,"types":["openssl::ocsp::OcspFlag"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspResponseStatus.html\" title=\"struct openssl::ocsp::OcspResponseStatus\">OcspResponseStatus</a>","synthetic":true,"types":["openssl::ocsp::OcspResponseStatus"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspCertStatus.html\" title=\"struct openssl::ocsp::OcspCertStatus\">OcspCertStatus</a>","synthetic":true,"types":["openssl::ocsp::OcspCertStatus"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspRevokedStatus.html\" title=\"struct openssl::ocsp::OcspRevokedStatus\">OcspRevokedStatus</a>","synthetic":true,"types":["openssl::ocsp::OcspRevokedStatus"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspStatus.html\" title=\"struct openssl::ocsp::OcspStatus\">OcspStatus</a>&lt;'a&gt;","synthetic":true,"types":["openssl::ocsp::OcspStatus"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspBasicResponse.html\" title=\"struct openssl::ocsp::OcspBasicResponse\">OcspBasicResponse</a>","synthetic":true,"types":["openssl::ocsp::OcspBasicResponse"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspBasicResponseRef.html\" title=\"struct openssl::ocsp::OcspBasicResponseRef\">OcspBasicResponseRef</a>","synthetic":true,"types":["openssl::ocsp::OcspBasicResponseRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspCertId.html\" title=\"struct openssl::ocsp::OcspCertId\">OcspCertId</a>","synthetic":true,"types":["openssl::ocsp::OcspCertId"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspCertIdRef.html\" title=\"struct openssl::ocsp::OcspCertIdRef\">OcspCertIdRef</a>","synthetic":true,"types":["openssl::ocsp::OcspCertIdRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspResponse.html\" title=\"struct openssl::ocsp::OcspResponse\">OcspResponse</a>","synthetic":true,"types":["openssl::ocsp::OcspResponse"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspResponseRef.html\" title=\"struct openssl::ocsp::OcspResponseRef\">OcspResponseRef</a>","synthetic":true,"types":["openssl::ocsp::OcspResponseRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspRequest.html\" title=\"struct openssl::ocsp::OcspRequest\">OcspRequest</a>","synthetic":true,"types":["openssl::ocsp::OcspRequest"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspRequestRef.html\" title=\"struct openssl::ocsp::OcspRequestRef\">OcspRequestRef</a>","synthetic":true,"types":["openssl::ocsp::OcspRequestRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspOneReq.html\" title=\"struct openssl::ocsp::OcspOneReq\">OcspOneReq</a>","synthetic":true,"types":["openssl::ocsp::OcspOneReq"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspOneReqRef.html\" title=\"struct openssl::ocsp::OcspOneReqRef\">OcspOneReqRef</a>","synthetic":true,"types":["openssl::ocsp::OcspOneReqRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/pkcs12/struct.Pkcs12.html\" title=\"struct openssl::pkcs12::Pkcs12\">Pkcs12</a>","synthetic":true,"types":["openssl::pkcs12::Pkcs12"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/pkcs12/struct.Pkcs12Ref.html\" title=\"struct openssl::pkcs12::Pkcs12Ref\">Pkcs12Ref</a>","synthetic":true,"types":["openssl::pkcs12::Pkcs12Ref"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/pkcs12/struct.ParsedPkcs12.html\" title=\"struct openssl::pkcs12::ParsedPkcs12\">ParsedPkcs12</a>","synthetic":true,"types":["openssl::pkcs12::ParsedPkcs12"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/pkcs12/struct.Pkcs12Builder.html\" title=\"struct openssl::pkcs12::Pkcs12Builder\">Pkcs12Builder</a>","synthetic":true,"types":["openssl::pkcs12::Pkcs12Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/pkcs5/struct.KeyIvPair.html\" title=\"struct openssl::pkcs5::KeyIvPair\">KeyIvPair</a>","synthetic":true,"types":["openssl::pkcs5::KeyIvPair"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/pkcs7/struct.Pkcs7.html\" title=\"struct openssl::pkcs7::Pkcs7\">Pkcs7</a>","synthetic":true,"types":["openssl::pkcs7::Pkcs7"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/pkcs7/struct.Pkcs7Ref.html\" title=\"struct openssl::pkcs7::Pkcs7Ref\">Pkcs7Ref</a>","synthetic":true,"types":["openssl::pkcs7::Pkcs7Ref"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/pkcs7/struct.Pkcs7Flags.html\" title=\"struct openssl::pkcs7::Pkcs7Flags\">Pkcs7Flags</a>","synthetic":true,"types":["openssl::pkcs7::Pkcs7Flags"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl/pkey/enum.Params.html\" title=\"enum openssl::pkey::Params\">Params</a>","synthetic":true,"types":["openssl::pkey::Params"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl/pkey/enum.Public.html\" title=\"enum openssl::pkey::Public\">Public</a>","synthetic":true,"types":["openssl::pkey::Public"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl/pkey/enum.Private.html\" title=\"enum openssl::pkey::Private\">Private</a>","synthetic":true,"types":["openssl::pkey::Private"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/pkey/struct.Id.html\" title=\"struct openssl::pkey::Id\">Id</a>","synthetic":true,"types":["openssl::pkey::Id"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"openssl/pkey/struct.PKey.html\" title=\"struct openssl::pkey::PKey\">PKey</a>&lt;T&gt;","synthetic":true,"types":["openssl::pkey::PKey"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"openssl/pkey/struct.PKeyRef.html\" title=\"struct openssl::pkey::PKeyRef\">PKeyRef</a>&lt;T&gt;","synthetic":true,"types":["openssl::pkey::PKeyRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/pkey_ctx/struct.HkdfMode.html\" title=\"struct openssl::pkey_ctx::HkdfMode\">HkdfMode</a>","synthetic":true,"types":["openssl::pkey_ctx::HkdfMode"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"openssl/pkey_ctx/struct.PkeyCtx.html\" title=\"struct openssl::pkey_ctx::PkeyCtx\">PkeyCtx</a>&lt;T&gt;","synthetic":true,"types":["openssl::pkey_ctx::PkeyCtx"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"openssl/pkey_ctx/struct.PkeyCtxRef.html\" title=\"struct openssl::pkey_ctx::PkeyCtxRef\">PkeyCtxRef</a>&lt;T&gt;","synthetic":true,"types":["openssl::pkey_ctx::PkeyCtxRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/rsa/struct.Padding.html\" title=\"struct openssl::rsa::Padding\">Padding</a>","synthetic":true,"types":["openssl::rsa::Padding"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"openssl/rsa/struct.Rsa.html\" title=\"struct openssl::rsa::Rsa\">Rsa</a>&lt;T&gt;","synthetic":true,"types":["openssl::rsa::Rsa"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"openssl/rsa/struct.RsaRef.html\" title=\"struct openssl::rsa::RsaRef\">RsaRef</a>&lt;T&gt;","synthetic":true,"types":["openssl::rsa::RsaRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/rsa/struct.RsaPrivateKeyBuilder.html\" title=\"struct openssl::rsa::RsaPrivateKeyBuilder\">RsaPrivateKeyBuilder</a>","synthetic":true,"types":["openssl::rsa::RsaPrivateKeyBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/sha/struct.Sha1.html\" title=\"struct openssl::sha::Sha1\">Sha1</a>","synthetic":true,"types":["openssl::sha::Sha1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/sha/struct.Sha224.html\" title=\"struct openssl::sha::Sha224\">Sha224</a>","synthetic":true,"types":["openssl::sha::Sha224"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/sha/struct.Sha256.html\" title=\"struct openssl::sha::Sha256\">Sha256</a>","synthetic":true,"types":["openssl::sha::Sha256"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/sha/struct.Sha384.html\" title=\"struct openssl::sha::Sha384\">Sha384</a>","synthetic":true,"types":["openssl::sha::Sha384"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/sha/struct.Sha512.html\" title=\"struct openssl::sha::Sha512\">Sha512</a>","synthetic":true,"types":["openssl::sha::Sha512"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/sign/struct.RsaPssSaltlen.html\" title=\"struct openssl::sign::RsaPssSaltlen\">RsaPssSaltlen</a>","synthetic":true,"types":["openssl::sign::RsaPssSaltlen"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"openssl/sign/struct.Signer.html\" title=\"struct openssl::sign::Signer\">Signer</a>&lt;'a&gt;","synthetic":true,"types":["openssl::sign::Signer"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"openssl/sign/struct.Verifier.html\" title=\"struct openssl::sign::Verifier\">Verifier</a>&lt;'a&gt;","synthetic":true,"types":["openssl::sign::Verifier"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/srtp/struct.SrtpProtectionProfile.html\" title=\"struct openssl::srtp::SrtpProtectionProfile\">SrtpProtectionProfile</a>","synthetic":true,"types":["openssl::srtp::SrtpProtectionProfile"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/srtp/struct.SrtpProtectionProfileRef.html\" title=\"struct openssl::srtp::SrtpProtectionProfileRef\">SrtpProtectionProfileRef</a>","synthetic":true,"types":["openssl::srtp::SrtpProtectionProfileRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/srtp/struct.SrtpProfileId.html\" title=\"struct openssl::srtp::SrtpProfileId\">SrtpProfileId</a>","synthetic":true,"types":["openssl::srtp::SrtpProfileId"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslConnector.html\" title=\"struct openssl::ssl::SslConnector\">SslConnector</a>","synthetic":true,"types":["openssl::ssl::connector::SslConnector"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslConnectorBuilder.html\" title=\"struct openssl::ssl::SslConnectorBuilder\">SslConnectorBuilder</a>","synthetic":true,"types":["openssl::ssl::connector::SslConnectorBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.ConnectConfiguration.html\" title=\"struct openssl::ssl::ConnectConfiguration\">ConnectConfiguration</a>","synthetic":true,"types":["openssl::ssl::connector::ConnectConfiguration"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslAcceptor.html\" title=\"struct openssl::ssl::SslAcceptor\">SslAcceptor</a>","synthetic":true,"types":["openssl::ssl::connector::SslAcceptor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslAcceptorBuilder.html\" title=\"struct openssl::ssl::SslAcceptorBuilder\">SslAcceptorBuilder</a>","synthetic":true,"types":["openssl::ssl::connector::SslAcceptorBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.ErrorCode.html\" title=\"struct openssl::ssl::ErrorCode\">ErrorCode</a>","synthetic":true,"types":["openssl::ssl::error::ErrorCode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.Error.html\" title=\"struct openssl::ssl::Error\">Error</a>","synthetic":true,"types":["openssl::ssl::error::Error"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"enum\" href=\"openssl/ssl/enum.HandshakeError.html\" title=\"enum openssl::ssl::HandshakeError\">HandshakeError</a>&lt;S&gt;","synthetic":true,"types":["openssl::ssl::error::HandshakeError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslOptions.html\" title=\"struct openssl::ssl::SslOptions\">SslOptions</a>","synthetic":true,"types":["openssl::ssl::SslOptions"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslMode.html\" title=\"struct openssl::ssl::SslMode\">SslMode</a>","synthetic":true,"types":["openssl::ssl::SslMode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslMethod.html\" title=\"struct openssl::ssl::SslMethod\">SslMethod</a>","synthetic":true,"types":["openssl::ssl::SslMethod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslVerifyMode.html\" title=\"struct openssl::ssl::SslVerifyMode\">SslVerifyMode</a>","synthetic":true,"types":["openssl::ssl::SslVerifyMode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslSessionCacheMode.html\" title=\"struct openssl::ssl::SslSessionCacheMode\">SslSessionCacheMode</a>","synthetic":true,"types":["openssl::ssl::SslSessionCacheMode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.ExtensionContext.html\" title=\"struct openssl::ssl::ExtensionContext\">ExtensionContext</a>","synthetic":true,"types":["openssl::ssl::ExtensionContext"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslFiletype.html\" title=\"struct openssl::ssl::SslFiletype\">SslFiletype</a>","synthetic":true,"types":["openssl::ssl::SslFiletype"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.StatusType.html\" title=\"struct openssl::ssl::StatusType\">StatusType</a>","synthetic":true,"types":["openssl::ssl::StatusType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.NameType.html\" title=\"struct openssl::ssl::NameType\">NameType</a>","synthetic":true,"types":["openssl::ssl::NameType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SniError.html\" title=\"struct openssl::ssl::SniError\">SniError</a>","synthetic":true,"types":["openssl::ssl::SniError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslAlert.html\" title=\"struct openssl::ssl::SslAlert\">SslAlert</a>","synthetic":true,"types":["openssl::ssl::SslAlert"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.AlpnError.html\" title=\"struct openssl::ssl::AlpnError\">AlpnError</a>","synthetic":true,"types":["openssl::ssl::AlpnError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.ClientHelloResponse.html\" title=\"struct openssl::ssl::ClientHelloResponse\">ClientHelloResponse</a>","synthetic":true,"types":["openssl::ssl::ClientHelloResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslVersion.html\" title=\"struct openssl::ssl::SslVersion\">SslVersion</a>","synthetic":true,"types":["openssl::ssl::SslVersion"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslContextBuilder.html\" title=\"struct openssl::ssl::SslContextBuilder\">SslContextBuilder</a>","synthetic":true,"types":["openssl::ssl::SslContextBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslContext.html\" title=\"struct openssl::ssl::SslContext\">SslContext</a>","synthetic":true,"types":["openssl::ssl::SslContext"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslContextRef.html\" title=\"struct openssl::ssl::SslContextRef\">SslContextRef</a>","synthetic":true,"types":["openssl::ssl::SslContextRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.CipherBits.html\" title=\"struct openssl::ssl::CipherBits\">CipherBits</a>","synthetic":true,"types":["openssl::ssl::CipherBits"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslCipher.html\" title=\"struct openssl::ssl::SslCipher\">SslCipher</a>","synthetic":true,"types":["openssl::ssl::SslCipher"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslCipherRef.html\" title=\"struct openssl::ssl::SslCipherRef\">SslCipherRef</a>","synthetic":true,"types":["openssl::ssl::SslCipherRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslSession.html\" title=\"struct openssl::ssl::SslSession\">SslSession</a>","synthetic":true,"types":["openssl::ssl::SslSession"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslSessionRef.html\" title=\"struct openssl::ssl::SslSessionRef\">SslSessionRef</a>","synthetic":true,"types":["openssl::ssl::SslSessionRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.Ssl.html\" title=\"struct openssl::ssl::Ssl\">Ssl</a>","synthetic":true,"types":["openssl::ssl::Ssl"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslRef.html\" title=\"struct openssl::ssl::SslRef\">SslRef</a>","synthetic":true,"types":["openssl::ssl::SslRef"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.MidHandshakeSslStream.html\" title=\"struct openssl::ssl::MidHandshakeSslStream\">MidHandshakeSslStream</a>&lt;S&gt;","synthetic":true,"types":["openssl::ssl::MidHandshakeSslStream"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslStream.html\" title=\"struct openssl::ssl::SslStream\">SslStream</a>&lt;S&gt;","synthetic":true,"types":["openssl::ssl::SslStream"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslStreamBuilder.html\" title=\"struct openssl::ssl::SslStreamBuilder\">SslStreamBuilder</a>&lt;S&gt;","synthetic":true,"types":["openssl::ssl::SslStreamBuilder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl/ssl/enum.ShutdownResult.html\" title=\"enum openssl::ssl::ShutdownResult\">ShutdownResult</a>","synthetic":true,"types":["openssl::ssl::ShutdownResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.ShutdownState.html\" title=\"struct openssl::ssl::ShutdownState\">ShutdownState</a>","synthetic":true,"types":["openssl::ssl::ShutdownState"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"openssl/stack/struct.Stack.html\" title=\"struct openssl::stack::Stack\">Stack</a>&lt;T&gt;","synthetic":true,"types":["openssl::stack::Stack"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"openssl/stack/struct.IntoIter.html\" title=\"struct openssl::stack::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["openssl::stack::IntoIter"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"openssl/stack/struct.StackRef.html\" title=\"struct openssl::stack::StackRef\">StackRef</a>&lt;T&gt;","synthetic":true,"types":["openssl::stack::StackRef"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"openssl/stack/struct.Iter.html\" title=\"struct openssl::stack::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["openssl::stack::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"openssl/stack/struct.IterMut.html\" title=\"struct openssl::stack::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["openssl::stack::IterMut"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/string/struct.OpensslString.html\" title=\"struct openssl::string::OpensslString\">OpensslString</a>","synthetic":true,"types":["openssl::string::OpensslString"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/string/struct.OpensslStringRef.html\" title=\"struct openssl::string::OpensslStringRef\">OpensslStringRef</a>","synthetic":true,"types":["openssl::string::OpensslStringRef"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl/symm/enum.Mode.html\" title=\"enum openssl::symm::Mode\">Mode</a>","synthetic":true,"types":["openssl::symm::Mode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/symm/struct.Cipher.html\" title=\"struct openssl::symm::Cipher\">Cipher</a>","synthetic":true,"types":["openssl::symm::Cipher"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/symm/struct.Crypter.html\" title=\"struct openssl::symm::Crypter\">Crypter</a>","synthetic":true,"types":["openssl::symm::Crypter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/verify/struct.X509CheckFlags.html\" title=\"struct openssl::x509::verify::X509CheckFlags\">X509CheckFlags</a>","synthetic":true,"types":["openssl::x509::verify::X509CheckFlags"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/verify/struct.X509VerifyFlags.html\" title=\"struct openssl::x509::verify::X509VerifyFlags\">X509VerifyFlags</a>","synthetic":true,"types":["openssl::x509::verify::X509VerifyFlags"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/verify/struct.X509VerifyParam.html\" title=\"struct openssl::x509::verify::X509VerifyParam\">X509VerifyParam</a>","synthetic":true,"types":["openssl::x509::verify::X509VerifyParam"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/x509/verify/struct.X509VerifyParamRef.html\" title=\"struct openssl::x509::verify::X509VerifyParamRef\">X509VerifyParamRef</a>","synthetic":true,"types":["openssl::x509::verify::X509VerifyParamRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/extension/struct.BasicConstraints.html\" title=\"struct openssl::x509::extension::BasicConstraints\">BasicConstraints</a>","synthetic":true,"types":["openssl::x509::extension::BasicConstraints"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/extension/struct.KeyUsage.html\" title=\"struct openssl::x509::extension::KeyUsage\">KeyUsage</a>","synthetic":true,"types":["openssl::x509::extension::KeyUsage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/extension/struct.ExtendedKeyUsage.html\" title=\"struct openssl::x509::extension::ExtendedKeyUsage\">ExtendedKeyUsage</a>","synthetic":true,"types":["openssl::x509::extension::ExtendedKeyUsage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/extension/struct.SubjectKeyIdentifier.html\" title=\"struct openssl::x509::extension::SubjectKeyIdentifier\">SubjectKeyIdentifier</a>","synthetic":true,"types":["openssl::x509::extension::SubjectKeyIdentifier"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/extension/struct.AuthorityKeyIdentifier.html\" title=\"struct openssl::x509::extension::AuthorityKeyIdentifier\">AuthorityKeyIdentifier</a>","synthetic":true,"types":["openssl::x509::extension::AuthorityKeyIdentifier"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/extension/struct.SubjectAlternativeName.html\" title=\"struct openssl::x509::extension::SubjectAlternativeName\">SubjectAlternativeName</a>","synthetic":true,"types":["openssl::x509::extension::SubjectAlternativeName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/store/struct.X509StoreBuilder.html\" title=\"struct openssl::x509::store::X509StoreBuilder\">X509StoreBuilder</a>","synthetic":true,"types":["openssl::x509::store::X509StoreBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/x509/store/struct.X509StoreBuilderRef.html\" title=\"struct openssl::x509::store::X509StoreBuilderRef\">X509StoreBuilderRef</a>","synthetic":true,"types":["openssl::x509::store::X509StoreBuilderRef"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"openssl/x509/store/struct.X509Lookup.html\" title=\"struct openssl::x509::store::X509Lookup\">X509Lookup</a>&lt;T&gt;","synthetic":true,"types":["openssl::x509::store::X509Lookup"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"openssl/x509/store/struct.X509LookupRef.html\" title=\"struct openssl::x509::store::X509LookupRef\">X509LookupRef</a>&lt;T&gt;","synthetic":true,"types":["openssl::x509::store::X509LookupRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/store/struct.HashDir.html\" title=\"struct openssl::x509::store::HashDir\">HashDir</a>","synthetic":true,"types":["openssl::x509::store::HashDir"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"openssl/x509/store/struct.X509LookupMethod.html\" title=\"struct openssl::x509::store::X509LookupMethod\">X509LookupMethod</a>&lt;T&gt;","synthetic":true,"types":["openssl::x509::store::X509LookupMethod"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"openssl/x509/store/struct.X509LookupMethodRef.html\" title=\"struct openssl::x509::store::X509LookupMethodRef\">X509LookupMethodRef</a>&lt;T&gt;","synthetic":true,"types":["openssl::x509::store::X509LookupMethodRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/store/struct.X509Store.html\" title=\"struct openssl::x509::store::X509Store\">X509Store</a>","synthetic":true,"types":["openssl::x509::store::X509Store"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/x509/store/struct.X509StoreRef.html\" title=\"struct openssl::x509::store::X509StoreRef\">X509StoreRef</a>","synthetic":true,"types":["openssl::x509::store::X509StoreRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509StoreContext.html\" title=\"struct openssl::x509::X509StoreContext\">X509StoreContext</a>","synthetic":true,"types":["openssl::x509::X509StoreContext"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509StoreContextRef.html\" title=\"struct openssl::x509::X509StoreContextRef\">X509StoreContextRef</a>","synthetic":true,"types":["openssl::x509::X509StoreContextRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509Builder.html\" title=\"struct openssl::x509::X509Builder\">X509Builder</a>","synthetic":true,"types":["openssl::x509::X509Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509.html\" title=\"struct openssl::x509::X509\">X509</a>","synthetic":true,"types":["openssl::x509::X509"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509Ref.html\" title=\"struct openssl::x509::X509Ref\">X509Ref</a>","synthetic":true,"types":["openssl::x509::X509Ref"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509v3Context.html\" title=\"struct openssl::x509::X509v3Context\">X509v3Context</a>&lt;'a&gt;","synthetic":true,"types":["openssl::x509::X509v3Context"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509Extension.html\" title=\"struct openssl::x509::X509Extension\">X509Extension</a>","synthetic":true,"types":["openssl::x509::X509Extension"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509ExtensionRef.html\" title=\"struct openssl::x509::X509ExtensionRef\">X509ExtensionRef</a>","synthetic":true,"types":["openssl::x509::X509ExtensionRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509NameBuilder.html\" title=\"struct openssl::x509::X509NameBuilder\">X509NameBuilder</a>","synthetic":true,"types":["openssl::x509::X509NameBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509Name.html\" title=\"struct openssl::x509::X509Name\">X509Name</a>","synthetic":true,"types":["openssl::x509::X509Name"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509NameRef.html\" title=\"struct openssl::x509::X509NameRef\">X509NameRef</a>","synthetic":true,"types":["openssl::x509::X509NameRef"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509NameEntries.html\" title=\"struct openssl::x509::X509NameEntries\">X509NameEntries</a>&lt;'a&gt;","synthetic":true,"types":["openssl::x509::X509NameEntries"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509NameEntry.html\" title=\"struct openssl::x509::X509NameEntry\">X509NameEntry</a>","synthetic":true,"types":["openssl::x509::X509NameEntry"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509NameEntryRef.html\" title=\"struct openssl::x509::X509NameEntryRef\">X509NameEntryRef</a>","synthetic":true,"types":["openssl::x509::X509NameEntryRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509ReqBuilder.html\" title=\"struct openssl::x509::X509ReqBuilder\">X509ReqBuilder</a>","synthetic":true,"types":["openssl::x509::X509ReqBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509Req.html\" title=\"struct openssl::x509::X509Req\">X509Req</a>","synthetic":true,"types":["openssl::x509::X509Req"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509ReqRef.html\" title=\"struct openssl::x509::X509ReqRef\">X509ReqRef</a>","synthetic":true,"types":["openssl::x509::X509ReqRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509VerifyResult.html\" title=\"struct openssl::x509::X509VerifyResult\">X509VerifyResult</a>","synthetic":true,"types":["openssl::x509::X509VerifyResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/struct.GeneralName.html\" title=\"struct openssl::x509::GeneralName\">GeneralName</a>","synthetic":true,"types":["openssl::x509::GeneralName"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/x509/struct.GeneralNameRef.html\" title=\"struct openssl::x509::GeneralNameRef\">GeneralNameRef</a>","synthetic":true,"types":["openssl::x509::GeneralNameRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/struct.AccessDescription.html\" title=\"struct openssl::x509::AccessDescription\">AccessDescription</a>","synthetic":true,"types":["openssl::x509::AccessDescription"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/x509/struct.AccessDescriptionRef.html\" title=\"struct openssl::x509::AccessDescriptionRef\">AccessDescriptionRef</a>","synthetic":true,"types":["openssl::x509::AccessDescriptionRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509Algorithm.html\" title=\"struct openssl::x509::X509Algorithm\">X509Algorithm</a>","synthetic":true,"types":["openssl::x509::X509Algorithm"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509AlgorithmRef.html\" title=\"struct openssl::x509::X509AlgorithmRef\">X509AlgorithmRef</a>","synthetic":true,"types":["openssl::x509::X509AlgorithmRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509Object.html\" title=\"struct openssl::x509::X509Object\">X509Object</a>","synthetic":true,"types":["openssl::x509::X509Object"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509ObjectRef.html\" title=\"struct openssl::x509::X509ObjectRef\">X509ObjectRef</a>","synthetic":true,"types":["openssl::x509::X509ObjectRef"]}];
implementors["openssl_probe"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"openssl_probe/struct.ProbeResult.html\" title=\"struct openssl_probe::ProbeResult\">ProbeResult</a>","synthetic":true,"types":["openssl_probe::ProbeResult"]}];
implementors["openssl_sys"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"openssl_sys/struct.AES_KEY.html\" title=\"struct openssl_sys::AES_KEY\">AES_KEY</a>","synthetic":true,"types":["openssl_sys::handwritten::aes::AES_KEY"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl_sys/struct.ASN1_ENCODING.html\" title=\"struct openssl_sys::ASN1_ENCODING\">ASN1_ENCODING</a>","synthetic":true,"types":["openssl_sys::handwritten::asn1::ASN1_ENCODING"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.stack_st_ASN1_OBJECT.html\" title=\"enum openssl_sys::stack_st_ASN1_OBJECT\">stack_st_ASN1_OBJECT</a>","synthetic":true,"types":["openssl_sys::handwritten::asn1::stack_st_ASN1_OBJECT"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.BIO_METHOD.html\" title=\"enum openssl_sys::BIO_METHOD\">BIO_METHOD</a>","synthetic":true,"types":["openssl_sys::handwritten::bio::BIO_METHOD"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.CMS_ContentInfo.html\" title=\"enum openssl_sys::CMS_ContentInfo\">CMS_ContentInfo</a>","synthetic":true,"types":["openssl_sys::handwritten::cms::CMS_ContentInfo"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.stack_st_void.html\" title=\"enum openssl_sys::stack_st_void\">stack_st_void</a>","synthetic":true,"types":["openssl_sys::handwritten::crypto::stack_st_void"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.point_conversion_form_t.html\" title=\"enum openssl_sys::point_conversion_form_t\">point_conversion_form_t</a>","synthetic":true,"types":["openssl_sys::handwritten::ec::point_conversion_form_t"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.EC_METHOD.html\" title=\"enum openssl_sys::EC_METHOD\">EC_METHOD</a>","synthetic":true,"types":["openssl_sys::handwritten::ec::EC_METHOD"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.EC_GROUP.html\" title=\"enum openssl_sys::EC_GROUP\">EC_GROUP</a>","synthetic":true,"types":["openssl_sys::handwritten::ec::EC_GROUP"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.EC_POINT.html\" title=\"enum openssl_sys::EC_POINT\">EC_POINT</a>","synthetic":true,"types":["openssl_sys::handwritten::ec::EC_POINT"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.ECDSA_SIG.html\" title=\"enum openssl_sys::ECDSA_SIG\">ECDSA_SIG</a>","synthetic":true,"types":["openssl_sys::handwritten::ec::ECDSA_SIG"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl_sys/struct.ERR_STRING_DATA.html\" title=\"struct openssl_sys::ERR_STRING_DATA\">ERR_STRING_DATA</a>","synthetic":true,"types":["openssl_sys::handwritten::err::ERR_STRING_DATA"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.OCSP_CERTID.html\" title=\"enum openssl_sys::OCSP_CERTID\">OCSP_CERTID</a>","synthetic":true,"types":["openssl_sys::handwritten::ocsp::OCSP_CERTID"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.OCSP_ONEREQ.html\" title=\"enum openssl_sys::OCSP_ONEREQ\">OCSP_ONEREQ</a>","synthetic":true,"types":["openssl_sys::handwritten::ocsp::OCSP_ONEREQ"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.OCSP_REQUEST.html\" title=\"enum openssl_sys::OCSP_REQUEST\">OCSP_REQUEST</a>","synthetic":true,"types":["openssl_sys::handwritten::ocsp::OCSP_REQUEST"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.OCSP_BASICRESP.html\" title=\"enum openssl_sys::OCSP_BASICRESP\">OCSP_BASICRESP</a>","synthetic":true,"types":["openssl_sys::handwritten::ocsp::OCSP_BASICRESP"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.PKCS12.html\" title=\"enum openssl_sys::PKCS12\">PKCS12</a>","synthetic":true,"types":["openssl_sys::handwritten::pkcs12::PKCS12"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.PKCS7_SIGNED.html\" title=\"enum openssl_sys::PKCS7_SIGNED\">PKCS7_SIGNED</a>","synthetic":true,"types":["openssl_sys::handwritten::pkcs7::PKCS7_SIGNED"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.PKCS7_ENVELOPE.html\" title=\"enum openssl_sys::PKCS7_ENVELOPE\">PKCS7_ENVELOPE</a>","synthetic":true,"types":["openssl_sys::handwritten::pkcs7::PKCS7_ENVELOPE"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.PKCS7_SIGN_ENVELOPE.html\" title=\"enum openssl_sys::PKCS7_SIGN_ENVELOPE\">PKCS7_SIGN_ENVELOPE</a>","synthetic":true,"types":["openssl_sys::handwritten::pkcs7::PKCS7_SIGN_ENVELOPE"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.PKCS7_DIGEST.html\" title=\"enum openssl_sys::PKCS7_DIGEST\">PKCS7_DIGEST</a>","synthetic":true,"types":["openssl_sys::handwritten::pkcs7::PKCS7_DIGEST"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.PKCS7_ENCRYPT.html\" title=\"enum openssl_sys::PKCS7_ENCRYPT\">PKCS7_ENCRYPT</a>","synthetic":true,"types":["openssl_sys::handwritten::pkcs7::PKCS7_ENCRYPT"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.PKCS7.html\" title=\"enum openssl_sys::PKCS7\">PKCS7</a>","synthetic":true,"types":["openssl_sys::handwritten::pkcs7::PKCS7"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.stack_st_OPENSSL_STRING.html\" title=\"enum openssl_sys::stack_st_OPENSSL_STRING\">stack_st_OPENSSL_STRING</a>","synthetic":true,"types":["openssl_sys::handwritten::safestack::stack_st_OPENSSL_STRING"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl_sys/struct.SHA_CTX.html\" title=\"struct openssl_sys::SHA_CTX\">SHA_CTX</a>","synthetic":true,"types":["openssl_sys::handwritten::sha::SHA_CTX"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl_sys/struct.SHA256_CTX.html\" title=\"struct openssl_sys::SHA256_CTX\">SHA256_CTX</a>","synthetic":true,"types":["openssl_sys::handwritten::sha::SHA256_CTX"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl_sys/struct.SHA512_CTX.html\" title=\"struct openssl_sys::SHA512_CTX\">SHA512_CTX</a>","synthetic":true,"types":["openssl_sys::handwritten::sha::SHA512_CTX"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.SSL_METHOD.html\" title=\"enum openssl_sys::SSL_METHOD\">SSL_METHOD</a>","synthetic":true,"types":["openssl_sys::handwritten::ssl::SSL_METHOD"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.SSL_CIPHER.html\" title=\"enum openssl_sys::SSL_CIPHER\">SSL_CIPHER</a>","synthetic":true,"types":["openssl_sys::handwritten::ssl::SSL_CIPHER"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.SSL_SESSION.html\" title=\"enum openssl_sys::SSL_SESSION\">SSL_SESSION</a>","synthetic":true,"types":["openssl_sys::handwritten::ssl::SSL_SESSION"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.stack_st_SSL_CIPHER.html\" title=\"enum openssl_sys::stack_st_SSL_CIPHER\">stack_st_SSL_CIPHER</a>","synthetic":true,"types":["openssl_sys::handwritten::ssl::stack_st_SSL_CIPHER"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl_sys/struct.SRTP_PROTECTION_PROFILE.html\" title=\"struct openssl_sys::SRTP_PROTECTION_PROFILE\">SRTP_PROTECTION_PROFILE</a>","synthetic":true,"types":["openssl_sys::handwritten::ssl::SRTP_PROTECTION_PROFILE"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.stack_st_SRTP_PROTECTION_PROFILE.html\" title=\"enum openssl_sys::stack_st_SRTP_PROTECTION_PROFILE\">stack_st_SRTP_PROTECTION_PROFILE</a>","synthetic":true,"types":["openssl_sys::handwritten::ssl::stack_st_SRTP_PROTECTION_PROFILE"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.OPENSSL_STACK.html\" title=\"enum openssl_sys::OPENSSL_STACK\">OPENSSL_STACK</a>","synthetic":true,"types":["openssl_sys::handwritten::stack::OPENSSL_STACK"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.ASN1_INTEGER.html\" title=\"enum openssl_sys::ASN1_INTEGER\">ASN1_INTEGER</a>","synthetic":true,"types":["openssl_sys::handwritten::types::ASN1_INTEGER"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.ASN1_GENERALIZEDTIME.html\" title=\"enum openssl_sys::ASN1_GENERALIZEDTIME\">ASN1_GENERALIZEDTIME</a>","synthetic":true,"types":["openssl_sys::handwritten::types::ASN1_GENERALIZEDTIME"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.ASN1_STRING.html\" title=\"enum openssl_sys::ASN1_STRING\">ASN1_STRING</a>","synthetic":true,"types":["openssl_sys::handwritten::types::ASN1_STRING"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.ASN1_BIT_STRING.html\" title=\"enum openssl_sys::ASN1_BIT_STRING\">ASN1_BIT_STRING</a>","synthetic":true,"types":["openssl_sys::handwritten::types::ASN1_BIT_STRING"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.ASN1_TIME.html\" title=\"enum openssl_sys::ASN1_TIME\">ASN1_TIME</a>","synthetic":true,"types":["openssl_sys::handwritten::types::ASN1_TIME"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.ASN1_TYPE.html\" title=\"enum openssl_sys::ASN1_TYPE\">ASN1_TYPE</a>","synthetic":true,"types":["openssl_sys::handwritten::types::ASN1_TYPE"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.ASN1_OBJECT.html\" title=\"enum openssl_sys::ASN1_OBJECT\">ASN1_OBJECT</a>","synthetic":true,"types":["openssl_sys::handwritten::types::ASN1_OBJECT"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.ASN1_OCTET_STRING.html\" title=\"enum openssl_sys::ASN1_OCTET_STRING\">ASN1_OCTET_STRING</a>","synthetic":true,"types":["openssl_sys::handwritten::types::ASN1_OCTET_STRING"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.bio_st.html\" title=\"enum openssl_sys::bio_st\">bio_st</a>","synthetic":true,"types":["openssl_sys::handwritten::types::bio_st"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.BIO.html\" title=\"enum openssl_sys::BIO\">BIO</a>","synthetic":true,"types":["openssl_sys::handwritten::types::BIO"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.BIGNUM.html\" title=\"enum openssl_sys::BIGNUM\">BIGNUM</a>","synthetic":true,"types":["openssl_sys::handwritten::types::BIGNUM"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.BN_BLINDING.html\" title=\"enum openssl_sys::BN_BLINDING\">BN_BLINDING</a>","synthetic":true,"types":["openssl_sys::handwritten::types::BN_BLINDING"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.BN_MONT_CTX.html\" title=\"enum openssl_sys::BN_MONT_CTX\">BN_MONT_CTX</a>","synthetic":true,"types":["openssl_sys::handwritten::types::BN_MONT_CTX"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.BN_CTX.html\" title=\"enum openssl_sys::BN_CTX\">BN_CTX</a>","synthetic":true,"types":["openssl_sys::handwritten::types::BN_CTX"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.BN_GENCB.html\" title=\"enum openssl_sys::BN_GENCB\">BN_GENCB</a>","synthetic":true,"types":["openssl_sys::handwritten::types::BN_GENCB"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.EVP_CIPHER.html\" title=\"enum openssl_sys::EVP_CIPHER\">EVP_CIPHER</a>","synthetic":true,"types":["openssl_sys::handwritten::types::EVP_CIPHER"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.EVP_CIPHER_CTX.html\" title=\"enum openssl_sys::EVP_CIPHER_CTX\">EVP_CIPHER_CTX</a>","synthetic":true,"types":["openssl_sys::handwritten::types::EVP_CIPHER_CTX"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.EVP_MD.html\" title=\"enum openssl_sys::EVP_MD\">EVP_MD</a>","synthetic":true,"types":["openssl_sys::handwritten::types::EVP_MD"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.EVP_MD_CTX.html\" title=\"enum openssl_sys::EVP_MD_CTX\">EVP_MD_CTX</a>","synthetic":true,"types":["openssl_sys::handwritten::types::EVP_MD_CTX"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.PKCS8_PRIV_KEY_INFO.html\" title=\"enum openssl_sys::PKCS8_PRIV_KEY_INFO\">PKCS8_PRIV_KEY_INFO</a>","synthetic":true,"types":["openssl_sys::handwritten::types::PKCS8_PRIV_KEY_INFO"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.EVP_PKEY_ASN1_METHOD.html\" title=\"enum openssl_sys::EVP_PKEY_ASN1_METHOD\">EVP_PKEY_ASN1_METHOD</a>","synthetic":true,"types":["openssl_sys::handwritten::types::EVP_PKEY_ASN1_METHOD"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.EVP_PKEY_CTX.html\" title=\"enum openssl_sys::EVP_PKEY_CTX\">EVP_PKEY_CTX</a>","synthetic":true,"types":["openssl_sys::handwritten::types::EVP_PKEY_CTX"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.HMAC_CTX.html\" title=\"enum openssl_sys::HMAC_CTX\">HMAC_CTX</a>","synthetic":true,"types":["openssl_sys::handwritten::types::HMAC_CTX"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.DH.html\" title=\"enum openssl_sys::DH\">DH</a>","synthetic":true,"types":["openssl_sys::handwritten::types::DH"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.DH_METHOD.html\" title=\"enum openssl_sys::DH_METHOD\">DH_METHOD</a>","synthetic":true,"types":["openssl_sys::handwritten::types::DH_METHOD"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.DSA.html\" title=\"enum openssl_sys::DSA\">DSA</a>","synthetic":true,"types":["openssl_sys::handwritten::types::DSA"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.DSA_METHOD.html\" title=\"enum openssl_sys::DSA_METHOD\">DSA_METHOD</a>","synthetic":true,"types":["openssl_sys::handwritten::types::DSA_METHOD"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.RSA.html\" title=\"enum openssl_sys::RSA\">RSA</a>","synthetic":true,"types":["openssl_sys::handwritten::types::RSA"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.RSA_METHOD.html\" title=\"enum openssl_sys::RSA_METHOD\">RSA_METHOD</a>","synthetic":true,"types":["openssl_sys::handwritten::types::RSA_METHOD"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.EC_KEY.html\" title=\"enum openssl_sys::EC_KEY\">EC_KEY</a>","synthetic":true,"types":["openssl_sys::handwritten::types::EC_KEY"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.X509.html\" title=\"enum openssl_sys::X509\">X509</a>","synthetic":true,"types":["openssl_sys::handwritten::types::X509"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.X509_ALGOR.html\" title=\"enum openssl_sys::X509_ALGOR\">X509_ALGOR</a>","synthetic":true,"types":["openssl_sys::handwritten::types::X509_ALGOR"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.X509_LOOKUP_METHOD.html\" title=\"enum openssl_sys::X509_LOOKUP_METHOD\">X509_LOOKUP_METHOD</a>","synthetic":true,"types":["openssl_sys::handwritten::types::X509_LOOKUP_METHOD"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.X509_NAME.html\" title=\"enum openssl_sys::X509_NAME\">X509_NAME</a>","synthetic":true,"types":["openssl_sys::handwritten::types::X509_NAME"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.X509_STORE.html\" title=\"enum openssl_sys::X509_STORE\">X509_STORE</a>","synthetic":true,"types":["openssl_sys::handwritten::types::X509_STORE"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.X509_STORE_CTX.html\" title=\"enum openssl_sys::X509_STORE_CTX\">X509_STORE_CTX</a>","synthetic":true,"types":["openssl_sys::handwritten::types::X509_STORE_CTX"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.X509_VERIFY_PARAM.html\" title=\"enum openssl_sys::X509_VERIFY_PARAM\">X509_VERIFY_PARAM</a>","synthetic":true,"types":["openssl_sys::handwritten::types::X509_VERIFY_PARAM"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.X509_OBJECT.html\" title=\"enum openssl_sys::X509_OBJECT\">X509_OBJECT</a>","synthetic":true,"types":["openssl_sys::handwritten::types::X509_OBJECT"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.X509_LOOKUP.html\" title=\"enum openssl_sys::X509_LOOKUP\">X509_LOOKUP</a>","synthetic":true,"types":["openssl_sys::handwritten::types::X509_LOOKUP"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl_sys/struct.X509V3_CTX.html\" title=\"struct openssl_sys::X509V3_CTX\">X509V3_CTX</a>","synthetic":true,"types":["openssl_sys::handwritten::types::X509V3_CTX"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.CONF.html\" title=\"enum openssl_sys::CONF\">CONF</a>","synthetic":true,"types":["openssl_sys::handwritten::types::CONF"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.OPENSSL_INIT_SETTINGS.html\" title=\"enum openssl_sys::OPENSSL_INIT_SETTINGS\">OPENSSL_INIT_SETTINGS</a>","synthetic":true,"types":["openssl_sys::handwritten::types::OPENSSL_INIT_SETTINGS"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.ENGINE.html\" title=\"enum openssl_sys::ENGINE\">ENGINE</a>","synthetic":true,"types":["openssl_sys::handwritten::types::ENGINE"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.SSL.html\" title=\"enum openssl_sys::SSL\">SSL</a>","synthetic":true,"types":["openssl_sys::handwritten::types::SSL"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.SSL_CTX.html\" title=\"enum openssl_sys::SSL_CTX\">SSL_CTX</a>","synthetic":true,"types":["openssl_sys::handwritten::types::SSL_CTX"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.COMP_CTX.html\" title=\"enum openssl_sys::COMP_CTX\">COMP_CTX</a>","synthetic":true,"types":["openssl_sys::handwritten::types::COMP_CTX"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.COMP_METHOD.html\" title=\"enum openssl_sys::COMP_METHOD\">COMP_METHOD</a>","synthetic":true,"types":["openssl_sys::handwritten::types::COMP_METHOD"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.CRYPTO_EX_DATA.html\" title=\"enum openssl_sys::CRYPTO_EX_DATA\">CRYPTO_EX_DATA</a>","synthetic":true,"types":["openssl_sys::handwritten::types::CRYPTO_EX_DATA"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.OCSP_RESPONSE.html\" title=\"enum openssl_sys::OCSP_RESPONSE\">OCSP_RESPONSE</a>","synthetic":true,"types":["openssl_sys::handwritten::types::OCSP_RESPONSE"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl_sys/struct.X509_VAL.html\" title=\"struct openssl_sys::X509_VAL\">X509_VAL</a>","synthetic":true,"types":["openssl_sys::handwritten::x509::X509_VAL"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.X509_NAME_ENTRY.html\" title=\"enum openssl_sys::X509_NAME_ENTRY\">X509_NAME_ENTRY</a>","synthetic":true,"types":["openssl_sys::handwritten::x509::X509_NAME_ENTRY"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.stack_st_X509_NAME.html\" title=\"enum openssl_sys::stack_st_X509_NAME\">stack_st_X509_NAME</a>","synthetic":true,"types":["openssl_sys::handwritten::x509::stack_st_X509_NAME"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.X509_EXTENSION.html\" title=\"enum openssl_sys::X509_EXTENSION\">X509_EXTENSION</a>","synthetic":true,"types":["openssl_sys::handwritten::x509::X509_EXTENSION"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.stack_st_X509_EXTENSION.html\" title=\"enum openssl_sys::stack_st_X509_EXTENSION\">stack_st_X509_EXTENSION</a>","synthetic":true,"types":["openssl_sys::handwritten::x509::stack_st_X509_EXTENSION"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.stack_st_X509_ATTRIBUTE.html\" title=\"enum openssl_sys::stack_st_X509_ATTRIBUTE\">stack_st_X509_ATTRIBUTE</a>","synthetic":true,"types":["openssl_sys::handwritten::x509::stack_st_X509_ATTRIBUTE"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.X509_REQ_INFO.html\" title=\"enum openssl_sys::X509_REQ_INFO\">X509_REQ_INFO</a>","synthetic":true,"types":["openssl_sys::handwritten::x509::X509_REQ_INFO"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.X509_CRL.html\" title=\"enum openssl_sys::X509_CRL\">X509_CRL</a>","synthetic":true,"types":["openssl_sys::handwritten::x509::X509_CRL"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.stack_st_X509_CRL.html\" title=\"enum openssl_sys::stack_st_X509_CRL\">stack_st_X509_CRL</a>","synthetic":true,"types":["openssl_sys::handwritten::x509::stack_st_X509_CRL"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.X509_CRL_INFO.html\" title=\"enum openssl_sys::X509_CRL_INFO\">X509_CRL_INFO</a>","synthetic":true,"types":["openssl_sys::handwritten::x509::X509_CRL_INFO"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.X509_REVOKED.html\" title=\"enum openssl_sys::X509_REVOKED\">X509_REVOKED</a>","synthetic":true,"types":["openssl_sys::handwritten::x509::X509_REVOKED"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.stack_st_X509_REVOKED.html\" title=\"enum openssl_sys::stack_st_X509_REVOKED\">stack_st_X509_REVOKED</a>","synthetic":true,"types":["openssl_sys::handwritten::x509::stack_st_X509_REVOKED"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.X509_REQ.html\" title=\"enum openssl_sys::X509_REQ\">X509_REQ</a>","synthetic":true,"types":["openssl_sys::handwritten::x509::X509_REQ"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.X509_CINF.html\" title=\"enum openssl_sys::X509_CINF\">X509_CINF</a>","synthetic":true,"types":["openssl_sys::handwritten::x509::X509_CINF"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.stack_st_X509.html\" title=\"enum openssl_sys::stack_st_X509\">stack_st_X509</a>","synthetic":true,"types":["openssl_sys::handwritten::x509::stack_st_X509"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.stack_st_X509_OBJECT.html\" title=\"enum openssl_sys::stack_st_X509_OBJECT\">stack_st_X509_OBJECT</a>","synthetic":true,"types":["openssl_sys::handwritten::x509::stack_st_X509_OBJECT"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.stack_st_X509_LOOKUP.html\" title=\"enum openssl_sys::stack_st_X509_LOOKUP\">stack_st_X509_LOOKUP</a>","synthetic":true,"types":["openssl_sys::handwritten::x509::stack_st_X509_LOOKUP"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.CONF_METHOD.html\" title=\"enum openssl_sys::CONF_METHOD\">CONF_METHOD</a>","synthetic":true,"types":["openssl_sys::handwritten::x509v3::CONF_METHOD"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl_sys/struct.ACCESS_DESCRIPTION.html\" title=\"struct openssl_sys::ACCESS_DESCRIPTION\">ACCESS_DESCRIPTION</a>","synthetic":true,"types":["openssl_sys::handwritten::x509v3::ACCESS_DESCRIPTION"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.stack_st_ACCESS_DESCRIPTION.html\" title=\"enum openssl_sys::stack_st_ACCESS_DESCRIPTION\">stack_st_ACCESS_DESCRIPTION</a>","synthetic":true,"types":["openssl_sys::handwritten::x509v3::stack_st_ACCESS_DESCRIPTION"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl_sys/struct.AUTHORITY_KEYID.html\" title=\"struct openssl_sys::AUTHORITY_KEYID\">AUTHORITY_KEYID</a>","synthetic":true,"types":["openssl_sys::handwritten::x509v3::AUTHORITY_KEYID"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.EVP_PKEY.html\" title=\"enum openssl_sys::EVP_PKEY\">EVP_PKEY</a>","synthetic":true,"types":["openssl_sys::types::EVP_PKEY"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl_sys/struct.GENERAL_NAME.html\" title=\"struct openssl_sys::GENERAL_NAME\">GENERAL_NAME</a>","synthetic":true,"types":["openssl_sys::x509v3::GENERAL_NAME"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.stack_st_GENERAL_NAME.html\" title=\"enum openssl_sys::stack_st_GENERAL_NAME\">stack_st_GENERAL_NAME</a>","synthetic":true,"types":["openssl_sys::x509v3::stack_st_GENERAL_NAME"]}];
implementors["ordered_float"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"ordered_float/struct.OrderedFloat.html\" title=\"struct ordered_float::OrderedFloat\">OrderedFloat</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["ordered_float::OrderedFloat"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"ordered_float/struct.NotNan.html\" title=\"struct ordered_float::NotNan\">NotNan</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["ordered_float::NotNan"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ordered_float/struct.FloatIsNan.html\" title=\"struct ordered_float::FloatIsNan\">FloatIsNan</a>","synthetic":true,"types":["ordered_float::FloatIsNan"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"enum\" href=\"ordered_float/enum.ParseNotNanError.html\" title=\"enum ordered_float::ParseNotNanError\">ParseNotNanError</a>&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":["ordered_float::ParseNotNanError"]}];
implementors["os_str_bytes"] = [{"text":"impl&lt;'a, P&gt; Freeze for <a class=\"struct\" href=\"os_str_bytes/iter/struct.Split.html\" title=\"struct os_str_bytes::iter::Split\">Split</a>&lt;'a, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as <a class=\"trait\" href=\"os_str_bytes/trait.Pattern.html\" title=\"trait os_str_bytes::Pattern\">Pattern</a>&gt;::<a class=\"associatedtype\" href=\"os_str_bytes/trait.Pattern.html#associatedtype.__Encoded\" title=\"type os_str_bytes::Pattern::__Encoded\">__Encoded</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["os_str_bytes::iter::Split"]},{"text":"impl Freeze for <a class=\"struct\" href=\"os_str_bytes/struct.RawOsStr.html\" title=\"struct os_str_bytes::RawOsStr\">RawOsStr</a>","synthetic":true,"types":["os_str_bytes::raw_str::RawOsStr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"os_str_bytes/struct.RawOsString.html\" title=\"struct os_str_bytes::RawOsString\">RawOsString</a>","synthetic":true,"types":["os_str_bytes::raw_str::RawOsString"]},{"text":"impl Freeze for <a class=\"struct\" href=\"os_str_bytes/struct.EncodingError.html\" title=\"struct os_str_bytes::EncodingError\">EncodingError</a>","synthetic":true,"types":["os_str_bytes::EncodingError"]}];
implementors["parking_lot"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"parking_lot/struct.WaitTimeoutResult.html\" title=\"struct parking_lot::WaitTimeoutResult\">WaitTimeoutResult</a>","synthetic":true,"types":["parking_lot::condvar::WaitTimeoutResult"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"parking_lot/struct.Condvar.html\" title=\"struct parking_lot::Condvar\">Condvar</a>","synthetic":true,"types":["parking_lot::condvar::Condvar"]},{"text":"impl Freeze for <a class=\"enum\" href=\"parking_lot/enum.OnceState.html\" title=\"enum parking_lot::OnceState\">OnceState</a>","synthetic":true,"types":["parking_lot::once::OnceState"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"parking_lot/struct.Once.html\" title=\"struct parking_lot::Once\">Once</a>","synthetic":true,"types":["parking_lot::once::Once"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"parking_lot/struct.RawFairMutex.html\" title=\"struct parking_lot::RawFairMutex\">RawFairMutex</a>","synthetic":true,"types":["parking_lot::raw_fair_mutex::RawFairMutex"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"parking_lot/struct.RawMutex.html\" title=\"struct parking_lot::RawMutex\">RawMutex</a>","synthetic":true,"types":["parking_lot::raw_mutex::RawMutex"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"parking_lot/struct.RawRwLock.html\" title=\"struct parking_lot::RawRwLock\">RawRwLock</a>","synthetic":true,"types":["parking_lot::raw_rwlock::RawRwLock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"parking_lot/struct.RawThreadId.html\" title=\"struct parking_lot::RawThreadId\">RawThreadId</a>","synthetic":true,"types":["parking_lot::remutex::RawThreadId"]}];
implementors["parking_lot_core"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"parking_lot_core/enum.ParkResult.html\" title=\"enum parking_lot_core::ParkResult\">ParkResult</a>","synthetic":true,"types":["parking_lot_core::parking_lot::ParkResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"parking_lot_core/struct.UnparkResult.html\" title=\"struct parking_lot_core::UnparkResult\">UnparkResult</a>","synthetic":true,"types":["parking_lot_core::parking_lot::UnparkResult"]},{"text":"impl Freeze for <a class=\"enum\" href=\"parking_lot_core/enum.RequeueOp.html\" title=\"enum parking_lot_core::RequeueOp\">RequeueOp</a>","synthetic":true,"types":["parking_lot_core::parking_lot::RequeueOp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"parking_lot_core/enum.FilterOp.html\" title=\"enum parking_lot_core::FilterOp\">FilterOp</a>","synthetic":true,"types":["parking_lot_core::parking_lot::FilterOp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"parking_lot_core/struct.UnparkToken.html\" title=\"struct parking_lot_core::UnparkToken\">UnparkToken</a>","synthetic":true,"types":["parking_lot_core::parking_lot::UnparkToken"]},{"text":"impl Freeze for <a class=\"struct\" href=\"parking_lot_core/struct.ParkToken.html\" title=\"struct parking_lot_core::ParkToken\">ParkToken</a>","synthetic":true,"types":["parking_lot_core::parking_lot::ParkToken"]},{"text":"impl Freeze for <a class=\"struct\" href=\"parking_lot_core/struct.SpinWait.html\" title=\"struct parking_lot_core::SpinWait\">SpinWait</a>","synthetic":true,"types":["parking_lot_core::spinwait::SpinWait"]}];
implementors["percent_encoding"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"percent_encoding/struct.AsciiSet.html\" title=\"struct percent_encoding::AsciiSet\">AsciiSet</a>","synthetic":true,"types":["percent_encoding::AsciiSet"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"percent_encoding/struct.PercentEncode.html\" title=\"struct percent_encoding::PercentEncode\">PercentEncode</a>&lt;'a&gt;","synthetic":true,"types":["percent_encoding::PercentEncode"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"percent_encoding/struct.PercentDecode.html\" title=\"struct percent_encoding::PercentDecode\">PercentDecode</a>&lt;'a&gt;","synthetic":true,"types":["percent_encoding::PercentDecode"]}];
implementors["pest"] = [{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"pest/error/struct.Error.html\" title=\"struct pest::error::Error\">Error</a>&lt;R&gt;","synthetic":true,"types":["pest::error::Error"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"enum\" href=\"pest/error/enum.ErrorVariant.html\" title=\"enum pest::error::ErrorVariant\">ErrorVariant</a>&lt;R&gt;","synthetic":true,"types":["pest::error::ErrorVariant"]},{"text":"impl Freeze for <a class=\"enum\" href=\"pest/error/enum.InputLocation.html\" title=\"enum pest::error::InputLocation\">InputLocation</a>","synthetic":true,"types":["pest::error::InputLocation"]},{"text":"impl Freeze for <a class=\"enum\" href=\"pest/error/enum.LineColLocation.html\" title=\"enum pest::error::LineColLocation\">LineColLocation</a>","synthetic":true,"types":["pest::error::LineColLocation"]},{"text":"impl&lt;'i, R&gt; Freeze for <a class=\"struct\" href=\"pest/iterators/struct.FlatPairs.html\" title=\"struct pest::iterators::FlatPairs\">FlatPairs</a>&lt;'i, R&gt;","synthetic":true,"types":["pest::iterators::flat_pairs::FlatPairs"]},{"text":"impl&lt;'i, R&gt; Freeze for <a class=\"struct\" href=\"pest/iterators/struct.Pair.html\" title=\"struct pest::iterators::Pair\">Pair</a>&lt;'i, R&gt;","synthetic":true,"types":["pest::iterators::pair::Pair"]},{"text":"impl&lt;'i, R&gt; Freeze for <a class=\"struct\" href=\"pest/iterators/struct.Pairs.html\" title=\"struct pest::iterators::Pairs\">Pairs</a>&lt;'i, R&gt;","synthetic":true,"types":["pest::iterators::pairs::Pairs"]},{"text":"impl&lt;'i, R&gt; Freeze for <a class=\"struct\" href=\"pest/iterators/struct.Tokens.html\" title=\"struct pest::iterators::Tokens\">Tokens</a>&lt;'i, R&gt;","synthetic":true,"types":["pest::iterators::tokens::Tokens"]},{"text":"impl Freeze for <a class=\"enum\" href=\"pest/enum.Lookahead.html\" title=\"enum pest::Lookahead\">Lookahead</a>","synthetic":true,"types":["pest::parser_state::Lookahead"]},{"text":"impl Freeze for <a class=\"enum\" href=\"pest/enum.Atomicity.html\" title=\"enum pest::Atomicity\">Atomicity</a>","synthetic":true,"types":["pest::parser_state::Atomicity"]},{"text":"impl Freeze for <a class=\"enum\" href=\"pest/enum.MatchDir.html\" title=\"enum pest::MatchDir\">MatchDir</a>","synthetic":true,"types":["pest::parser_state::MatchDir"]},{"text":"impl&lt;'i, R&gt; Freeze for <a class=\"struct\" href=\"pest/struct.ParserState.html\" title=\"struct pest::ParserState\">ParserState</a>&lt;'i, R&gt;","synthetic":true,"types":["pest::parser_state::ParserState"]},{"text":"impl&lt;'i&gt; Freeze for <a class=\"struct\" href=\"pest/struct.Position.html\" title=\"struct pest::Position\">Position</a>&lt;'i&gt;","synthetic":true,"types":["pest::position::Position"]},{"text":"impl Freeze for <a class=\"enum\" href=\"pest/prec_climber/enum.Assoc.html\" title=\"enum pest::prec_climber::Assoc\">Assoc</a>","synthetic":true,"types":["pest::prec_climber::Assoc"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"pest/prec_climber/struct.Operator.html\" title=\"struct pest::prec_climber::Operator\">Operator</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["pest::prec_climber::Operator"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"pest/prec_climber/struct.PrecClimber.html\" title=\"struct pest::prec_climber::PrecClimber\">PrecClimber</a>&lt;R&gt;","synthetic":true,"types":["pest::prec_climber::PrecClimber"]},{"text":"impl&lt;'i&gt; Freeze for <a class=\"struct\" href=\"pest/struct.Span.html\" title=\"struct pest::Span\">Span</a>&lt;'i&gt;","synthetic":true,"types":["pest::span::Span"]},{"text":"impl&lt;'i&gt; Freeze for <a class=\"struct\" href=\"pest/struct.Lines.html\" title=\"struct pest::Lines\">Lines</a>&lt;'i&gt;","synthetic":true,"types":["pest::span::Lines"]},{"text":"impl&lt;'i, R&gt; Freeze for <a class=\"enum\" href=\"pest/enum.Token.html\" title=\"enum pest::Token\">Token</a>&lt;'i, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["pest::token::Token"]}];
implementors["pest_meta"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"pest_meta/ast/struct.Rule.html\" title=\"struct pest_meta::ast::Rule\">Rule</a>","synthetic":true,"types":["pest_meta::ast::Rule"]},{"text":"impl Freeze for <a class=\"enum\" href=\"pest_meta/ast/enum.RuleType.html\" title=\"enum pest_meta::ast::RuleType\">RuleType</a>","synthetic":true,"types":["pest_meta::ast::RuleType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"pest_meta/ast/enum.Expr.html\" title=\"enum pest_meta::ast::Expr\">Expr</a>","synthetic":true,"types":["pest_meta::ast::Expr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pest_meta/ast/struct.ExprTopDownIterator.html\" title=\"struct pest_meta::ast::ExprTopDownIterator\">ExprTopDownIterator</a>","synthetic":true,"types":["pest_meta::ast::ExprTopDownIterator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pest_meta/optimizer/struct.OptimizedRule.html\" title=\"struct pest_meta::optimizer::OptimizedRule\">OptimizedRule</a>","synthetic":true,"types":["pest_meta::optimizer::OptimizedRule"]},{"text":"impl Freeze for <a class=\"enum\" href=\"pest_meta/optimizer/enum.OptimizedExpr.html\" title=\"enum pest_meta::optimizer::OptimizedExpr\">OptimizedExpr</a>","synthetic":true,"types":["pest_meta::optimizer::OptimizedExpr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pest_meta/optimizer/struct.OptimizedExprTopDownIterator.html\" title=\"struct pest_meta::optimizer::OptimizedExprTopDownIterator\">OptimizedExprTopDownIterator</a>","synthetic":true,"types":["pest_meta::optimizer::OptimizedExprTopDownIterator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pest_meta/parser/struct.PestParser.html\" title=\"struct pest_meta::parser::PestParser\">PestParser</a>","synthetic":true,"types":["pest_meta::parser::PestParser"]},{"text":"impl Freeze for <a class=\"enum\" href=\"pest_meta/parser/enum.Rule.html\" title=\"enum pest_meta::parser::Rule\">Rule</a>","synthetic":true,"types":["pest_meta::parser::Rule"]},{"text":"impl&lt;'i&gt; Freeze for <a class=\"struct\" href=\"pest_meta/parser/struct.ParserRule.html\" title=\"struct pest_meta::parser::ParserRule\">ParserRule</a>&lt;'i&gt;","synthetic":true,"types":["pest_meta::parser::ParserRule"]},{"text":"impl&lt;'i&gt; Freeze for <a class=\"struct\" href=\"pest_meta/parser/struct.ParserNode.html\" title=\"struct pest_meta::parser::ParserNode\">ParserNode</a>&lt;'i&gt;","synthetic":true,"types":["pest_meta::parser::ParserNode"]},{"text":"impl&lt;'i&gt; Freeze for <a class=\"enum\" href=\"pest_meta/parser/enum.ParserExpr.html\" title=\"enum pest_meta::parser::ParserExpr\">ParserExpr</a>&lt;'i&gt;","synthetic":true,"types":["pest_meta::parser::ParserExpr"]}];
implementors["petgraph"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.Time.html\" title=\"struct petgraph::visit::Time\">Time</a>","synthetic":true,"types":["petgraph::visit::dfsvisit::Time"]},{"text":"impl&lt;N&gt; Freeze for <a class=\"enum\" href=\"petgraph/visit/enum.DfsEvent.html\" title=\"enum petgraph::visit::DfsEvent\">DfsEvent</a>&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::dfsvisit::DfsEvent"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"enum\" href=\"petgraph/visit/enum.Control.html\" title=\"enum petgraph::visit::Control\">Control</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::dfsvisit::Control"]},{"text":"impl&lt;N, VM&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.Dfs.html\" title=\"struct petgraph::visit::Dfs\">Dfs</a>&lt;N, VM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;VM: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::traversal::Dfs"]},{"text":"impl&lt;N, VM&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.DfsPostOrder.html\" title=\"struct petgraph::visit::DfsPostOrder\">DfsPostOrder</a>&lt;N, VM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;VM: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::traversal::DfsPostOrder"]},{"text":"impl&lt;N, VM&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.Bfs.html\" title=\"struct petgraph::visit::Bfs\">Bfs</a>&lt;N, VM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;VM: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::traversal::Bfs"]},{"text":"impl&lt;N, VM&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.Topo.html\" title=\"struct petgraph::visit::Topo\">Topo</a>&lt;N, VM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;VM: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::traversal::Topo"]},{"text":"impl&lt;W, C&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.WalkerIter.html\" title=\"struct petgraph::visit::WalkerIter\">WalkerIter</a>&lt;W, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::traversal::WalkerIter"]},{"text":"impl&lt;G, F&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.NodeFiltered.html\" title=\"struct petgraph::visit::NodeFiltered\">NodeFiltered</a>&lt;G, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::filter::NodeFiltered"]},{"text":"impl&lt;'a, I, F&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.NodeFilteredNeighbors.html\" title=\"struct petgraph::visit::NodeFilteredNeighbors\">NodeFilteredNeighbors</a>&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::filter::NodeFilteredNeighbors"]},{"text":"impl&lt;'a, I, F&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.NodeFilteredNodes.html\" title=\"struct petgraph::visit::NodeFilteredNodes\">NodeFilteredNodes</a>&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::filter::NodeFilteredNodes"]},{"text":"impl&lt;'a, G, I, F&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.NodeFilteredEdgeReferences.html\" title=\"struct petgraph::visit::NodeFilteredEdgeReferences\">NodeFilteredEdgeReferences</a>&lt;'a, G, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::filter::NodeFilteredEdgeReferences"]},{"text":"impl&lt;'a, G, I, F&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.NodeFilteredEdges.html\" title=\"struct petgraph::visit::NodeFilteredEdges\">NodeFilteredEdges</a>&lt;'a, G, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::filter::NodeFilteredEdges"]},{"text":"impl&lt;G, F&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.EdgeFiltered.html\" title=\"struct petgraph::visit::EdgeFiltered\">EdgeFiltered</a>&lt;G, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::filter::EdgeFiltered"]},{"text":"impl&lt;'a, G, F&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.EdgeFilteredNeighbors.html\" title=\"struct petgraph::visit::EdgeFilteredNeighbors\">EdgeFilteredNeighbors</a>&lt;'a, G, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as <a class=\"trait\" href=\"petgraph/visit/trait.IntoEdges.html\" title=\"trait petgraph::visit::IntoEdges\">IntoEdges</a>&gt;::<a class=\"associatedtype\" href=\"petgraph/visit/trait.IntoEdges.html#associatedtype.Edges\" title=\"type petgraph::visit::IntoEdges::Edges\">Edges</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::filter::EdgeFilteredNeighbors"]},{"text":"impl&lt;'a, G, I, F&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.EdgeFilteredEdges.html\" title=\"struct petgraph::visit::EdgeFilteredEdges\">EdgeFilteredEdges</a>&lt;'a, G, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::filter::EdgeFilteredEdges"]},{"text":"impl&lt;'a, G, F&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.EdgeFilteredNeighborsDirected.html\" title=\"struct petgraph::visit::EdgeFilteredNeighborsDirected\">EdgeFilteredNeighborsDirected</a>&lt;'a, G, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as <a class=\"trait\" href=\"petgraph/visit/trait.IntoEdgesDirected.html\" title=\"trait petgraph::visit::IntoEdgesDirected\">IntoEdgesDirected</a>&gt;::<a class=\"associatedtype\" href=\"petgraph/visit/trait.IntoEdgesDirected.html#associatedtype.EdgesDirected\" title=\"type petgraph::visit::IntoEdgesDirected::EdgesDirected\">EdgesDirected</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as <a class=\"trait\" href=\"petgraph/visit/trait.GraphBase.html\" title=\"trait petgraph::visit::GraphBase\">GraphBase</a>&gt;::<a class=\"associatedtype\" href=\"petgraph/visit/trait.GraphBase.html#associatedtype.NodeId\" title=\"type petgraph::visit::GraphBase::NodeId\">NodeId</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::filter::EdgeFilteredNeighborsDirected"]},{"text":"impl&lt;G&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.Reversed.html\" title=\"struct petgraph::visit::Reversed\">Reversed</a>&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::reversed::Reversed"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.ReversedEdges.html\" title=\"struct petgraph::visit::ReversedEdges\">ReversedEdges</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::reversed::ReversedEdges"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.ReversedEdgeReference.html\" title=\"struct petgraph::visit::ReversedEdgeReference\">ReversedEdgeReference</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::reversed::ReversedEdgeReference"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.ReversedEdgeReferences.html\" title=\"struct petgraph::visit::ReversedEdgeReferences\">ReversedEdgeReferences</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::reversed::ReversedEdgeReferences"]},{"text":"impl&lt;N, E&gt; Freeze for <a class=\"enum\" href=\"petgraph/data/enum.Element.html\" title=\"enum petgraph::data::Element\">Element</a>&lt;N, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::data::Element"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"petgraph/data/struct.FilterElements.html\" title=\"struct petgraph::data::FilterElements\">FilterElements</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::data::FilterElements"]},{"text":"impl&lt;Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/adj/struct.EdgeIndex.html\" title=\"struct petgraph::adj::EdgeIndex\">EdgeIndex</a>&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::adj::EdgeIndex"]},{"text":"impl&lt;Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/adj/struct.OutgoingEdgeIndices.html\" title=\"struct petgraph::adj::OutgoingEdgeIndices\">OutgoingEdgeIndices</a>&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::adj::OutgoingEdgeIndices"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/adj/struct.Neighbors.html\" title=\"struct petgraph::adj::Neighbors\">Neighbors</a>&lt;'a, E, Ix&gt;","synthetic":true,"types":["petgraph::adj::Neighbors"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/adj/struct.EdgeReference.html\" title=\"struct petgraph::adj::EdgeReference\">EdgeReference</a>&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::adj::EdgeReference"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/adj/struct.EdgeIndices.html\" title=\"struct petgraph::adj::EdgeIndices\">EdgeIndices</a>&lt;'a, E, Ix&gt;","synthetic":true,"types":["petgraph::adj::EdgeIndices"]},{"text":"impl&lt;Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/adj/struct.NodeIndices.html\" title=\"struct petgraph::adj::NodeIndices\">NodeIndices</a>&lt;Ix&gt;","synthetic":true,"types":["petgraph::adj::NodeIndices"]},{"text":"impl&lt;E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/adj/struct.List.html\" title=\"struct petgraph::adj::List\">List</a>&lt;E, Ix&gt;","synthetic":true,"types":["petgraph::adj::List"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/adj/struct.EdgeReferences.html\" title=\"struct petgraph::adj::EdgeReferences\">EdgeReferences</a>&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::adj::EdgeReferences"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/adj/struct.OutgoingEdgeReferences.html\" title=\"struct petgraph::adj::OutgoingEdgeReferences\">OutgoingEdgeReferences</a>&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::adj::OutgoingEdgeReferences"]},{"text":"impl&lt;NodeId, EdgeWeight&gt; Freeze for <a class=\"struct\" href=\"petgraph/algo/bellman_ford/struct.Paths.html\" title=\"struct petgraph::algo::bellman_ford::Paths\">Paths</a>&lt;NodeId, EdgeWeight&gt;","synthetic":true,"types":["petgraph::algo::bellman_ford::Paths"]},{"text":"impl&lt;N&gt; Freeze for <a class=\"struct\" href=\"petgraph/algo/dominators/struct.Dominators.html\" title=\"struct petgraph::algo::dominators::Dominators\">Dominators</a>&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::algo::dominators::Dominators"]},{"text":"impl&lt;'a, N&gt; Freeze for <a class=\"struct\" href=\"petgraph/algo/dominators/struct.DominatorsIter.html\" title=\"struct petgraph::algo::dominators::DominatorsIter\">DominatorsIter</a>&lt;'a, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::algo::dominators::DominatorsIter"]},{"text":"impl&lt;'a, N&gt; Freeze for <a class=\"struct\" href=\"petgraph/algo/dominators/struct.DominatedByIter.html\" title=\"struct petgraph::algo::dominators::DominatedByIter\">DominatedByIter</a>&lt;'a, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::algo::dominators::DominatedByIter"]},{"text":"impl&lt;G&gt; Freeze for <a class=\"struct\" href=\"petgraph/algo/matching/struct.Matching.html\" title=\"struct petgraph::algo::matching::Matching\">Matching</a>&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::algo::matching::Matching"]},{"text":"impl&lt;'a, G&gt; Freeze for <a class=\"struct\" href=\"petgraph/algo/matching/struct.MatchedNodes.html\" title=\"struct petgraph::algo::matching::MatchedNodes\">MatchedNodes</a>&lt;'a, G&gt;","synthetic":true,"types":["petgraph::algo::matching::MatchedNodes"]},{"text":"impl&lt;'a, G&gt; Freeze for <a class=\"struct\" href=\"petgraph/algo/matching/struct.MatchedEdges.html\" title=\"struct petgraph::algo::matching::MatchedEdges\">MatchedEdges</a>&lt;'a, G&gt;","synthetic":true,"types":["petgraph::algo::matching::MatchedEdges"]},{"text":"impl&lt;N, VM&gt; Freeze for <a class=\"struct\" href=\"petgraph/algo/struct.DfsSpace.html\" title=\"struct petgraph::algo::DfsSpace\">DfsSpace</a>&lt;N, VM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;VM: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::algo::DfsSpace"]},{"text":"impl&lt;N&gt; Freeze for <a class=\"struct\" href=\"petgraph/algo/struct.TarjanScc.html\" title=\"struct petgraph::algo::TarjanScc\">TarjanScc</a>&lt;N&gt;","synthetic":true,"types":["petgraph::algo::TarjanScc"]},{"text":"impl&lt;G&gt; Freeze for <a class=\"struct\" href=\"petgraph/algo/struct.MinSpanningTree.html\" title=\"struct petgraph::algo::MinSpanningTree\">MinSpanningTree</a>&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as <a class=\"trait\" href=\"petgraph/visit/trait.IntoNodeReferences.html\" title=\"trait petgraph::visit::IntoNodeReferences\">IntoNodeReferences</a>&gt;::<a class=\"associatedtype\" href=\"petgraph/visit/trait.IntoNodeReferences.html#associatedtype.NodeReferences\" title=\"type petgraph::visit::IntoNodeReferences::NodeReferences\">NodeReferences</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::algo::MinSpanningTree"]},{"text":"impl&lt;N&gt; Freeze for <a class=\"struct\" href=\"petgraph/algo/struct.Cycle.html\" title=\"struct petgraph::algo::Cycle\">Cycle</a>&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::algo::Cycle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"petgraph/algo/struct.NegativeCycle.html\" title=\"struct petgraph::algo::NegativeCycle\">NegativeCycle</a>","synthetic":true,"types":["petgraph::algo::NegativeCycle"]},{"text":"impl&lt;N, E, Ty, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/csr/struct.Csr.html\" title=\"struct petgraph::csr::Csr\">Csr</a>&lt;N, E, Ty, Ix&gt;","synthetic":true,"types":["petgraph::csr::Csr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"petgraph/csr/struct.EdgesNotSorted.html\" title=\"struct petgraph::csr::EdgesNotSorted\">EdgesNotSorted</a>","synthetic":true,"types":["petgraph::csr::EdgesNotSorted"]},{"text":"impl&lt;'a, E, Ty, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/csr/struct.Edges.html\" title=\"struct petgraph::csr::Edges\">Edges</a>&lt;'a, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::csr::Edges"]},{"text":"impl&lt;'a, E, Ty, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/csr/struct.EdgeReference.html\" title=\"struct petgraph::csr::EdgeReference\">EdgeReference</a>&lt;'a, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::csr::EdgeReference"]},{"text":"impl&lt;'a, E, Ty, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/csr/struct.EdgeReferences.html\" title=\"struct petgraph::csr::EdgeReferences\">EdgeReferences</a>&lt;'a, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::csr::EdgeReferences"]},{"text":"impl&lt;'a, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/csr/struct.Neighbors.html\" title=\"struct petgraph::csr::Neighbors\">Neighbors</a>&lt;'a, Ix&gt;","synthetic":true,"types":["petgraph::csr::Neighbors"]},{"text":"impl&lt;Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/csr/struct.NodeIdentifiers.html\" title=\"struct petgraph::csr::NodeIdentifiers\">NodeIdentifiers</a>&lt;Ix&gt;","synthetic":true,"types":["petgraph::csr::NodeIdentifiers"]},{"text":"impl&lt;'a, N, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/csr/struct.NodeReferences.html\" title=\"struct petgraph::csr::NodeReferences\">NodeReferences</a>&lt;'a, N, Ix&gt;","synthetic":true,"types":["petgraph::csr::NodeReferences"]},{"text":"impl&lt;'a, G&gt; Freeze for <a class=\"struct\" href=\"petgraph/dot/struct.Dot.html\" title=\"struct petgraph::dot::Dot\">Dot</a>&lt;'a, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::dot::Dot"]},{"text":"impl Freeze for <a class=\"enum\" href=\"petgraph/dot/enum.Config.html\" title=\"enum petgraph::dot::Config\">Config</a>","synthetic":true,"types":["petgraph::dot::Config"]},{"text":"impl&lt;N, E, Ty, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/stable_graph/struct.StableGraph.html\" title=\"struct petgraph::stable_graph::StableGraph\">StableGraph</a>&lt;N, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::stable_graph::StableGraph"]},{"text":"impl&lt;'a, N, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/stable_graph/struct.NodeReferences.html\" title=\"struct petgraph::stable_graph::NodeReferences\">NodeReferences</a>&lt;'a, N, Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::stable_graph::NodeReferences"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/stable_graph/struct.EdgeReference.html\" title=\"struct petgraph::stable_graph::EdgeReference\">EdgeReference</a>&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::stable_graph::EdgeReference"]},{"text":"impl&lt;'a, E, Ty, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/stable_graph/struct.Edges.html\" title=\"struct petgraph::stable_graph::Edges\">Edges</a>&lt;'a, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::stable_graph::Edges"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/stable_graph/struct.EdgeReferences.html\" title=\"struct petgraph::stable_graph::EdgeReferences\">EdgeReferences</a>&lt;'a, E, Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::stable_graph::EdgeReferences"]},{"text":"impl&lt;'a, N, Ty, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/stable_graph/struct.Externals.html\" title=\"struct petgraph::stable_graph::Externals\">Externals</a>&lt;'a, N, Ty, Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::stable_graph::Externals"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/stable_graph/struct.Neighbors.html\" title=\"struct petgraph::stable_graph::Neighbors\">Neighbors</a>&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::stable_graph::Neighbors"]},{"text":"impl&lt;Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/stable_graph/struct.WalkNeighbors.html\" title=\"struct petgraph::stable_graph::WalkNeighbors\">WalkNeighbors</a>&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::stable_graph::WalkNeighbors"]},{"text":"impl&lt;'a, N, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/stable_graph/struct.NodeIndices.html\" title=\"struct petgraph::stable_graph::NodeIndices\">NodeIndices</a>&lt;'a, N, Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::stable_graph::NodeIndices"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/stable_graph/struct.EdgeIndices.html\" title=\"struct petgraph::stable_graph::EdgeIndices\">EdgeIndices</a>&lt;'a, E, Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::stable_graph::EdgeIndices"]},{"text":"impl&lt;Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.NodeIndex.html\" title=\"struct petgraph::graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::NodeIndex"]},{"text":"impl&lt;Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.EdgeIndex.html\" title=\"struct petgraph::graph::EdgeIndex\">EdgeIndex</a>&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::EdgeIndex"]},{"text":"impl&lt;N, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.Node.html\" title=\"struct petgraph::graph::Node\">Node</a>&lt;N, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::Node"]},{"text":"impl&lt;E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.Edge.html\" title=\"struct petgraph::graph::Edge\">Edge</a>&lt;E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::Edge"]},{"text":"impl&lt;N, E, Ty, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.Graph.html\" title=\"struct petgraph::graph::Graph\">Graph</a>&lt;N, E, Ty, Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::Graph"]},{"text":"impl&lt;'a, N, Ty, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.Externals.html\" title=\"struct petgraph::graph::Externals\">Externals</a>&lt;'a, N, Ty, Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::Externals"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.Neighbors.html\" title=\"struct petgraph::graph::Neighbors\">Neighbors</a>&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::Neighbors"]},{"text":"impl&lt;'a, E, Ty, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.Edges.html\" title=\"struct petgraph::graph::Edges\">Edges</a>&lt;'a, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::Edges"]},{"text":"impl&lt;'a, E, Ty, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.EdgesConnecting.html\" title=\"struct petgraph::graph::EdgesConnecting\">EdgesConnecting</a>&lt;'a, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::EdgesConnecting"]},{"text":"impl&lt;'a, N, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.NodeWeightsMut.html\" title=\"struct petgraph::graph::NodeWeightsMut\">NodeWeightsMut</a>&lt;'a, N, Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::NodeWeightsMut"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.EdgeWeightsMut.html\" title=\"struct petgraph::graph::EdgeWeightsMut\">EdgeWeightsMut</a>&lt;'a, E, Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::EdgeWeightsMut"]},{"text":"impl&lt;Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.WalkNeighbors.html\" title=\"struct petgraph::graph::WalkNeighbors\">WalkNeighbors</a>&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::WalkNeighbors"]},{"text":"impl&lt;Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.NodeIndices.html\" title=\"struct petgraph::graph::NodeIndices\">NodeIndices</a>&lt;Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::NodeIndices"]},{"text":"impl&lt;Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.EdgeIndices.html\" title=\"struct petgraph::graph::EdgeIndices\">EdgeIndices</a>&lt;Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::EdgeIndices"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.EdgeReference.html\" title=\"struct petgraph::graph::EdgeReference\">EdgeReference</a>&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::EdgeReference"]},{"text":"impl&lt;'a, N, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.NodeReferences.html\" title=\"struct petgraph::graph::NodeReferences\">NodeReferences</a>&lt;'a, N, Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::NodeReferences"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.EdgeReferences.html\" title=\"struct petgraph::graph::EdgeReferences\">EdgeReferences</a>&lt;'a, E, Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::EdgeReferences"]},{"text":"impl&lt;'a, G&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.Frozen.html\" title=\"struct petgraph::graph::Frozen\">Frozen</a>&lt;'a, G&gt;","synthetic":true,"types":["petgraph::graph_impl::Frozen"]},{"text":"impl&lt;N, E, Ty&gt; Freeze for <a class=\"struct\" href=\"petgraph/graphmap/struct.GraphMap.html\" title=\"struct petgraph::graphmap::GraphMap\">GraphMap</a>&lt;N, E, Ty&gt;","synthetic":true,"types":["petgraph::graphmap::GraphMap"]},{"text":"impl&lt;'a, N&gt; Freeze for <a class=\"struct\" href=\"petgraph/graphmap/struct.Nodes.html\" title=\"struct petgraph::graphmap::Nodes\">Nodes</a>&lt;'a, N&gt;","synthetic":true,"types":["petgraph::graphmap::Nodes"]},{"text":"impl&lt;'a, N, Ty&gt; Freeze for <a class=\"struct\" href=\"petgraph/graphmap/struct.Neighbors.html\" title=\"struct petgraph::graphmap::Neighbors\">Neighbors</a>&lt;'a, N, Ty&gt;","synthetic":true,"types":["petgraph::graphmap::Neighbors"]},{"text":"impl&lt;'a, N, Ty&gt; Freeze for <a class=\"struct\" href=\"petgraph/graphmap/struct.NeighborsDirected.html\" title=\"struct petgraph::graphmap::NeighborsDirected\">NeighborsDirected</a>&lt;'a, N, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graphmap::NeighborsDirected"]},{"text":"impl&lt;'a, N, E, Ty&gt; Freeze for <a class=\"struct\" href=\"petgraph/graphmap/struct.Edges.html\" title=\"struct petgraph::graphmap::Edges\">Edges</a>&lt;'a, N, E, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graphmap::Edges"]},{"text":"impl&lt;'a, N, E, Ty&gt; Freeze for <a class=\"struct\" href=\"petgraph/graphmap/struct.EdgesDirected.html\" title=\"struct petgraph::graphmap::EdgesDirected\">EdgesDirected</a>&lt;'a, N, E, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graphmap::EdgesDirected"]},{"text":"impl&lt;'a, N, E, Ty&gt; Freeze for <a class=\"struct\" href=\"petgraph/graphmap/struct.AllEdges.html\" title=\"struct petgraph::graphmap::AllEdges\">AllEdges</a>&lt;'a, N, E, Ty&gt;","synthetic":true,"types":["petgraph::graphmap::AllEdges"]},{"text":"impl&lt;'a, N, E, Ty&gt; Freeze for <a class=\"struct\" href=\"petgraph/graphmap/struct.AllEdgesMut.html\" title=\"struct petgraph::graphmap::AllEdgesMut\">AllEdgesMut</a>&lt;'a, N, E, Ty&gt;","synthetic":true,"types":["petgraph::graphmap::AllEdgesMut"]},{"text":"impl&lt;'b, T&gt; Freeze for <a class=\"struct\" href=\"petgraph/graphmap/struct.Ptr.html\" title=\"struct petgraph::graphmap::Ptr\">Ptr</a>&lt;'b, T&gt;","synthetic":true,"types":["petgraph::graphmap::Ptr"]},{"text":"impl&lt;'a, N, E, Ty&gt; Freeze for <a class=\"struct\" href=\"petgraph/graphmap/struct.NodeIdentifiers.html\" title=\"struct petgraph::graphmap::NodeIdentifiers\">NodeIdentifiers</a>&lt;'a, N, E, Ty&gt;","synthetic":true,"types":["petgraph::graphmap::NodeIdentifiers"]},{"text":"impl&lt;'a, N, E, Ty&gt; Freeze for <a class=\"struct\" href=\"petgraph/graphmap/struct.NodeReferences.html\" title=\"struct petgraph::graphmap::NodeReferences\">NodeReferences</a>&lt;'a, N, E, Ty&gt;","synthetic":true,"types":["petgraph::graphmap::NodeReferences"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.NotZero.html\" title=\"struct petgraph::matrix_graph::NotZero\">NotZero</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::matrix_graph::NotZero"]},{"text":"impl&lt;N, E, Ty, Null, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.MatrixGraph.html\" title=\"struct petgraph::matrix_graph::MatrixGraph\">MatrixGraph</a>&lt;N, E, Ty, Null, Ix&gt;","synthetic":true,"types":["petgraph::matrix_graph::MatrixGraph"]},{"text":"impl&lt;'a, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.NodeIdentifiers.html\" title=\"struct petgraph::matrix_graph::NodeIdentifiers\">NodeIdentifiers</a>&lt;'a, Ix&gt;","synthetic":true,"types":["petgraph::matrix_graph::NodeIdentifiers"]},{"text":"impl&lt;'a, N, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.NodeReferences.html\" title=\"struct petgraph::matrix_graph::NodeReferences\">NodeReferences</a>&lt;'a, N, Ix&gt;","synthetic":true,"types":["petgraph::matrix_graph::NodeReferences"]},{"text":"impl&lt;'a, Ty, Null, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.EdgeReferences.html\" title=\"struct petgraph::matrix_graph::EdgeReferences\">EdgeReferences</a>&lt;'a, Ty, Null, Ix&gt;","synthetic":true,"types":["petgraph::matrix_graph::EdgeReferences"]},{"text":"impl&lt;'a, Ty, Null, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.Neighbors.html\" title=\"struct petgraph::matrix_graph::Neighbors\">Neighbors</a>&lt;'a, Ty, Null, Ix&gt;","synthetic":true,"types":["petgraph::matrix_graph::Neighbors"]},{"text":"impl&lt;'a, Ty, Null, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.Edges.html\" title=\"struct petgraph::matrix_graph::Edges\">Edges</a>&lt;'a, Ty, Null, Ix&gt;","synthetic":true,"types":["petgraph::matrix_graph::Edges"]},{"text":"impl&lt;K&gt; Freeze for <a class=\"struct\" href=\"petgraph/unionfind/struct.UnionFind.html\" title=\"struct petgraph::unionfind::UnionFind\">UnionFind</a>&lt;K&gt;","synthetic":true,"types":["petgraph::unionfind::UnionFind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"petgraph/enum.Direction.html\" title=\"enum petgraph::Direction\">Direction</a>","synthetic":true,"types":["petgraph::Direction"]},{"text":"impl Freeze for <a class=\"enum\" href=\"petgraph/enum.Directed.html\" title=\"enum petgraph::Directed\">Directed</a>","synthetic":true,"types":["petgraph::Directed"]},{"text":"impl Freeze for <a class=\"enum\" href=\"petgraph/enum.Undirected.html\" title=\"enum petgraph::Undirected\">Undirected</a>","synthetic":true,"types":["petgraph::Undirected"]}];
implementors["phf"] = [{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"phf/struct.Map.html\" title=\"struct phf::Map\">Map</a>&lt;K, V&gt;","synthetic":true,"types":["phf::map::Map"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"phf/map/struct.Entries.html\" title=\"struct phf::map::Entries\">Entries</a>&lt;'a, K, V&gt;","synthetic":true,"types":["phf::map::Entries"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"phf/map/struct.Keys.html\" title=\"struct phf::map::Keys\">Keys</a>&lt;'a, K, V&gt;","synthetic":true,"types":["phf::map::Keys"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"phf/map/struct.Values.html\" title=\"struct phf::map::Values\">Values</a>&lt;'a, K, V&gt;","synthetic":true,"types":["phf::map::Values"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"phf/struct.OrderedMap.html\" title=\"struct phf::OrderedMap\">OrderedMap</a>&lt;K, V&gt;","synthetic":true,"types":["phf::ordered_map::OrderedMap"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"phf/ordered_map/struct.Entries.html\" title=\"struct phf::ordered_map::Entries\">Entries</a>&lt;'a, K, V&gt;","synthetic":true,"types":["phf::ordered_map::Entries"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"phf/ordered_map/struct.Keys.html\" title=\"struct phf::ordered_map::Keys\">Keys</a>&lt;'a, K, V&gt;","synthetic":true,"types":["phf::ordered_map::Keys"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"phf/ordered_map/struct.Values.html\" title=\"struct phf::ordered_map::Values\">Values</a>&lt;'a, K, V&gt;","synthetic":true,"types":["phf::ordered_map::Values"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"phf/struct.OrderedSet.html\" title=\"struct phf::OrderedSet\">OrderedSet</a>&lt;T&gt;","synthetic":true,"types":["phf::ordered_set::OrderedSet"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"phf/ordered_set/struct.Iter.html\" title=\"struct phf::ordered_set::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["phf::ordered_set::Iter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"phf/struct.Set.html\" title=\"struct phf::Set\">Set</a>&lt;T&gt;","synthetic":true,"types":["phf::set::Set"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"phf/set/struct.Iter.html\" title=\"struct phf::set::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["phf::set::Iter"]}];
implementors["phf_shared"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"phf_shared/struct.Hashes.html\" title=\"struct phf_shared::Hashes\">Hashes</a>","synthetic":true,"types":["phf_shared::Hashes"]}];
implementors["polyval"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"polyval/struct.Polyval.html\" title=\"struct polyval::Polyval\">Polyval</a>","synthetic":true,"types":["polyval::backend::autodetect::Polyval"]}];
implementors["ppv_lite86"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.YesS3.html\" title=\"struct ppv_lite86::x86_64::YesS3\">YesS3</a>","synthetic":true,"types":["ppv_lite86::x86_64::YesS3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.NoS3.html\" title=\"struct ppv_lite86::x86_64::NoS3\">NoS3</a>","synthetic":true,"types":["ppv_lite86::x86_64::NoS3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.YesS4.html\" title=\"struct ppv_lite86::x86_64::YesS4\">YesS4</a>","synthetic":true,"types":["ppv_lite86::x86_64::YesS4"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.NoS4.html\" title=\"struct ppv_lite86::x86_64::NoS4\">NoS4</a>","synthetic":true,"types":["ppv_lite86::x86_64::NoS4"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.YesA1.html\" title=\"struct ppv_lite86::x86_64::YesA1\">YesA1</a>","synthetic":true,"types":["ppv_lite86::x86_64::YesA1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.NoA1.html\" title=\"struct ppv_lite86::x86_64::NoA1\">NoA1</a>","synthetic":true,"types":["ppv_lite86::x86_64::NoA1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.YesA2.html\" title=\"struct ppv_lite86::x86_64::YesA2\">YesA2</a>","synthetic":true,"types":["ppv_lite86::x86_64::YesA2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.NoA2.html\" title=\"struct ppv_lite86::x86_64::NoA2\">NoA2</a>","synthetic":true,"types":["ppv_lite86::x86_64::NoA2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.YesNI.html\" title=\"struct ppv_lite86::x86_64::YesNI\">YesNI</a>","synthetic":true,"types":["ppv_lite86::x86_64::YesNI"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.NoNI.html\" title=\"struct ppv_lite86::x86_64::NoNI\">NoNI</a>","synthetic":true,"types":["ppv_lite86::x86_64::NoNI"]},{"text":"impl&lt;S3, S4, NI&gt; Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.SseMachine.html\" title=\"struct ppv_lite86::x86_64::SseMachine\">SseMachine</a>&lt;S3, S4, NI&gt;","synthetic":true,"types":["ppv_lite86::x86_64::SseMachine"]},{"text":"impl&lt;NI&gt; Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.Avx2Machine.html\" title=\"struct ppv_lite86::x86_64::Avx2Machine\">Avx2Machine</a>&lt;NI&gt;","synthetic":true,"types":["ppv_lite86::x86_64::Avx2Machine"]},{"text":"impl Freeze for <a class=\"union\" href=\"ppv_lite86/x86_64/union.vec128_storage.html\" title=\"union ppv_lite86::x86_64::vec128_storage\">vec128_storage</a>","synthetic":true,"types":["ppv_lite86::x86_64::vec128_storage"]},{"text":"impl Freeze for <a class=\"union\" href=\"ppv_lite86/x86_64/union.vec256_storage.html\" title=\"union ppv_lite86::x86_64::vec256_storage\">vec256_storage</a>","synthetic":true,"types":["ppv_lite86::x86_64::vec256_storage"]},{"text":"impl Freeze for <a class=\"union\" href=\"ppv_lite86/x86_64/union.vec512_storage.html\" title=\"union ppv_lite86::x86_64::vec512_storage\">vec512_storage</a>","synthetic":true,"types":["ppv_lite86::x86_64::vec512_storage"]}];
implementors["pretty"] = [{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"pretty/struct.IoWrite.html\" title=\"struct pretty::IoWrite\">IoWrite</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["pretty::render::IoWrite"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"pretty/struct.FmtWrite.html\" title=\"struct pretty::FmtWrite\">FmtWrite</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["pretty::render::FmtWrite"]},{"text":"impl&lt;'a, T, A&gt; Freeze for <a class=\"enum\" href=\"pretty/enum.Doc.html\" title=\"enum pretty::Doc\">Doc</a>&lt;'a, T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as <a class=\"trait\" href=\"pretty/trait.DocPtr.html\" title=\"trait pretty::DocPtr\">DocPtr</a>&lt;'a, A&gt;&gt;::<a class=\"associatedtype\" href=\"pretty/trait.DocPtr.html#associatedtype.ColumnFn\" title=\"type pretty::DocPtr::ColumnFn\">ColumnFn</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["pretty::Doc"]},{"text":"impl&lt;'a, A&gt; Freeze for <a class=\"struct\" href=\"pretty/struct.BoxDoc.html\" title=\"struct pretty::BoxDoc\">BoxDoc</a>&lt;'a, A&gt;","synthetic":true,"types":["pretty::BoxDoc"]},{"text":"impl&lt;'a, A&gt; Freeze for <a class=\"struct\" href=\"pretty/struct.RcDoc.html\" title=\"struct pretty::RcDoc\">RcDoc</a>&lt;'a, A&gt;","synthetic":true,"types":["pretty::RcDoc"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pretty/struct.BoxAllocator.html\" title=\"struct pretty::BoxAllocator\">BoxAllocator</a>","synthetic":true,"types":["pretty::BoxAllocator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pretty/struct.RcAllocator.html\" title=\"struct pretty::RcAllocator\">RcAllocator</a>","synthetic":true,"types":["pretty::RcAllocator"]},{"text":"impl&lt;'a, 'd, T, A&gt; Freeze for <a class=\"struct\" href=\"pretty/struct.Pretty.html\" title=\"struct pretty::Pretty\">Pretty</a>&lt;'a, 'd, T, A&gt;","synthetic":true,"types":["pretty::Pretty"]},{"text":"impl&lt;'a, D:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, A&gt; Freeze for <a class=\"struct\" href=\"pretty/struct.DocBuilder.html\" title=\"struct pretty::DocBuilder\">DocBuilder</a>&lt;'a, D, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;D as <a class=\"trait\" href=\"pretty/trait.DocAllocator.html\" title=\"trait pretty::DocAllocator\">DocAllocator</a>&lt;'a, A&gt;&gt;::<a class=\"associatedtype\" href=\"pretty/trait.DocAllocator.html#associatedtype.Doc\" title=\"type pretty::DocAllocator::Doc\">Doc</a> as <a class=\"trait\" href=\"pretty/trait.DocPtr.html\" title=\"trait pretty::DocPtr\">DocPtr</a>&lt;'a, A&gt;&gt;::<a class=\"associatedtype\" href=\"pretty/trait.DocPtr.html#associatedtype.ColumnFn\" title=\"type pretty::DocPtr::ColumnFn\">ColumnFn</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;D as <a class=\"trait\" href=\"pretty/trait.DocAllocator.html\" title=\"trait pretty::DocAllocator\">DocAllocator</a>&lt;'a, A&gt;&gt;::<a class=\"associatedtype\" href=\"pretty/trait.DocAllocator.html#associatedtype.Doc\" title=\"type pretty::DocAllocator::Doc\">Doc</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["pretty::DocBuilder"]},{"text":"impl&lt;'a, D, A&gt; Freeze for <a class=\"enum\" href=\"pretty/enum.BuildDoc.html\" title=\"enum pretty::BuildDoc\">BuildDoc</a>&lt;'a, D, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;D as <a class=\"trait\" href=\"pretty/trait.DocPtr.html\" title=\"trait pretty::DocPtr\">DocPtr</a>&lt;'a, A&gt;&gt;::<a class=\"associatedtype\" href=\"pretty/trait.DocPtr.html#associatedtype.ColumnFn\" title=\"type pretty::DocPtr::ColumnFn\">ColumnFn</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["pretty::BuildDoc"]},{"text":"impl&lt;'a, A&gt; Freeze for <a class=\"struct\" href=\"pretty/struct.RefDoc.html\" title=\"struct pretty::RefDoc\">RefDoc</a>&lt;'a, A&gt;","synthetic":true,"types":["pretty::RefDoc"]},{"text":"impl&lt;'a, A&nbsp;=&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.61.0/std/primitive.unit.html\">()</a>&gt; !Freeze for <a class=\"struct\" href=\"pretty/struct.Arena.html\" title=\"struct pretty::Arena\">Arena</a>&lt;'a, A&gt;","synthetic":true,"types":["pretty::Arena"]}];
implementors["proc_macro2"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/token_stream/struct.IntoIter.html\" title=\"struct proc_macro2::token_stream::IntoIter\">IntoIter</a>","synthetic":true,"types":["proc_macro2::token_stream::IntoIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.TokenStream.html\" title=\"struct proc_macro2::TokenStream\">TokenStream</a>","synthetic":true,"types":["proc_macro2::TokenStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.LexError.html\" title=\"struct proc_macro2::LexError\">LexError</a>","synthetic":true,"types":["proc_macro2::LexError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Span.html\" title=\"struct proc_macro2::Span\">Span</a>","synthetic":true,"types":["proc_macro2::Span"]},{"text":"impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.TokenTree.html\" title=\"enum proc_macro2::TokenTree\">TokenTree</a>","synthetic":true,"types":["proc_macro2::TokenTree"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Group.html\" title=\"struct proc_macro2::Group\">Group</a>","synthetic":true,"types":["proc_macro2::Group"]},{"text":"impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.Delimiter.html\" title=\"enum proc_macro2::Delimiter\">Delimiter</a>","synthetic":true,"types":["proc_macro2::Delimiter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Punct.html\" title=\"struct proc_macro2::Punct\">Punct</a>","synthetic":true,"types":["proc_macro2::Punct"]},{"text":"impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.Spacing.html\" title=\"enum proc_macro2::Spacing\">Spacing</a>","synthetic":true,"types":["proc_macro2::Spacing"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Ident.html\" title=\"struct proc_macro2::Ident\">Ident</a>","synthetic":true,"types":["proc_macro2::Ident"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Literal.html\" title=\"struct proc_macro2::Literal\">Literal</a>","synthetic":true,"types":["proc_macro2::Literal"]}];
implementors["proc_macro_error"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"proc_macro_error/enum.Level.html\" title=\"enum proc_macro_error::Level\">Level</a>","synthetic":true,"types":["proc_macro_error::diagnostic::Level"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro_error/struct.Diagnostic.html\" title=\"struct proc_macro_error::Diagnostic\">Diagnostic</a>","synthetic":true,"types":["proc_macro_error::diagnostic::Diagnostic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro_error/struct.SpanRange.html\" title=\"struct proc_macro_error::SpanRange\">SpanRange</a>","synthetic":true,"types":["proc_macro_error::SpanRange"]}];
implementors["prometheus"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"prometheus/proto/struct.LabelPair.html\" title=\"struct prometheus::proto::LabelPair\">LabelPair</a>","synthetic":true,"types":["prometheus::proto::LabelPair"]},{"text":"impl Freeze for <a class=\"struct\" href=\"prometheus/proto/struct.Gauge.html\" title=\"struct prometheus::proto::Gauge\">Gauge</a>","synthetic":true,"types":["prometheus::proto::Gauge"]},{"text":"impl Freeze for <a class=\"struct\" href=\"prometheus/proto/struct.Counter.html\" title=\"struct prometheus::proto::Counter\">Counter</a>","synthetic":true,"types":["prometheus::proto::Counter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"prometheus/proto/struct.Quantile.html\" title=\"struct prometheus::proto::Quantile\">Quantile</a>","synthetic":true,"types":["prometheus::proto::Quantile"]},{"text":"impl Freeze for <a class=\"struct\" href=\"prometheus/proto/struct.Summary.html\" title=\"struct prometheus::proto::Summary\">Summary</a>","synthetic":true,"types":["prometheus::proto::Summary"]},{"text":"impl Freeze for <a class=\"struct\" href=\"prometheus/proto/struct.Untyped.html\" title=\"struct prometheus::proto::Untyped\">Untyped</a>","synthetic":true,"types":["prometheus::proto::Untyped"]},{"text":"impl Freeze for <a class=\"struct\" href=\"prometheus/proto/struct.Histogram.html\" title=\"struct prometheus::proto::Histogram\">Histogram</a>","synthetic":true,"types":["prometheus::proto::Histogram"]},{"text":"impl Freeze for <a class=\"struct\" href=\"prometheus/proto/struct.Bucket.html\" title=\"struct prometheus::proto::Bucket\">Bucket</a>","synthetic":true,"types":["prometheus::proto::Bucket"]},{"text":"impl Freeze for <a class=\"struct\" href=\"prometheus/proto/struct.Metric.html\" title=\"struct prometheus::proto::Metric\">Metric</a>","synthetic":true,"types":["prometheus::proto::Metric"]},{"text":"impl Freeze for <a class=\"enum\" href=\"prometheus/proto/enum.MetricType.html\" title=\"enum prometheus::proto::MetricType\">MetricType</a>","synthetic":true,"types":["prometheus::proto::MetricType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"prometheus/proto/struct.MetricFamily.html\" title=\"struct prometheus::proto::MetricFamily\">MetricFamily</a>","synthetic":true,"types":["prometheus::proto::MetricFamily"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"prometheus/core/struct.AtomicF64.html\" title=\"struct prometheus::core::AtomicF64\">AtomicF64</a>","synthetic":true,"types":["prometheus::atomic64::AtomicF64"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"prometheus/core/struct.AtomicI64.html\" title=\"struct prometheus::core::AtomicI64\">AtomicI64</a>","synthetic":true,"types":["prometheus::atomic64::AtomicI64"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"prometheus/core/struct.AtomicU64.html\" title=\"struct prometheus::core::AtomicU64\">AtomicU64</a>","synthetic":true,"types":["prometheus::atomic64::AtomicU64"]},{"text":"impl&lt;T, V, D&gt; Freeze for <a class=\"struct\" href=\"prometheus/local/struct.AFLocalCounter.html\" title=\"struct prometheus::local::AFLocalCounter\">AFLocalCounter</a>&lt;T, V, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["prometheus::auto_flush::AFLocalCounter"]},{"text":"impl&lt;T, D&gt; Freeze for <a class=\"struct\" href=\"prometheus/local/struct.AFLocalHistogram.html\" title=\"struct prometheus::local::AFLocalHistogram\">AFLocalHistogram</a>&lt;T, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["prometheus::auto_flush::AFLocalHistogram"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"prometheus/core/struct.GenericCounter.html\" title=\"struct prometheus::core::GenericCounter\">GenericCounter</a>&lt;P&gt;","synthetic":true,"types":["prometheus::counter::GenericCounter"]},{"text":"impl&lt;P&gt; !Freeze for <a class=\"struct\" href=\"prometheus/core/struct.GenericLocalCounter.html\" title=\"struct prometheus::core::GenericLocalCounter\">GenericLocalCounter</a>&lt;P&gt;","synthetic":true,"types":["prometheus::counter::GenericLocalCounter"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"prometheus/core/struct.GenericLocalCounterVec.html\" title=\"struct prometheus::core::GenericLocalCounterVec\">GenericLocalCounterVec</a>&lt;P&gt;","synthetic":true,"types":["prometheus::counter::GenericLocalCounterVec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"prometheus/core/struct.Desc.html\" title=\"struct prometheus::core::Desc\">Desc</a>","synthetic":true,"types":["prometheus::desc::Desc"]},{"text":"impl Freeze for <a class=\"struct\" href=\"prometheus/struct.TextEncoder.html\" title=\"struct prometheus::TextEncoder\">TextEncoder</a>","synthetic":true,"types":["prometheus::encoder::text::TextEncoder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"prometheus/enum.Error.html\" title=\"enum prometheus::Error\">Error</a>","synthetic":true,"types":["prometheus::errors::Error"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"prometheus/core/struct.GenericGauge.html\" title=\"struct prometheus::core::GenericGauge\">GenericGauge</a>&lt;P&gt;","synthetic":true,"types":["prometheus::gauge::GenericGauge"]},{"text":"impl Freeze for <a class=\"struct\" href=\"prometheus/struct.HistogramOpts.html\" title=\"struct prometheus::HistogramOpts\">HistogramOpts</a>","synthetic":true,"types":["prometheus::histogram::HistogramOpts"]},{"text":"impl Freeze for <a class=\"struct\" href=\"prometheus/struct.HistogramTimer.html\" title=\"struct prometheus::HistogramTimer\">HistogramTimer</a>","synthetic":true,"types":["prometheus::histogram::HistogramTimer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"prometheus/struct.Histogram.html\" title=\"struct prometheus::Histogram\">Histogram</a>","synthetic":true,"types":["prometheus::histogram::Histogram"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"prometheus/local/struct.LocalHistogram.html\" title=\"struct prometheus::local::LocalHistogram\">LocalHistogram</a>","synthetic":true,"types":["prometheus::histogram::LocalHistogram"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"prometheus/local/struct.LocalHistogramTimer.html\" title=\"struct prometheus::local::LocalHistogramTimer\">LocalHistogramTimer</a>","synthetic":true,"types":["prometheus::histogram::LocalHistogramTimer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"prometheus/local/struct.LocalHistogramVec.html\" title=\"struct prometheus::local::LocalHistogramVec\">LocalHistogramVec</a>","synthetic":true,"types":["prometheus::histogram::LocalHistogramVec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"prometheus/core/struct.Opts.html\" title=\"struct prometheus::core::Opts\">Opts</a>","synthetic":true,"types":["prometheus::metrics::Opts"]},{"text":"impl Freeze for <a class=\"struct\" href=\"prometheus/struct.Registry.html\" title=\"struct prometheus::Registry\">Registry</a>","synthetic":true,"types":["prometheus::registry::Registry"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"prometheus/core/struct.MetricVec.html\" title=\"struct prometheus::core::MetricVec\">MetricVec</a>&lt;T&gt;","synthetic":true,"types":["prometheus::vec::MetricVec"]}];
implementors["psl_types"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"psl_types/enum.Type.html\" title=\"enum psl_types::Type\">Type</a>","synthetic":true,"types":["psl_types::Type"]},{"text":"impl Freeze for <a class=\"struct\" href=\"psl_types/struct.Info.html\" title=\"struct psl_types::Info\">Info</a>","synthetic":true,"types":["psl_types::Info"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"psl_types/struct.Suffix.html\" title=\"struct psl_types::Suffix\">Suffix</a>&lt;'a&gt;","synthetic":true,"types":["psl_types::Suffix"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"psl_types/struct.Domain.html\" title=\"struct psl_types::Domain\">Domain</a>&lt;'a&gt;","synthetic":true,"types":["psl_types::Domain"]}];
implementors["ptree"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"ptree/item/struct.StringItem.html\" title=\"struct ptree::item::StringItem\">StringItem</a>","synthetic":true,"types":["ptree::item::StringItem"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ptree/builder/struct.TreeBuilder.html\" title=\"struct ptree::builder::TreeBuilder\">TreeBuilder</a>","synthetic":true,"types":["ptree::builder::TreeBuilder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"ptree/print_config/enum.StyleWhen.html\" title=\"enum ptree::print_config::StyleWhen\">StyleWhen</a>","synthetic":true,"types":["ptree::print_config::StyleWhen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ptree/print_config/struct.PrintConfig.html\" title=\"struct ptree::print_config::PrintConfig\">PrintConfig</a>","synthetic":true,"types":["ptree::print_config::PrintConfig"]},{"text":"impl Freeze for <a class=\"enum\" href=\"ptree/print_config/enum.OutputKind.html\" title=\"enum ptree::print_config::OutputKind\">OutputKind</a>","synthetic":true,"types":["ptree::print_config::OutputKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ptree/print_config/struct.IndentChars.html\" title=\"struct ptree::print_config::IndentChars\">IndentChars</a>","synthetic":true,"types":["ptree::print_config::IndentChars"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ptree/print_config/struct.StaticIndentChars.html\" title=\"struct ptree::print_config::StaticIndentChars\">StaticIndentChars</a>","synthetic":true,"types":["ptree::print_config::StaticIndentChars"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ptree/style/struct.Style.html\" title=\"struct ptree::style::Style\">Style</a>","synthetic":true,"types":["ptree::style::Style"]},{"text":"impl Freeze for <a class=\"enum\" href=\"ptree/style/enum.Color.html\" title=\"enum ptree::style::Color\">Color</a>","synthetic":true,"types":["ptree::style::Color"]}];
implementors["publicsuffix"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"publicsuffix/enum.Error.html\" title=\"enum publicsuffix::Error\">Error</a>","synthetic":true,"types":["publicsuffix::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"publicsuffix/struct.List.html\" title=\"struct publicsuffix::List\">List</a>","synthetic":true,"types":["publicsuffix::List"]},{"text":"impl Freeze for <a class=\"struct\" href=\"publicsuffix/struct.IcannList.html\" title=\"struct publicsuffix::IcannList\">IcannList</a>","synthetic":true,"types":["publicsuffix::IcannList"]},{"text":"impl Freeze for <a class=\"struct\" href=\"publicsuffix/struct.PrivateList.html\" title=\"struct publicsuffix::PrivateList\">PrivateList</a>","synthetic":true,"types":["publicsuffix::PrivateList"]}];
implementors["quick_error"] = [{"text":"impl&lt;X, E&gt; Freeze for <a class=\"struct\" href=\"quick_error/struct.Context.html\" title=\"struct quick_error::Context\">Context</a>&lt;X, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":["quick_error::Context"]}];
implementors["rand"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Bernoulli.html\" title=\"struct rand::distributions::Bernoulli\">Bernoulli</a>","synthetic":true,"types":["rand::distributions::bernoulli::Bernoulli"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand/distributions/enum.BernoulliError.html\" title=\"enum rand::distributions::BernoulliError\">BernoulliError</a>","synthetic":true,"types":["rand::distributions::bernoulli::BernoulliError"]},{"text":"impl&lt;D, R, T&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/struct.DistIter.html\" title=\"struct rand::distributions::DistIter\">DistIter</a>&lt;D, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::distribution::DistIter"]},{"text":"impl&lt;D, F, T, S&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/struct.DistMap.html\" title=\"struct rand::distributions::DistMap\">DistMap</a>&lt;D, F, T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::distribution::DistMap"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.OpenClosed01.html\" title=\"struct rand::distributions::OpenClosed01\">OpenClosed01</a>","synthetic":true,"types":["rand::distributions::float::OpenClosed01"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Open01.html\" title=\"struct rand::distributions::Open01\">Open01</a>","synthetic":true,"types":["rand::distributions::float::Open01"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Alphanumeric.html\" title=\"struct rand::distributions::Alphanumeric\">Alphanumeric</a>","synthetic":true,"types":["rand::distributions::other::Alphanumeric"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Slice.html\" title=\"struct rand::distributions::Slice\">Slice</a>&lt;'a, T&gt;","synthetic":true,"types":["rand::distributions::slice::Slice"]},{"text":"impl&lt;X&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/weighted/struct.WeightedIndex.html\" title=\"struct rand::distributions::weighted::WeightedIndex\">WeightedIndex</a>&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as <a class=\"trait\" href=\"rand/distributions/uniform/trait.SampleUniform.html\" title=\"trait rand::distributions::uniform::SampleUniform\">SampleUniform</a>&gt;::<a class=\"associatedtype\" href=\"rand/distributions/uniform/trait.SampleUniform.html#associatedtype.Sampler\" title=\"type rand::distributions::uniform::SampleUniform::Sampler\">Sampler</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::weighted_index::WeightedIndex"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand/distributions/weighted/enum.WeightedError.html\" title=\"enum rand::distributions::weighted::WeightedError\">WeightedError</a>","synthetic":true,"types":["rand::distributions::weighted_index::WeightedError"]},{"text":"impl&lt;X&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Uniform.html\" title=\"struct rand::distributions::Uniform\">Uniform</a>&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as <a class=\"trait\" href=\"rand/distributions/uniform/trait.SampleUniform.html\" title=\"trait rand::distributions::uniform::SampleUniform\">SampleUniform</a>&gt;::<a class=\"associatedtype\" href=\"rand/distributions/uniform/trait.SampleUniform.html#associatedtype.Sampler\" title=\"type rand::distributions::uniform::SampleUniform::Sampler\">Sampler</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::uniform::Uniform"]},{"text":"impl&lt;X&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/uniform/struct.UniformInt.html\" title=\"struct rand::distributions::uniform::UniformInt\">UniformInt</a>&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::uniform::UniformInt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/uniform/struct.UniformChar.html\" title=\"struct rand::distributions::uniform::UniformChar\">UniformChar</a>","synthetic":true,"types":["rand::distributions::uniform::UniformChar"]},{"text":"impl&lt;X&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/uniform/struct.UniformFloat.html\" title=\"struct rand::distributions::uniform::UniformFloat\">UniformFloat</a>&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::uniform::UniformFloat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/uniform/struct.UniformDuration.html\" title=\"struct rand::distributions::uniform::UniformDuration\">UniformDuration</a>","synthetic":true,"types":["rand::distributions::uniform::UniformDuration"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/weighted/alias_method/struct.WeightedIndex.html\" title=\"struct rand::distributions::weighted::alias_method::WeightedIndex\">WeightedIndex</a>&lt;W&gt;","synthetic":true,"types":["rand::distributions::weighted::alias_method::WeightedIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Standard.html\" title=\"struct rand::distributions::Standard\">Standard</a>","synthetic":true,"types":["rand::distributions::Standard"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"rand/rngs/adapter/struct.ReadRng.html\" title=\"struct rand::rngs::adapter::ReadRng\">ReadRng</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::rngs::adapter::read::ReadRng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/rngs/adapter/struct.ReadError.html\" title=\"struct rand::rngs::adapter::ReadError\">ReadError</a>","synthetic":true,"types":["rand::rngs::adapter::read::ReadError"]},{"text":"impl&lt;R, Rsdr&gt; Freeze for <a class=\"struct\" href=\"rand/rngs/adapter/struct.ReseedingRng.html\" title=\"struct rand::rngs::adapter::ReseedingRng\">ReseedingRng</a>&lt;R, Rsdr&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rsdr: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"rand_core/block/trait.BlockRngCore.html\" title=\"trait rand_core::block::BlockRngCore\">BlockRngCore</a>&gt;::<a class=\"associatedtype\" href=\"rand_core/block/trait.BlockRngCore.html#associatedtype.Results\" title=\"type rand_core::block::BlockRngCore::Results\">Results</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::rngs::adapter::reseeding::ReseedingRng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/rngs/mock/struct.StepRng.html\" title=\"struct rand::rngs::mock::StepRng\">StepRng</a>","synthetic":true,"types":["rand::rngs::mock::StepRng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/rngs/struct.SmallRng.html\" title=\"struct rand::rngs::SmallRng\">SmallRng</a>","synthetic":true,"types":["rand::rngs::small::SmallRng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/rngs/struct.StdRng.html\" title=\"struct rand::rngs::StdRng\">StdRng</a>","synthetic":true,"types":["rand::rngs::std::StdRng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/rngs/struct.ThreadRng.html\" title=\"struct rand::rngs::ThreadRng\">ThreadRng</a>","synthetic":true,"types":["rand::rngs::thread::ThreadRng"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand/seq/index/enum.IndexVec.html\" title=\"enum rand::seq::index::IndexVec\">IndexVec</a>","synthetic":true,"types":["rand::seq::index::IndexVec"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"rand/seq/index/enum.IndexVecIter.html\" title=\"enum rand::seq::index::IndexVecIter\">IndexVecIter</a>&lt;'a&gt;","synthetic":true,"types":["rand::seq::index::IndexVecIter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand/seq/index/enum.IndexVecIntoIter.html\" title=\"enum rand::seq::index::IndexVecIntoIter\">IndexVecIntoIter</a>","synthetic":true,"types":["rand::seq::index::IndexVecIntoIter"]},{"text":"impl&lt;'a, S:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, T&gt; Freeze for <a class=\"struct\" href=\"rand/seq/struct.SliceChooseIter.html\" title=\"struct rand::seq::SliceChooseIter\">SliceChooseIter</a>&lt;'a, S, T&gt;","synthetic":true,"types":["rand::seq::SliceChooseIter"]}];
implementors["rand_chacha"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha20Core.html\" title=\"struct rand_chacha::ChaCha20Core\">ChaCha20Core</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha20Core"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha20Rng.html\" title=\"struct rand_chacha::ChaCha20Rng\">ChaCha20Rng</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha20Rng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha12Core.html\" title=\"struct rand_chacha::ChaCha12Core\">ChaCha12Core</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha12Core"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha12Rng.html\" title=\"struct rand_chacha::ChaCha12Rng\">ChaCha12Rng</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha12Rng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha8Core.html\" title=\"struct rand_chacha::ChaCha8Core\">ChaCha8Core</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha8Core"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha8Rng.html\" title=\"struct rand_chacha::ChaCha8Rng\">ChaCha8Rng</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha8Rng"]}];
implementors["rand_core"] = [{"text":"impl&lt;R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"rand_core/block/struct.BlockRng.html\" title=\"struct rand_core::block::BlockRng\">BlockRng</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"rand_core/block/trait.BlockRngCore.html\" title=\"trait rand_core::block::BlockRngCore\">BlockRngCore</a>&gt;::<a class=\"associatedtype\" href=\"rand_core/block/trait.BlockRngCore.html#associatedtype.Results\" title=\"type rand_core::block::BlockRngCore::Results\">Results</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand_core::block::BlockRng"]},{"text":"impl&lt;R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"rand_core/block/struct.BlockRng64.html\" title=\"struct rand_core::block::BlockRng64\">BlockRng64</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"rand_core/block/trait.BlockRngCore.html\" title=\"trait rand_core::block::BlockRngCore\">BlockRngCore</a>&gt;::<a class=\"associatedtype\" href=\"rand_core/block/trait.BlockRngCore.html#associatedtype.Results\" title=\"type rand_core::block::BlockRngCore::Results\">Results</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand_core::block::BlockRng64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_core/struct.Error.html\" title=\"struct rand_core::Error\">Error</a>","synthetic":true,"types":["rand_core::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_core/struct.OsRng.html\" title=\"struct rand_core::OsRng\">OsRng</a>","synthetic":true,"types":["rand_core::os::OsRng"]}];
implementors["rand_xoshiro"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"rand_xoshiro/struct.Seed512.html\" title=\"struct rand_xoshiro::Seed512\">Seed512</a>","synthetic":true,"types":["rand_xoshiro::common::Seed512"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_xoshiro/struct.SplitMix64.html\" title=\"struct rand_xoshiro::SplitMix64\">SplitMix64</a>","synthetic":true,"types":["rand_xoshiro::splitmix64::SplitMix64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_xoshiro/struct.Xoshiro128StarStar.html\" title=\"struct rand_xoshiro::Xoshiro128StarStar\">Xoshiro128StarStar</a>","synthetic":true,"types":["rand_xoshiro::xoshiro128starstar::Xoshiro128StarStar"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_xoshiro/struct.Xoshiro128PlusPlus.html\" title=\"struct rand_xoshiro::Xoshiro128PlusPlus\">Xoshiro128PlusPlus</a>","synthetic":true,"types":["rand_xoshiro::xoshiro128plusplus::Xoshiro128PlusPlus"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_xoshiro/struct.Xoshiro128Plus.html\" title=\"struct rand_xoshiro::Xoshiro128Plus\">Xoshiro128Plus</a>","synthetic":true,"types":["rand_xoshiro::xoshiro128plus::Xoshiro128Plus"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_xoshiro/struct.Xoshiro256StarStar.html\" title=\"struct rand_xoshiro::Xoshiro256StarStar\">Xoshiro256StarStar</a>","synthetic":true,"types":["rand_xoshiro::xoshiro256starstar::Xoshiro256StarStar"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_xoshiro/struct.Xoshiro256PlusPlus.html\" title=\"struct rand_xoshiro::Xoshiro256PlusPlus\">Xoshiro256PlusPlus</a>","synthetic":true,"types":["rand_xoshiro::xoshiro256plusplus::Xoshiro256PlusPlus"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_xoshiro/struct.Xoshiro256Plus.html\" title=\"struct rand_xoshiro::Xoshiro256Plus\">Xoshiro256Plus</a>","synthetic":true,"types":["rand_xoshiro::xoshiro256plus::Xoshiro256Plus"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_xoshiro/struct.Xoshiro512StarStar.html\" title=\"struct rand_xoshiro::Xoshiro512StarStar\">Xoshiro512StarStar</a>","synthetic":true,"types":["rand_xoshiro::xoshiro512starstar::Xoshiro512StarStar"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_xoshiro/struct.Xoshiro512PlusPlus.html\" title=\"struct rand_xoshiro::Xoshiro512PlusPlus\">Xoshiro512PlusPlus</a>","synthetic":true,"types":["rand_xoshiro::xoshiro512plusplus::Xoshiro512PlusPlus"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_xoshiro/struct.Xoshiro512Plus.html\" title=\"struct rand_xoshiro::Xoshiro512Plus\">Xoshiro512Plus</a>","synthetic":true,"types":["rand_xoshiro::xoshiro512plus::Xoshiro512Plus"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_xoshiro/struct.Xoroshiro128Plus.html\" title=\"struct rand_xoshiro::Xoroshiro128Plus\">Xoroshiro128Plus</a>","synthetic":true,"types":["rand_xoshiro::xoroshiro128plus::Xoroshiro128Plus"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_xoshiro/struct.Xoroshiro128PlusPlus.html\" title=\"struct rand_xoshiro::Xoroshiro128PlusPlus\">Xoroshiro128PlusPlus</a>","synthetic":true,"types":["rand_xoshiro::xoroshiro128plusplus::Xoroshiro128PlusPlus"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_xoshiro/struct.Xoroshiro128StarStar.html\" title=\"struct rand_xoshiro::Xoroshiro128StarStar\">Xoroshiro128StarStar</a>","synthetic":true,"types":["rand_xoshiro::xoroshiro128starstar::Xoroshiro128StarStar"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_xoshiro/struct.Xoroshiro64StarStar.html\" title=\"struct rand_xoshiro::Xoroshiro64StarStar\">Xoroshiro64StarStar</a>","synthetic":true,"types":["rand_xoshiro::xoroshiro64starstar::Xoroshiro64StarStar"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_xoshiro/struct.Xoroshiro64Star.html\" title=\"struct rand_xoshiro::Xoroshiro64Star\">Xoroshiro64Star</a>","synthetic":true,"types":["rand_xoshiro::xoroshiro64star::Xoroshiro64Star"]}];
implementors["rayon"] = [{"text":"impl&lt;T, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.61.0/std/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"rayon/array/struct.IntoIter.html\" title=\"struct rayon::array::IntoIter\">IntoIter</a>&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::array::IntoIter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/binary_heap/struct.IntoIter.html\" title=\"struct rayon::collections::binary_heap::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["rayon::collections::binary_heap::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/binary_heap/struct.Iter.html\" title=\"struct rayon::collections::binary_heap::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::collections::binary_heap::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/binary_heap/struct.Drain.html\" title=\"struct rayon::collections::binary_heap::Drain\">Drain</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::collections::binary_heap::Drain"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/btree_map/struct.IntoIter.html\" title=\"struct rayon::collections::btree_map::IntoIter\">IntoIter</a>&lt;K, V&gt;","synthetic":true,"types":["rayon::collections::btree_map::IntoIter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/btree_map/struct.Iter.html\" title=\"struct rayon::collections::btree_map::Iter\">Iter</a>&lt;'a, K, V&gt;","synthetic":true,"types":["rayon::collections::btree_map::Iter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/btree_map/struct.IterMut.html\" title=\"struct rayon::collections::btree_map::IterMut\">IterMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["rayon::collections::btree_map::IterMut"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/btree_set/struct.IntoIter.html\" title=\"struct rayon::collections::btree_set::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["rayon::collections::btree_set::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/btree_set/struct.Iter.html\" title=\"struct rayon::collections::btree_set::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::collections::btree_set::Iter"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/hash_map/struct.IntoIter.html\" title=\"struct rayon::collections::hash_map::IntoIter\">IntoIter</a>&lt;K, V&gt;","synthetic":true,"types":["rayon::collections::hash_map::IntoIter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/hash_map/struct.Iter.html\" title=\"struct rayon::collections::hash_map::Iter\">Iter</a>&lt;'a, K, V&gt;","synthetic":true,"types":["rayon::collections::hash_map::Iter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/hash_map/struct.IterMut.html\" title=\"struct rayon::collections::hash_map::IterMut\">IterMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["rayon::collections::hash_map::IterMut"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/hash_map/struct.Drain.html\" title=\"struct rayon::collections::hash_map::Drain\">Drain</a>&lt;'a, K, V&gt;","synthetic":true,"types":["rayon::collections::hash_map::Drain"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/hash_set/struct.IntoIter.html\" title=\"struct rayon::collections::hash_set::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["rayon::collections::hash_set::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/hash_set/struct.Iter.html\" title=\"struct rayon::collections::hash_set::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::collections::hash_set::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/hash_set/struct.Drain.html\" title=\"struct rayon::collections::hash_set::Drain\">Drain</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::collections::hash_set::Drain"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/linked_list/struct.IntoIter.html\" title=\"struct rayon::collections::linked_list::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["rayon::collections::linked_list::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/linked_list/struct.Iter.html\" title=\"struct rayon::collections::linked_list::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::collections::linked_list::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/linked_list/struct.IterMut.html\" title=\"struct rayon::collections::linked_list::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::collections::linked_list::IterMut"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/vec_deque/struct.IntoIter.html\" title=\"struct rayon::collections::vec_deque::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["rayon::collections::vec_deque::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/vec_deque/struct.Iter.html\" title=\"struct rayon::collections::vec_deque::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::collections::vec_deque::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/vec_deque/struct.IterMut.html\" title=\"struct rayon::collections::vec_deque::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::collections::vec_deque::IterMut"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/vec_deque/struct.Drain.html\" title=\"struct rayon::collections::vec_deque::Drain\">Drain</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::collections::vec_deque::Drain"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Chain.html\" title=\"struct rayon::iter::Chain\">Chain</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::chain::Chain"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Chunks.html\" title=\"struct rayon::iter::Chunks\">Chunks</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::chunks::Chunks"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Cloned.html\" title=\"struct rayon::iter::Cloned\">Cloned</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::cloned::Cloned"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Copied.html\" title=\"struct rayon::iter::Copied\">Copied</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::copied::Copied"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Empty.html\" title=\"struct rayon::iter::Empty\">Empty</a>&lt;T&gt;","synthetic":true,"types":["rayon::iter::empty::Empty"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Enumerate.html\" title=\"struct rayon::iter::Enumerate\">Enumerate</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::enumerate::Enumerate"]},{"text":"impl&lt;I, P&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Filter.html\" title=\"struct rayon::iter::Filter\">Filter</a>&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::filter::Filter"]},{"text":"impl&lt;I, P&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.FilterMap.html\" title=\"struct rayon::iter::FilterMap\">FilterMap</a>&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::filter_map::FilterMap"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.FlatMap.html\" title=\"struct rayon::iter::FlatMap\">FlatMap</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::flat_map::FlatMap"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.FlatMapIter.html\" title=\"struct rayon::iter::FlatMapIter\">FlatMapIter</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::flat_map_iter::FlatMapIter"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Flatten.html\" title=\"struct rayon::iter::Flatten\">Flatten</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::flatten::Flatten"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.FlattenIter.html\" title=\"struct rayon::iter::FlattenIter\">FlattenIter</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::flatten_iter::FlattenIter"]},{"text":"impl&lt;I, ID, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Fold.html\" title=\"struct rayon::iter::Fold\">Fold</a>&lt;I, ID, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;ID: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::fold::Fold"]},{"text":"impl&lt;I, U, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.FoldWith.html\" title=\"struct rayon::iter::FoldWith\">FoldWith</a>&lt;I, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::fold::FoldWith"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Inspect.html\" title=\"struct rayon::iter::Inspect\">Inspect</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::inspect::Inspect"]},{"text":"impl&lt;I, J&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Interleave.html\" title=\"struct rayon::iter::Interleave\">Interleave</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::interleave::Interleave"]},{"text":"impl&lt;I, J&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.InterleaveShortest.html\" title=\"struct rayon::iter::InterleaveShortest\">InterleaveShortest</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::interleave_shortest::InterleaveShortest"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Intersperse.html\" title=\"struct rayon::iter::Intersperse\">Intersperse</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"rayon/iter/trait.ParallelIterator.html\" title=\"trait rayon::iter::ParallelIterator\">ParallelIterator</a>&gt;::<a class=\"associatedtype\" href=\"rayon/iter/trait.ParallelIterator.html#associatedtype.Item\" title=\"type rayon::iter::ParallelIterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::intersperse::Intersperse"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.MinLen.html\" title=\"struct rayon::iter::MinLen\">MinLen</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::len::MinLen"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.MaxLen.html\" title=\"struct rayon::iter::MaxLen\">MaxLen</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::len::MaxLen"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Map.html\" title=\"struct rayon::iter::Map\">Map</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::map::Map"]},{"text":"impl&lt;I, T, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.MapWith.html\" title=\"struct rayon::iter::MapWith\">MapWith</a>&lt;I, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::map_with::MapWith"]},{"text":"impl&lt;I, INIT, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.MapInit.html\" title=\"struct rayon::iter::MapInit\">MapInit</a>&lt;I, INIT, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;INIT: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::map_with::MapInit"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.MultiZip.html\" title=\"struct rayon::iter::MultiZip\">MultiZip</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::multizip::MultiZip"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Once.html\" title=\"struct rayon::iter::Once\">Once</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::once::Once"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.PanicFuse.html\" title=\"struct rayon::iter::PanicFuse\">PanicFuse</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::panic_fuse::PanicFuse"]},{"text":"impl&lt;Iter&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.IterBridge.html\" title=\"struct rayon::iter::IterBridge\">IterBridge</a>&lt;Iter&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Iter: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::par_bridge::IterBridge"]},{"text":"impl&lt;I, P&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Positions.html\" title=\"struct rayon::iter::Positions\">Positions</a>&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::positions::Positions"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Repeat.html\" title=\"struct rayon::iter::Repeat\">Repeat</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::repeat::Repeat"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.RepeatN.html\" title=\"struct rayon::iter::RepeatN\">RepeatN</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::repeat::RepeatN"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Rev.html\" title=\"struct rayon::iter::Rev\">Rev</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::rev::Rev"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Skip.html\" title=\"struct rayon::iter::Skip\">Skip</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::skip::Skip"]},{"text":"impl&lt;D, S&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Split.html\" title=\"struct rayon::iter::Split\">Split</a>&lt;D, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::splitter::Split"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Take.html\" title=\"struct rayon::iter::Take\">Take</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::take::Take"]},{"text":"impl&lt;I, U, ID, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.TryFold.html\" title=\"struct rayon::iter::TryFold\">TryFold</a>&lt;I, U, ID, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;ID: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::try_fold::TryFold"]},{"text":"impl&lt;I, U, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.TryFoldWith.html\" title=\"struct rayon::iter::TryFoldWith\">TryFoldWith</a>&lt;I, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as Try&gt;::Output: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::try_fold::TryFoldWith"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Update.html\" title=\"struct rayon::iter::Update\">Update</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::update::Update"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.WhileSome.html\" title=\"struct rayon::iter::WhileSome\">WhileSome</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::while_some::WhileSome"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Zip.html\" title=\"struct rayon::iter::Zip\">Zip</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::zip::Zip"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.ZipEq.html\" title=\"struct rayon::iter::ZipEq\">ZipEq</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::zip_eq::ZipEq"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.StepBy.html\" title=\"struct rayon::iter::StepBy\">StepBy</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::step_by::StepBy"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/option/struct.IntoIter.html\" title=\"struct rayon::option::IntoIter\">IntoIter</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::option::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/option/struct.Iter.html\" title=\"struct rayon::option::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::option::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/option/struct.IterMut.html\" title=\"struct rayon::option::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::option::IterMut"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/range/struct.Iter.html\" title=\"struct rayon::range::Iter\">Iter</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::range::Iter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/range_inclusive/struct.Iter.html\" title=\"struct rayon::range_inclusive::Iter\">Iter</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::range_inclusive::Iter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/result/struct.IntoIter.html\" title=\"struct rayon::result::IntoIter\">IntoIter</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::result::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/result/struct.Iter.html\" title=\"struct rayon::result::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::result::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/result/struct.IterMut.html\" title=\"struct rayon::result::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::result::IterMut"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.Chunks.html\" title=\"struct rayon::slice::Chunks\">Chunks</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::slice::chunks::Chunks"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.ChunksExact.html\" title=\"struct rayon::slice::ChunksExact\">ChunksExact</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::slice::chunks::ChunksExact"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.ChunksMut.html\" title=\"struct rayon::slice::ChunksMut\">ChunksMut</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::slice::chunks::ChunksMut"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.ChunksExactMut.html\" title=\"struct rayon::slice::ChunksExactMut\">ChunksExactMut</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::slice::chunks::ChunksExactMut"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.RChunks.html\" title=\"struct rayon::slice::RChunks\">RChunks</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::slice::rchunks::RChunks"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.RChunksExact.html\" title=\"struct rayon::slice::RChunksExact\">RChunksExact</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::slice::rchunks::RChunksExact"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.RChunksMut.html\" title=\"struct rayon::slice::RChunksMut\">RChunksMut</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::slice::rchunks::RChunksMut"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.RChunksExactMut.html\" title=\"struct rayon::slice::RChunksExactMut\">RChunksExactMut</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::slice::rchunks::RChunksExactMut"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.Iter.html\" title=\"struct rayon::slice::Iter\">Iter</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::slice::Iter"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.Windows.html\" title=\"struct rayon::slice::Windows\">Windows</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::slice::Windows"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.IterMut.html\" title=\"struct rayon::slice::IterMut\">IterMut</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::slice::IterMut"]},{"text":"impl&lt;'data, T, P&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.Split.html\" title=\"struct rayon::slice::Split\">Split</a>&lt;'data, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::slice::Split"]},{"text":"impl&lt;'data, T, P&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.SplitMut.html\" title=\"struct rayon::slice::SplitMut\">SplitMut</a>&lt;'data, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::slice::SplitMut"]},{"text":"impl&lt;'ch&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.Chars.html\" title=\"struct rayon::str::Chars\">Chars</a>&lt;'ch&gt;","synthetic":true,"types":["rayon::str::Chars"]},{"text":"impl&lt;'ch&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.CharIndices.html\" title=\"struct rayon::str::CharIndices\">CharIndices</a>&lt;'ch&gt;","synthetic":true,"types":["rayon::str::CharIndices"]},{"text":"impl&lt;'ch&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.Bytes.html\" title=\"struct rayon::str::Bytes\">Bytes</a>&lt;'ch&gt;","synthetic":true,"types":["rayon::str::Bytes"]},{"text":"impl&lt;'ch&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.EncodeUtf16.html\" title=\"struct rayon::str::EncodeUtf16\">EncodeUtf16</a>&lt;'ch&gt;","synthetic":true,"types":["rayon::str::EncodeUtf16"]},{"text":"impl&lt;'ch, P&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.Split.html\" title=\"struct rayon::str::Split\">Split</a>&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::str::Split"]},{"text":"impl&lt;'ch, P&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.SplitTerminator.html\" title=\"struct rayon::str::SplitTerminator\">SplitTerminator</a>&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::str::SplitTerminator"]},{"text":"impl&lt;'ch&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.Lines.html\" title=\"struct rayon::str::Lines\">Lines</a>&lt;'ch&gt;","synthetic":true,"types":["rayon::str::Lines"]},{"text":"impl&lt;'ch&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.SplitWhitespace.html\" title=\"struct rayon::str::SplitWhitespace\">SplitWhitespace</a>&lt;'ch&gt;","synthetic":true,"types":["rayon::str::SplitWhitespace"]},{"text":"impl&lt;'ch, P&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.Matches.html\" title=\"struct rayon::str::Matches\">Matches</a>&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::str::Matches"]},{"text":"impl&lt;'ch, P&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.MatchIndices.html\" title=\"struct rayon::str::MatchIndices\">MatchIndices</a>&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::str::MatchIndices"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"rayon/string/struct.Drain.html\" title=\"struct rayon::string::Drain\">Drain</a>&lt;'a&gt;","synthetic":true,"types":["rayon::string::Drain"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/vec/struct.IntoIter.html\" title=\"struct rayon::vec::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["rayon::vec::IntoIter"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/vec/struct.Drain.html\" title=\"struct rayon::vec::Drain\">Drain</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::vec::Drain"]}];
implementors["rayon_core"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"rayon_core/struct.ThreadBuilder.html\" title=\"struct rayon_core::ThreadBuilder\">ThreadBuilder</a>","synthetic":true,"types":["rayon_core::registry::ThreadBuilder"]},{"text":"impl&lt;'scope&gt; !Freeze for <a class=\"struct\" href=\"rayon_core/struct.Scope.html\" title=\"struct rayon_core::Scope\">Scope</a>&lt;'scope&gt;","synthetic":true,"types":["rayon_core::scope::Scope"]},{"text":"impl&lt;'scope&gt; !Freeze for <a class=\"struct\" href=\"rayon_core/struct.ScopeFifo.html\" title=\"struct rayon_core::ScopeFifo\">ScopeFifo</a>&lt;'scope&gt;","synthetic":true,"types":["rayon_core::scope::ScopeFifo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rayon_core/struct.ThreadPool.html\" title=\"struct rayon_core::ThreadPool\">ThreadPool</a>","synthetic":true,"types":["rayon_core::thread_pool::ThreadPool"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rayon_core/struct.ThreadPoolBuildError.html\" title=\"struct rayon_core::ThreadPoolBuildError\">ThreadPoolBuildError</a>","synthetic":true,"types":["rayon_core::ThreadPoolBuildError"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"rayon_core/struct.ThreadPoolBuilder.html\" title=\"struct rayon_core::ThreadPoolBuilder\">ThreadPoolBuilder</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon_core::ThreadPoolBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rayon_core/struct.Configuration.html\" title=\"struct rayon_core::Configuration\">Configuration</a>","synthetic":true,"types":["rayon_core::Configuration"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rayon_core/struct.FnContext.html\" title=\"struct rayon_core::FnContext\">FnContext</a>","synthetic":true,"types":["rayon_core::FnContext"]}];
implementors["read_write_set"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"read_write_set/struct.ReadWriteSetAnalysis.html\" title=\"struct read_write_set::ReadWriteSetAnalysis\">ReadWriteSetAnalysis</a>","synthetic":true,"types":["read_write_set::ReadWriteSetAnalysis"]}];
implementors["read_write_set_dynamic"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"read_write_set_dynamic/struct.ConcretizedFormals.html\" title=\"struct read_write_set_dynamic::ConcretizedFormals\">ConcretizedFormals</a>","synthetic":true,"types":["read_write_set_dynamic::dynamic_analysis::ConcretizedFormals"]},{"text":"impl Freeze for <a class=\"struct\" href=\"read_write_set_dynamic/struct.ConcretizedSecondaryIndexes.html\" title=\"struct read_write_set_dynamic::ConcretizedSecondaryIndexes\">ConcretizedSecondaryIndexes</a>","synthetic":true,"types":["read_write_set_dynamic::dynamic_analysis::ConcretizedSecondaryIndexes"]},{"text":"impl Freeze for <a class=\"struct\" href=\"read_write_set_dynamic/struct.NormalizedReadWriteSetAnalysis.html\" title=\"struct read_write_set_dynamic::NormalizedReadWriteSetAnalysis\">NormalizedReadWriteSetAnalysis</a>","synthetic":true,"types":["read_write_set_dynamic::normalize::NormalizedReadWriteSetAnalysis"]}];
implementors["regex"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.RegexBuilder.html\" title=\"struct regex::bytes::RegexBuilder\">RegexBuilder</a>","synthetic":true,"types":["regex::re_builder::bytes::RegexBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.RegexSetBuilder.html\" title=\"struct regex::bytes::RegexSetBuilder\">RegexSetBuilder</a>","synthetic":true,"types":["regex::re_builder::set_bytes::RegexSetBuilder"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.Match.html\" title=\"struct regex::bytes::Match\">Match</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_bytes::Match"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.Regex.html\" title=\"struct regex::bytes::Regex\">Regex</a>","synthetic":true,"types":["regex::re_bytes::Regex"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.Matches.html\" title=\"struct regex::bytes::Matches\">Matches</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_bytes::Matches"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.CaptureMatches.html\" title=\"struct regex::bytes::CaptureMatches\">CaptureMatches</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_bytes::CaptureMatches"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.Split.html\" title=\"struct regex::bytes::Split\">Split</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_bytes::Split"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.SplitN.html\" title=\"struct regex::bytes::SplitN\">SplitN</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_bytes::SplitN"]},{"text":"impl&lt;'r&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.CaptureNames.html\" title=\"struct regex::bytes::CaptureNames\">CaptureNames</a>&lt;'r&gt;","synthetic":true,"types":["regex::re_bytes::CaptureNames"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.CaptureLocations.html\" title=\"struct regex::bytes::CaptureLocations\">CaptureLocations</a>","synthetic":true,"types":["regex::re_bytes::CaptureLocations"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.Captures.html\" title=\"struct regex::bytes::Captures\">Captures</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_bytes::Captures"]},{"text":"impl&lt;'c, 't&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.SubCaptureMatches.html\" title=\"struct regex::bytes::SubCaptureMatches\">SubCaptureMatches</a>&lt;'c, 't&gt;","synthetic":true,"types":["regex::re_bytes::SubCaptureMatches"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.ReplacerRef.html\" title=\"struct regex::bytes::ReplacerRef\">ReplacerRef</a>&lt;'a, R&gt;","synthetic":true,"types":["regex::re_bytes::ReplacerRef"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.NoExpand.html\" title=\"struct regex::bytes::NoExpand\">NoExpand</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_bytes::NoExpand"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.RegexSet.html\" title=\"struct regex::bytes::RegexSet\">RegexSet</a>","synthetic":true,"types":["regex::re_set::bytes::RegexSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.SetMatches.html\" title=\"struct regex::bytes::SetMatches\">SetMatches</a>","synthetic":true,"types":["regex::re_set::bytes::SetMatches"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.SetMatchesIntoIter.html\" title=\"struct regex::bytes::SetMatchesIntoIter\">SetMatchesIntoIter</a>","synthetic":true,"types":["regex::re_set::bytes::SetMatchesIntoIter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.SetMatchesIter.html\" title=\"struct regex::bytes::SetMatchesIter\">SetMatchesIter</a>&lt;'a&gt;","synthetic":true,"types":["regex::re_set::bytes::SetMatchesIter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex/enum.Error.html\" title=\"enum regex::Error\">Error</a>","synthetic":true,"types":["regex::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.RegexBuilder.html\" title=\"struct regex::RegexBuilder\">RegexBuilder</a>","synthetic":true,"types":["regex::re_builder::unicode::RegexBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.RegexSetBuilder.html\" title=\"struct regex::RegexSetBuilder\">RegexSetBuilder</a>","synthetic":true,"types":["regex::re_builder::set_unicode::RegexSetBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.RegexSet.html\" title=\"struct regex::RegexSet\">RegexSet</a>","synthetic":true,"types":["regex::re_set::unicode::RegexSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.SetMatches.html\" title=\"struct regex::SetMatches\">SetMatches</a>","synthetic":true,"types":["regex::re_set::unicode::SetMatches"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.SetMatchesIntoIter.html\" title=\"struct regex::SetMatchesIntoIter\">SetMatchesIntoIter</a>","synthetic":true,"types":["regex::re_set::unicode::SetMatchesIntoIter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"regex/struct.SetMatchesIter.html\" title=\"struct regex::SetMatchesIter\">SetMatchesIter</a>&lt;'a&gt;","synthetic":true,"types":["regex::re_set::unicode::SetMatchesIter"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/struct.Match.html\" title=\"struct regex::Match\">Match</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_unicode::Match"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.Regex.html\" title=\"struct regex::Regex\">Regex</a>","synthetic":true,"types":["regex::re_unicode::Regex"]},{"text":"impl&lt;'r&gt; Freeze for <a class=\"struct\" href=\"regex/struct.CaptureNames.html\" title=\"struct regex::CaptureNames\">CaptureNames</a>&lt;'r&gt;","synthetic":true,"types":["regex::re_unicode::CaptureNames"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/struct.Split.html\" title=\"struct regex::Split\">Split</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_unicode::Split"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/struct.SplitN.html\" title=\"struct regex::SplitN\">SplitN</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_unicode::SplitN"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.CaptureLocations.html\" title=\"struct regex::CaptureLocations\">CaptureLocations</a>","synthetic":true,"types":["regex::re_unicode::CaptureLocations"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/struct.Captures.html\" title=\"struct regex::Captures\">Captures</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_unicode::Captures"]},{"text":"impl&lt;'c, 't&gt; Freeze for <a class=\"struct\" href=\"regex/struct.SubCaptureMatches.html\" title=\"struct regex::SubCaptureMatches\">SubCaptureMatches</a>&lt;'c, 't&gt;","synthetic":true,"types":["regex::re_unicode::SubCaptureMatches"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/struct.CaptureMatches.html\" title=\"struct regex::CaptureMatches\">CaptureMatches</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_unicode::CaptureMatches"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/struct.Matches.html\" title=\"struct regex::Matches\">Matches</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_unicode::Matches"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"regex/struct.ReplacerRef.html\" title=\"struct regex::ReplacerRef\">ReplacerRef</a>&lt;'a, R&gt;","synthetic":true,"types":["regex::re_unicode::ReplacerRef"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/struct.NoExpand.html\" title=\"struct regex::NoExpand\">NoExpand</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_unicode::NoExpand"]}];
implementors["regex_syntax"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/parse/struct.ParserBuilder.html\" title=\"struct regex_syntax::ast::parse::ParserBuilder\">ParserBuilder</a>","synthetic":true,"types":["regex_syntax::ast::parse::ParserBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"regex_syntax/ast/parse/struct.Parser.html\" title=\"struct regex_syntax::ast::parse::Parser\">Parser</a>","synthetic":true,"types":["regex_syntax::ast::parse::Parser"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/print/struct.Printer.html\" title=\"struct regex_syntax::ast::print::Printer\">Printer</a>","synthetic":true,"types":["regex_syntax::ast::print::Printer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Error.html\" title=\"struct regex_syntax::ast::Error\">Error</a>","synthetic":true,"types":["regex_syntax::ast::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ErrorKind.html\" title=\"enum regex_syntax::ast::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["regex_syntax::ast::ErrorKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Span.html\" title=\"struct regex_syntax::ast::Span\">Span</a>","synthetic":true,"types":["regex_syntax::ast::Span"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Position.html\" title=\"struct regex_syntax::ast::Position\">Position</a>","synthetic":true,"types":["regex_syntax::ast::Position"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.WithComments.html\" title=\"struct regex_syntax::ast::WithComments\">WithComments</a>","synthetic":true,"types":["regex_syntax::ast::WithComments"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Comment.html\" title=\"struct regex_syntax::ast::Comment\">Comment</a>","synthetic":true,"types":["regex_syntax::ast::Comment"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.Ast.html\" title=\"enum regex_syntax::ast::Ast\">Ast</a>","synthetic":true,"types":["regex_syntax::ast::Ast"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Alternation.html\" title=\"struct regex_syntax::ast::Alternation\">Alternation</a>","synthetic":true,"types":["regex_syntax::ast::Alternation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Concat.html\" title=\"struct regex_syntax::ast::Concat\">Concat</a>","synthetic":true,"types":["regex_syntax::ast::Concat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Literal.html\" title=\"struct regex_syntax::ast::Literal\">Literal</a>","synthetic":true,"types":["regex_syntax::ast::Literal"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.LiteralKind.html\" title=\"enum regex_syntax::ast::LiteralKind\">LiteralKind</a>","synthetic":true,"types":["regex_syntax::ast::LiteralKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.SpecialLiteralKind.html\" title=\"enum regex_syntax::ast::SpecialLiteralKind\">SpecialLiteralKind</a>","synthetic":true,"types":["regex_syntax::ast::SpecialLiteralKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.HexLiteralKind.html\" title=\"enum regex_syntax::ast::HexLiteralKind\">HexLiteralKind</a>","synthetic":true,"types":["regex_syntax::ast::HexLiteralKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.Class.html\" title=\"enum regex_syntax::ast::Class\">Class</a>","synthetic":true,"types":["regex_syntax::ast::Class"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassPerl.html\" title=\"struct regex_syntax::ast::ClassPerl\">ClassPerl</a>","synthetic":true,"types":["regex_syntax::ast::ClassPerl"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassPerlKind.html\" title=\"enum regex_syntax::ast::ClassPerlKind\">ClassPerlKind</a>","synthetic":true,"types":["regex_syntax::ast::ClassPerlKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassAscii.html\" title=\"struct regex_syntax::ast::ClassAscii\">ClassAscii</a>","synthetic":true,"types":["regex_syntax::ast::ClassAscii"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassAsciiKind.html\" title=\"enum regex_syntax::ast::ClassAsciiKind\">ClassAsciiKind</a>","synthetic":true,"types":["regex_syntax::ast::ClassAsciiKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassUnicode.html\" title=\"struct regex_syntax::ast::ClassUnicode\">ClassUnicode</a>","synthetic":true,"types":["regex_syntax::ast::ClassUnicode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassUnicodeKind.html\" title=\"enum regex_syntax::ast::ClassUnicodeKind\">ClassUnicodeKind</a>","synthetic":true,"types":["regex_syntax::ast::ClassUnicodeKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassUnicodeOpKind.html\" title=\"enum regex_syntax::ast::ClassUnicodeOpKind\">ClassUnicodeOpKind</a>","synthetic":true,"types":["regex_syntax::ast::ClassUnicodeOpKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassBracketed.html\" title=\"struct regex_syntax::ast::ClassBracketed\">ClassBracketed</a>","synthetic":true,"types":["regex_syntax::ast::ClassBracketed"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassSet.html\" title=\"enum regex_syntax::ast::ClassSet\">ClassSet</a>","synthetic":true,"types":["regex_syntax::ast::ClassSet"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassSetItem.html\" title=\"enum regex_syntax::ast::ClassSetItem\">ClassSetItem</a>","synthetic":true,"types":["regex_syntax::ast::ClassSetItem"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassSetRange.html\" title=\"struct regex_syntax::ast::ClassSetRange\">ClassSetRange</a>","synthetic":true,"types":["regex_syntax::ast::ClassSetRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassSetUnion.html\" title=\"struct regex_syntax::ast::ClassSetUnion\">ClassSetUnion</a>","synthetic":true,"types":["regex_syntax::ast::ClassSetUnion"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassSetBinaryOp.html\" title=\"struct regex_syntax::ast::ClassSetBinaryOp\">ClassSetBinaryOp</a>","synthetic":true,"types":["regex_syntax::ast::ClassSetBinaryOp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassSetBinaryOpKind.html\" title=\"enum regex_syntax::ast::ClassSetBinaryOpKind\">ClassSetBinaryOpKind</a>","synthetic":true,"types":["regex_syntax::ast::ClassSetBinaryOpKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Assertion.html\" title=\"struct regex_syntax::ast::Assertion\">Assertion</a>","synthetic":true,"types":["regex_syntax::ast::Assertion"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.AssertionKind.html\" title=\"enum regex_syntax::ast::AssertionKind\">AssertionKind</a>","synthetic":true,"types":["regex_syntax::ast::AssertionKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Repetition.html\" title=\"struct regex_syntax::ast::Repetition\">Repetition</a>","synthetic":true,"types":["regex_syntax::ast::Repetition"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.RepetitionOp.html\" title=\"struct regex_syntax::ast::RepetitionOp\">RepetitionOp</a>","synthetic":true,"types":["regex_syntax::ast::RepetitionOp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.RepetitionKind.html\" title=\"enum regex_syntax::ast::RepetitionKind\">RepetitionKind</a>","synthetic":true,"types":["regex_syntax::ast::RepetitionKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.RepetitionRange.html\" title=\"enum regex_syntax::ast::RepetitionRange\">RepetitionRange</a>","synthetic":true,"types":["regex_syntax::ast::RepetitionRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Group.html\" title=\"struct regex_syntax::ast::Group\">Group</a>","synthetic":true,"types":["regex_syntax::ast::Group"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.GroupKind.html\" title=\"enum regex_syntax::ast::GroupKind\">GroupKind</a>","synthetic":true,"types":["regex_syntax::ast::GroupKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.CaptureName.html\" title=\"struct regex_syntax::ast::CaptureName\">CaptureName</a>","synthetic":true,"types":["regex_syntax::ast::CaptureName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.SetFlags.html\" title=\"struct regex_syntax::ast::SetFlags\">SetFlags</a>","synthetic":true,"types":["regex_syntax::ast::SetFlags"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Flags.html\" title=\"struct regex_syntax::ast::Flags\">Flags</a>","synthetic":true,"types":["regex_syntax::ast::Flags"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.FlagsItem.html\" title=\"struct regex_syntax::ast::FlagsItem\">FlagsItem</a>","synthetic":true,"types":["regex_syntax::ast::FlagsItem"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.FlagsItemKind.html\" title=\"enum regex_syntax::ast::FlagsItemKind\">FlagsItemKind</a>","synthetic":true,"types":["regex_syntax::ast::FlagsItemKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.Flag.html\" title=\"enum regex_syntax::ast::Flag\">Flag</a>","synthetic":true,"types":["regex_syntax::ast::Flag"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/enum.Error.html\" title=\"enum regex_syntax::Error\">Error</a>","synthetic":true,"types":["regex_syntax::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/literal/struct.Literals.html\" title=\"struct regex_syntax::hir::literal::Literals\">Literals</a>","synthetic":true,"types":["regex_syntax::hir::literal::Literals"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/literal/struct.Literal.html\" title=\"struct regex_syntax::hir::literal::Literal\">Literal</a>","synthetic":true,"types":["regex_syntax::hir::literal::Literal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/print/struct.Printer.html\" title=\"struct regex_syntax::hir::print::Printer\">Printer</a>","synthetic":true,"types":["regex_syntax::hir::print::Printer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/translate/struct.TranslatorBuilder.html\" title=\"struct regex_syntax::hir::translate::TranslatorBuilder\">TranslatorBuilder</a>","synthetic":true,"types":["regex_syntax::hir::translate::TranslatorBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"regex_syntax/hir/translate/struct.Translator.html\" title=\"struct regex_syntax::hir::translate::Translator\">Translator</a>","synthetic":true,"types":["regex_syntax::hir::translate::Translator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.CaseFoldError.html\" title=\"struct regex_syntax::hir::CaseFoldError\">CaseFoldError</a>","synthetic":true,"types":["regex_syntax::unicode::CaseFoldError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.Error.html\" title=\"struct regex_syntax::hir::Error\">Error</a>","synthetic":true,"types":["regex_syntax::hir::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.ErrorKind.html\" title=\"enum regex_syntax::hir::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["regex_syntax::hir::ErrorKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.Hir.html\" title=\"struct regex_syntax::hir::Hir\">Hir</a>","synthetic":true,"types":["regex_syntax::hir::Hir"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.HirKind.html\" title=\"enum regex_syntax::hir::HirKind\">HirKind</a>","synthetic":true,"types":["regex_syntax::hir::HirKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.Literal.html\" title=\"enum regex_syntax::hir::Literal\">Literal</a>","synthetic":true,"types":["regex_syntax::hir::Literal"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.Class.html\" title=\"enum regex_syntax::hir::Class\">Class</a>","synthetic":true,"types":["regex_syntax::hir::Class"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassUnicode.html\" title=\"struct regex_syntax::hir::ClassUnicode\">ClassUnicode</a>","synthetic":true,"types":["regex_syntax::hir::ClassUnicode"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassUnicodeIter.html\" title=\"struct regex_syntax::hir::ClassUnicodeIter\">ClassUnicodeIter</a>&lt;'a&gt;","synthetic":true,"types":["regex_syntax::hir::ClassUnicodeIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassUnicodeRange.html\" title=\"struct regex_syntax::hir::ClassUnicodeRange\">ClassUnicodeRange</a>","synthetic":true,"types":["regex_syntax::hir::ClassUnicodeRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassBytes.html\" title=\"struct regex_syntax::hir::ClassBytes\">ClassBytes</a>","synthetic":true,"types":["regex_syntax::hir::ClassBytes"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassBytesIter.html\" title=\"struct regex_syntax::hir::ClassBytesIter\">ClassBytesIter</a>&lt;'a&gt;","synthetic":true,"types":["regex_syntax::hir::ClassBytesIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassBytesRange.html\" title=\"struct regex_syntax::hir::ClassBytesRange\">ClassBytesRange</a>","synthetic":true,"types":["regex_syntax::hir::ClassBytesRange"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.Anchor.html\" title=\"enum regex_syntax::hir::Anchor\">Anchor</a>","synthetic":true,"types":["regex_syntax::hir::Anchor"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.WordBoundary.html\" title=\"enum regex_syntax::hir::WordBoundary\">WordBoundary</a>","synthetic":true,"types":["regex_syntax::hir::WordBoundary"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.Group.html\" title=\"struct regex_syntax::hir::Group\">Group</a>","synthetic":true,"types":["regex_syntax::hir::Group"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.GroupKind.html\" title=\"enum regex_syntax::hir::GroupKind\">GroupKind</a>","synthetic":true,"types":["regex_syntax::hir::GroupKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.Repetition.html\" title=\"struct regex_syntax::hir::Repetition\">Repetition</a>","synthetic":true,"types":["regex_syntax::hir::Repetition"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.RepetitionKind.html\" title=\"enum regex_syntax::hir::RepetitionKind\">RepetitionKind</a>","synthetic":true,"types":["regex_syntax::hir::RepetitionKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.RepetitionRange.html\" title=\"enum regex_syntax::hir::RepetitionRange\">RepetitionRange</a>","synthetic":true,"types":["regex_syntax::hir::RepetitionRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/struct.ParserBuilder.html\" title=\"struct regex_syntax::ParserBuilder\">ParserBuilder</a>","synthetic":true,"types":["regex_syntax::parser::ParserBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"regex_syntax/struct.Parser.html\" title=\"struct regex_syntax::Parser\">Parser</a>","synthetic":true,"types":["regex_syntax::parser::Parser"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/struct.UnicodeWordError.html\" title=\"struct regex_syntax::UnicodeWordError\">UnicodeWordError</a>","synthetic":true,"types":["regex_syntax::unicode::UnicodeWordError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/utf8/enum.Utf8Sequence.html\" title=\"enum regex_syntax::utf8::Utf8Sequence\">Utf8Sequence</a>","synthetic":true,"types":["regex_syntax::utf8::Utf8Sequence"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/utf8/struct.Utf8Range.html\" title=\"struct regex_syntax::utf8::Utf8Range\">Utf8Range</a>","synthetic":true,"types":["regex_syntax::utf8::Utf8Range"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/utf8/struct.Utf8Sequences.html\" title=\"struct regex_syntax::utf8::Utf8Sequences\">Utf8Sequences</a>","synthetic":true,"types":["regex_syntax::utf8::Utf8Sequences"]}];
implementors["reqwest"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"reqwest/struct.Error.html\" title=\"struct reqwest::Error\">Error</a>","synthetic":true,"types":["reqwest::error::Error"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"reqwest/struct.Body.html\" title=\"struct reqwest::Body\">Body</a>","synthetic":true,"types":["reqwest::async_impl::body::Body"]},{"text":"impl Freeze for <a class=\"struct\" href=\"reqwest/struct.Client.html\" title=\"struct reqwest::Client\">Client</a>","synthetic":true,"types":["reqwest::async_impl::client::Client"]},{"text":"impl Freeze for <a class=\"struct\" href=\"reqwest/struct.ClientBuilder.html\" title=\"struct reqwest::ClientBuilder\">ClientBuilder</a>","synthetic":true,"types":["reqwest::async_impl::client::ClientBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"reqwest/struct.Request.html\" title=\"struct reqwest::Request\">Request</a>","synthetic":true,"types":["reqwest::async_impl::request::Request"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"reqwest/struct.RequestBuilder.html\" title=\"struct reqwest::RequestBuilder\">RequestBuilder</a>","synthetic":true,"types":["reqwest::async_impl::request::RequestBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"reqwest/struct.Response.html\" title=\"struct reqwest::Response\">Response</a>","synthetic":true,"types":["reqwest::async_impl::response::Response"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"reqwest/blocking/struct.Body.html\" title=\"struct reqwest::blocking::Body\">Body</a>","synthetic":true,"types":["reqwest::blocking::body::Body"]},{"text":"impl Freeze for <a class=\"struct\" href=\"reqwest/blocking/struct.Client.html\" title=\"struct reqwest::blocking::Client\">Client</a>","synthetic":true,"types":["reqwest::blocking::client::Client"]},{"text":"impl Freeze for <a class=\"struct\" href=\"reqwest/blocking/struct.ClientBuilder.html\" title=\"struct reqwest::blocking::ClientBuilder\">ClientBuilder</a>","synthetic":true,"types":["reqwest::blocking::client::ClientBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"reqwest/blocking/struct.Request.html\" title=\"struct reqwest::blocking::Request\">Request</a>","synthetic":true,"types":["reqwest::blocking::request::Request"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"reqwest/blocking/struct.RequestBuilder.html\" title=\"struct reqwest::blocking::RequestBuilder\">RequestBuilder</a>","synthetic":true,"types":["reqwest::blocking::request::RequestBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"reqwest/blocking/struct.Response.html\" title=\"struct reqwest::blocking::Response\">Response</a>","synthetic":true,"types":["reqwest::blocking::response::Response"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"reqwest/cookie/struct.Cookie.html\" title=\"struct reqwest::cookie::Cookie\">Cookie</a>&lt;'a&gt;","synthetic":true,"types":["reqwest::cookie::Cookie"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"reqwest/cookie/struct.Jar.html\" title=\"struct reqwest::cookie::Jar\">Jar</a>","synthetic":true,"types":["reqwest::cookie::Jar"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"reqwest/struct.Proxy.html\" title=\"struct reqwest::Proxy\">Proxy</a>","synthetic":true,"types":["reqwest::proxy::Proxy"]},{"text":"impl Freeze for <a class=\"struct\" href=\"reqwest/redirect/struct.Policy.html\" title=\"struct reqwest::redirect::Policy\">Policy</a>","synthetic":true,"types":["reqwest::redirect::Policy"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"reqwest/redirect/struct.Attempt.html\" title=\"struct reqwest::redirect::Attempt\">Attempt</a>&lt;'a&gt;","synthetic":true,"types":["reqwest::redirect::Attempt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"reqwest/redirect/struct.Action.html\" title=\"struct reqwest::redirect::Action\">Action</a>","synthetic":true,"types":["reqwest::redirect::Action"]},{"text":"impl Freeze for <a class=\"struct\" href=\"reqwest/tls/struct.Certificate.html\" title=\"struct reqwest::tls::Certificate\">Certificate</a>","synthetic":true,"types":["reqwest::tls::Certificate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"reqwest/tls/struct.Identity.html\" title=\"struct reqwest::tls::Identity\">Identity</a>","synthetic":true,"types":["reqwest::tls::Identity"]},{"text":"impl Freeze for <a class=\"struct\" href=\"reqwest/tls/struct.Version.html\" title=\"struct reqwest::tls::Version\">Version</a>","synthetic":true,"types":["reqwest::tls::Version"]}];
implementors["ring"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"ring/test/struct.TestCase.html\" title=\"struct ring::test::TestCase\">TestCase</a>","synthetic":true,"types":["ring::test::TestCase"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"ring/test/struct.File.html\" title=\"struct ring::test::File\">File</a>&lt;'a&gt;","synthetic":true,"types":["ring::test::File"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/aead/chacha20_poly1305_openssh/struct.SealingKey.html\" title=\"struct ring::aead::chacha20_poly1305_openssh::SealingKey\">SealingKey</a>","synthetic":true,"types":["ring::aead::chacha20_poly1305_openssh::SealingKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/aead/chacha20_poly1305_openssh/struct.OpeningKey.html\" title=\"struct ring::aead::chacha20_poly1305_openssh::OpeningKey\">OpeningKey</a>","synthetic":true,"types":["ring::aead::chacha20_poly1305_openssh::OpeningKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/aead/struct.Nonce.html\" title=\"struct ring::aead::Nonce\">Nonce</a>","synthetic":true,"types":["ring::aead::nonce::Nonce"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/aead/quic/struct.HeaderProtectionKey.html\" title=\"struct ring::aead::quic::HeaderProtectionKey\">HeaderProtectionKey</a>","synthetic":true,"types":["ring::aead::quic::HeaderProtectionKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/aead/quic/struct.Algorithm.html\" title=\"struct ring::aead::quic::Algorithm\">Algorithm</a>","synthetic":true,"types":["ring::aead::quic::Algorithm"]},{"text":"impl&lt;N&gt; Freeze for <a class=\"struct\" href=\"ring/aead/struct.OpeningKey.html\" title=\"struct ring::aead::OpeningKey\">OpeningKey</a>&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["ring::aead::OpeningKey"]},{"text":"impl&lt;N&gt; Freeze for <a class=\"struct\" href=\"ring/aead/struct.SealingKey.html\" title=\"struct ring::aead::SealingKey\">SealingKey</a>&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["ring::aead::SealingKey"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"ring/aead/struct.Aad.html\" title=\"struct ring::aead::Aad\">Aad</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["ring::aead::Aad"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/aead/struct.UnboundKey.html\" title=\"struct ring::aead::UnboundKey\">UnboundKey</a>","synthetic":true,"types":["ring::aead::UnboundKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/aead/struct.LessSafeKey.html\" title=\"struct ring::aead::LessSafeKey\">LessSafeKey</a>","synthetic":true,"types":["ring::aead::LessSafeKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/aead/struct.Algorithm.html\" title=\"struct ring::aead::Algorithm\">Algorithm</a>","synthetic":true,"types":["ring::aead::Algorithm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/aead/struct.Tag.html\" title=\"struct ring::aead::Tag\">Tag</a>","synthetic":true,"types":["ring::aead::Tag"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/agreement/struct.Algorithm.html\" title=\"struct ring::agreement::Algorithm\">Algorithm</a>","synthetic":true,"types":["ring::agreement::Algorithm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/agreement/struct.EphemeralPrivateKey.html\" title=\"struct ring::agreement::EphemeralPrivateKey\">EphemeralPrivateKey</a>","synthetic":true,"types":["ring::agreement::EphemeralPrivateKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/agreement/struct.PublicKey.html\" title=\"struct ring::agreement::PublicKey\">PublicKey</a>","synthetic":true,"types":["ring::agreement::PublicKey"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"ring/agreement/struct.UnparsedPublicKey.html\" title=\"struct ring::agreement::UnparsedPublicKey\">UnparsedPublicKey</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["ring::agreement::UnparsedPublicKey"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"ring/io/struct.Positive.html\" title=\"struct ring::io::Positive\">Positive</a>&lt;'a&gt;","synthetic":true,"types":["ring::io::positive::Positive"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/digest/struct.Context.html\" title=\"struct ring::digest::Context\">Context</a>","synthetic":true,"types":["ring::digest::Context"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/digest/struct.Digest.html\" title=\"struct ring::digest::Digest\">Digest</a>","synthetic":true,"types":["ring::digest::Digest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/digest/struct.Algorithm.html\" title=\"struct ring::digest::Algorithm\">Algorithm</a>","synthetic":true,"types":["ring::digest::Algorithm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/signature/struct.Ed25519KeyPair.html\" title=\"struct ring::signature::Ed25519KeyPair\">Ed25519KeyPair</a>","synthetic":true,"types":["ring::ec::curve25519::ed25519::signing::Ed25519KeyPair"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/signature/struct.EdDSAParameters.html\" title=\"struct ring::signature::EdDSAParameters\">EdDSAParameters</a>","synthetic":true,"types":["ring::ec::curve25519::ed25519::verification::EdDSAParameters"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/signature/struct.EcdsaSigningAlgorithm.html\" title=\"struct ring::signature::EcdsaSigningAlgorithm\">EcdsaSigningAlgorithm</a>","synthetic":true,"types":["ring::ec::suite_b::ecdsa::signing::EcdsaSigningAlgorithm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/signature/struct.EcdsaKeyPair.html\" title=\"struct ring::signature::EcdsaKeyPair\">EcdsaKeyPair</a>","synthetic":true,"types":["ring::ec::suite_b::ecdsa::signing::EcdsaKeyPair"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/signature/struct.EcdsaVerificationAlgorithm.html\" title=\"struct ring::signature::EcdsaVerificationAlgorithm\">EcdsaVerificationAlgorithm</a>","synthetic":true,"types":["ring::ec::suite_b::ecdsa::verification::EcdsaVerificationAlgorithm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/error/struct.Unspecified.html\" title=\"struct ring::error::Unspecified\">Unspecified</a>","synthetic":true,"types":["ring::error::Unspecified"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/error/struct.KeyRejected.html\" title=\"struct ring::error::KeyRejected\">KeyRejected</a>","synthetic":true,"types":["ring::error::KeyRejected"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/hkdf/struct.Algorithm.html\" title=\"struct ring::hkdf::Algorithm\">Algorithm</a>","synthetic":true,"types":["ring::hkdf::Algorithm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/hkdf/struct.Salt.html\" title=\"struct ring::hkdf::Salt\">Salt</a>","synthetic":true,"types":["ring::hkdf::Salt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/hkdf/struct.Prk.html\" title=\"struct ring::hkdf::Prk\">Prk</a>","synthetic":true,"types":["ring::hkdf::Prk"]},{"text":"impl&lt;'a, L&gt; Freeze for <a class=\"struct\" href=\"ring/hkdf/struct.Okm.html\" title=\"struct ring::hkdf::Okm\">Okm</a>&lt;'a, L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,&nbsp;</span>","synthetic":true,"types":["ring::hkdf::Okm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/hmac/struct.Algorithm.html\" title=\"struct ring::hmac::Algorithm\">Algorithm</a>","synthetic":true,"types":["ring::hmac::Algorithm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/hmac/struct.Tag.html\" title=\"struct ring::hmac::Tag\">Tag</a>","synthetic":true,"types":["ring::hmac::Tag"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/hmac/struct.Key.html\" title=\"struct ring::hmac::Key\">Key</a>","synthetic":true,"types":["ring::hmac::Key"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/hmac/struct.Context.html\" title=\"struct ring::hmac::Context\">Context</a>","synthetic":true,"types":["ring::hmac::Context"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/pbkdf2/struct.Algorithm.html\" title=\"struct ring::pbkdf2::Algorithm\">Algorithm</a>","synthetic":true,"types":["ring::pbkdf2::Algorithm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/pkcs8/struct.Document.html\" title=\"struct ring::pkcs8::Document\">Document</a>","synthetic":true,"types":["ring::pkcs8::Document"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"ring/rand/struct.Random.html\" title=\"struct ring::rand::Random\">Random</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["ring::rand::Random"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/rand/struct.SystemRandom.html\" title=\"struct ring::rand::SystemRandom\">SystemRandom</a>","synthetic":true,"types":["ring::rand::SystemRandom"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"ring/signature/struct.RsaPublicKeyComponents.html\" title=\"struct ring::signature::RsaPublicKeyComponents\">RsaPublicKeyComponents</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["ring::rsa::verification::RsaPublicKeyComponents"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/signature/struct.RsaKeyPair.html\" title=\"struct ring::signature::RsaKeyPair\">RsaKeyPair</a>","synthetic":true,"types":["ring::rsa::signing::RsaKeyPair"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/signature/struct.RsaSubjectPublicKey.html\" title=\"struct ring::signature::RsaSubjectPublicKey\">RsaSubjectPublicKey</a>","synthetic":true,"types":["ring::rsa::signing::RsaSubjectPublicKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/signature/struct.RsaParameters.html\" title=\"struct ring::signature::RsaParameters\">RsaParameters</a>","synthetic":true,"types":["ring::rsa::RsaParameters"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/signature/struct.Signature.html\" title=\"struct ring::signature::Signature\">Signature</a>","synthetic":true,"types":["ring::signature::Signature"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"ring/signature/struct.UnparsedPublicKey.html\" title=\"struct ring::signature::UnparsedPublicKey\">UnparsedPublicKey</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["ring::signature::UnparsedPublicKey"]}];
implementors["rustc_demangle"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"rustc_demangle/struct.Demangle.html\" title=\"struct rustc_demangle::Demangle\">Demangle</a>&lt;'a&gt;","synthetic":true,"types":["rustc_demangle::Demangle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustc_demangle/struct.TryDemangleError.html\" title=\"struct rustc_demangle::TryDemangleError\">TryDemangleError</a>","synthetic":true,"types":["rustc_demangle::TryDemangleError"]}];
implementors["ryu"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"ryu/struct.Buffer.html\" title=\"struct ryu::Buffer\">Buffer</a>","synthetic":true,"types":["ryu::buffer::Buffer"]}];
implementors["same_file"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"same_file/struct.Handle.html\" title=\"struct same_file::Handle\">Handle</a>","synthetic":true,"types":["same_file::Handle"]}];
implementors["scoped_tls"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"scoped_tls/struct.ScopedKey.html\" title=\"struct scoped_tls::ScopedKey\">ScopedKey</a>&lt;T&gt;","synthetic":true,"types":["scoped_tls::ScopedKey"]}];
implementors["scopeguard"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"scopeguard/enum.Always.html\" title=\"enum scopeguard::Always\">Always</a>","synthetic":true,"types":["scopeguard::Always"]},{"text":"impl&lt;T, F, S&gt; Freeze for <a class=\"struct\" href=\"scopeguard/struct.ScopeGuard.html\" title=\"struct scopeguard::ScopeGuard\">ScopeGuard</a>&lt;T, F, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["scopeguard::ScopeGuard"]}];
implementors["serde"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"serde/de/value/struct.Error.html\" title=\"struct serde::de::value::Error\">Error</a>","synthetic":true,"types":["serde::de::value::Error"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.UnitDeserializer.html\" title=\"struct serde::de::value::UnitDeserializer\">UnitDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::UnitDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.BoolDeserializer.html\" title=\"struct serde::de::value::BoolDeserializer\">BoolDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::BoolDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I8Deserializer.html\" title=\"struct serde::de::value::I8Deserializer\">I8Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::I8Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I16Deserializer.html\" title=\"struct serde::de::value::I16Deserializer\">I16Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::I16Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I32Deserializer.html\" title=\"struct serde::de::value::I32Deserializer\">I32Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::I32Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I64Deserializer.html\" title=\"struct serde::de::value::I64Deserializer\">I64Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::I64Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.IsizeDeserializer.html\" title=\"struct serde::de::value::IsizeDeserializer\">IsizeDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::IsizeDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U8Deserializer.html\" title=\"struct serde::de::value::U8Deserializer\">U8Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::U8Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U16Deserializer.html\" title=\"struct serde::de::value::U16Deserializer\">U16Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::U16Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U64Deserializer.html\" title=\"struct serde::de::value::U64Deserializer\">U64Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::U64Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.UsizeDeserializer.html\" title=\"struct serde::de::value::UsizeDeserializer\">UsizeDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::UsizeDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.F32Deserializer.html\" title=\"struct serde::de::value::F32Deserializer\">F32Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::F32Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.F64Deserializer.html\" title=\"struct serde::de::value::F64Deserializer\">F64Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::F64Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.CharDeserializer.html\" title=\"struct serde::de::value::CharDeserializer\">CharDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::CharDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I128Deserializer.html\" title=\"struct serde::de::value::I128Deserializer\">I128Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::I128Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U128Deserializer.html\" title=\"struct serde::de::value::U128Deserializer\">U128Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::U128Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U32Deserializer.html\" title=\"struct serde::de::value::U32Deserializer\">U32Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::U32Deserializer"]},{"text":"impl&lt;'a, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.StrDeserializer.html\" title=\"struct serde::de::value::StrDeserializer\">StrDeserializer</a>&lt;'a, E&gt;","synthetic":true,"types":["serde::de::value::StrDeserializer"]},{"text":"impl&lt;'de, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.BorrowedStrDeserializer.html\" title=\"struct serde::de::value::BorrowedStrDeserializer\">BorrowedStrDeserializer</a>&lt;'de, E&gt;","synthetic":true,"types":["serde::de::value::BorrowedStrDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.StringDeserializer.html\" title=\"struct serde::de::value::StringDeserializer\">StringDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::StringDeserializer"]},{"text":"impl&lt;'a, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.CowStrDeserializer.html\" title=\"struct serde::de::value::CowStrDeserializer\">CowStrDeserializer</a>&lt;'a, E&gt;","synthetic":true,"types":["serde::de::value::CowStrDeserializer"]},{"text":"impl&lt;'a, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.BytesDeserializer.html\" title=\"struct serde::de::value::BytesDeserializer\">BytesDeserializer</a>&lt;'a, E&gt;","synthetic":true,"types":["serde::de::value::BytesDeserializer"]},{"text":"impl&lt;'de, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.BorrowedBytesDeserializer.html\" title=\"struct serde::de::value::BorrowedBytesDeserializer\">BorrowedBytesDeserializer</a>&lt;'de, E&gt;","synthetic":true,"types":["serde::de::value::BorrowedBytesDeserializer"]},{"text":"impl&lt;I, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.SeqDeserializer.html\" title=\"struct serde::de::value::SeqDeserializer\">SeqDeserializer</a>&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["serde::de::value::SeqDeserializer"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.SeqAccessDeserializer.html\" title=\"struct serde::de::value::SeqAccessDeserializer\">SeqAccessDeserializer</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["serde::de::value::SeqAccessDeserializer"]},{"text":"impl&lt;'de, I, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.MapDeserializer.html\" title=\"struct serde::de::value::MapDeserializer\">MapDeserializer</a>&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.61.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a> as Pair&gt;::Second: Freeze,&nbsp;</span>","synthetic":true,"types":["serde::de::value::MapDeserializer"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.MapAccessDeserializer.html\" title=\"struct serde::de::value::MapAccessDeserializer\">MapAccessDeserializer</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["serde::de::value::MapAccessDeserializer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde/de/struct.IgnoredAny.html\" title=\"struct serde::de::IgnoredAny\">IgnoredAny</a>","synthetic":true,"types":["serde::de::ignored_any::IgnoredAny"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"serde/de/enum.Unexpected.html\" title=\"enum serde::de::Unexpected\">Unexpected</a>&lt;'a&gt;","synthetic":true,"types":["serde::de::Unexpected"]},{"text":"impl&lt;Ok, Error&gt; Freeze for <a class=\"struct\" href=\"serde/ser/struct.Impossible.html\" title=\"struct serde::ser::Impossible\">Impossible</a>&lt;Ok, Error&gt;","synthetic":true,"types":["serde::ser::impossible::Impossible"]}];
implementors["serde_bytes"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"serde_bytes/struct.Bytes.html\" title=\"struct serde_bytes::Bytes\">Bytes</a>","synthetic":true,"types":["serde_bytes::bytes::Bytes"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_bytes/struct.ByteBuf.html\" title=\"struct serde_bytes::ByteBuf\">ByteBuf</a>","synthetic":true,"types":["serde_bytes::bytebuf::ByteBuf"]}];
implementors["serde_generate"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"serde_generate/indent/enum.IndentConfig.html\" title=\"enum serde_generate::indent::IndentConfig\">IndentConfig</a>","synthetic":true,"types":["serde_generate::indent::IndentConfig"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"serde_generate/indent/struct.IndentedWriter.html\" title=\"struct serde_generate::indent::IndentedWriter\">IndentedWriter</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["serde_generate::indent::IndentedWriter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_generate/cpp/struct.CodeGenerator.html\" title=\"struct serde_generate::cpp::CodeGenerator\">CodeGenerator</a>&lt;'a&gt;","synthetic":true,"types":["serde_generate::cpp::CodeGenerator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_generate/cpp/struct.Installer.html\" title=\"struct serde_generate::cpp::Installer\">Installer</a>","synthetic":true,"types":["serde_generate::cpp::Installer"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_generate/csharp/struct.CodeGenerator.html\" title=\"struct serde_generate::csharp::CodeGenerator\">CodeGenerator</a>&lt;'a&gt;","synthetic":true,"types":["serde_generate::csharp::CodeGenerator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_generate/csharp/struct.Installer.html\" title=\"struct serde_generate::csharp::Installer\">Installer</a>","synthetic":true,"types":["serde_generate::csharp::Installer"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_generate/dart/struct.CodeGenerator.html\" title=\"struct serde_generate::dart::CodeGenerator\">CodeGenerator</a>&lt;'a&gt;","synthetic":true,"types":["serde_generate::dart::CodeGenerator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_generate/dart/struct.Installer.html\" title=\"struct serde_generate::dart::Installer\">Installer</a>","synthetic":true,"types":["serde_generate::dart::Installer"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_generate/golang/struct.CodeGenerator.html\" title=\"struct serde_generate::golang::CodeGenerator\">CodeGenerator</a>&lt;'a&gt;","synthetic":true,"types":["serde_generate::golang::CodeGenerator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_generate/golang/struct.Installer.html\" title=\"struct serde_generate::golang::Installer\">Installer</a>","synthetic":true,"types":["serde_generate::golang::Installer"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_generate/java/struct.CodeGenerator.html\" title=\"struct serde_generate::java::CodeGenerator\">CodeGenerator</a>&lt;'a&gt;","synthetic":true,"types":["serde_generate::java::CodeGenerator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_generate/java/struct.Installer.html\" title=\"struct serde_generate::java::Installer\">Installer</a>","synthetic":true,"types":["serde_generate::java::Installer"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_generate/python3/struct.CodeGenerator.html\" title=\"struct serde_generate::python3::CodeGenerator\">CodeGenerator</a>&lt;'a&gt;","synthetic":true,"types":["serde_generate::python3::CodeGenerator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_generate/python3/struct.Installer.html\" title=\"struct serde_generate::python3::Installer\">Installer</a>","synthetic":true,"types":["serde_generate::python3::Installer"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_generate/rust/struct.CodeGenerator.html\" title=\"struct serde_generate::rust::CodeGenerator\">CodeGenerator</a>&lt;'a&gt;","synthetic":true,"types":["serde_generate::rust::CodeGenerator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_generate/rust/struct.Installer.html\" title=\"struct serde_generate::rust::Installer\">Installer</a>","synthetic":true,"types":["serde_generate::rust::Installer"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_generate/swift/struct.CodeGenerator.html\" title=\"struct serde_generate::swift::CodeGenerator\">CodeGenerator</a>&lt;'a&gt;","synthetic":true,"types":["serde_generate::swift::CodeGenerator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_generate/swift/struct.Installer.html\" title=\"struct serde_generate::swift::Installer\">Installer</a>","synthetic":true,"types":["serde_generate::swift::Installer"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_generate/typescript/struct.CodeGenerator.html\" title=\"struct serde_generate::typescript::CodeGenerator\">CodeGenerator</a>&lt;'a&gt;","synthetic":true,"types":["serde_generate::typescript::CodeGenerator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_generate/typescript/struct.Installer.html\" title=\"struct serde_generate::typescript::Installer\">Installer</a>","synthetic":true,"types":["serde_generate::typescript::Installer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_generate/struct.CodeGeneratorConfig.html\" title=\"struct serde_generate::CodeGeneratorConfig\">CodeGeneratorConfig</a>","synthetic":true,"types":["serde_generate::config::CodeGeneratorConfig"]},{"text":"impl Freeze for <a class=\"enum\" href=\"serde_generate/enum.Encoding.html\" title=\"enum serde_generate::Encoding\">Encoding</a>","synthetic":true,"types":["serde_generate::config::Encoding"]}];
implementors["serde_hjson"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"serde_hjson/builder/struct.ArrayBuilder.html\" title=\"struct serde_hjson::builder::ArrayBuilder\">ArrayBuilder</a>","synthetic":true,"types":["serde_hjson::builder::ArrayBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_hjson/builder/struct.ObjectBuilder.html\" title=\"struct serde_hjson::builder::ObjectBuilder\">ObjectBuilder</a>","synthetic":true,"types":["serde_hjson::builder::ObjectBuilder"]},{"text":"impl&lt;Iter&gt; Freeze for <a class=\"struct\" href=\"serde_hjson/de/struct.Deserializer.html\" title=\"struct serde_hjson::de::Deserializer\">Deserializer</a>&lt;Iter&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Iter: Freeze,&nbsp;</span>","synthetic":true,"types":["serde_hjson::de::Deserializer"]},{"text":"impl&lt;T, Iter&gt; Freeze for <a class=\"struct\" href=\"serde_hjson/de/struct.StreamDeserializer.html\" title=\"struct serde_hjson::de::StreamDeserializer\">StreamDeserializer</a>&lt;T, Iter&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Iter: Freeze,&nbsp;</span>","synthetic":true,"types":["serde_hjson::de::StreamDeserializer"]},{"text":"impl Freeze for <a class=\"enum\" href=\"serde_hjson/error/enum.ErrorCode.html\" title=\"enum serde_hjson::error::ErrorCode\">ErrorCode</a>","synthetic":true,"types":["serde_hjson::error::ErrorCode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"serde_hjson/error/enum.Error.html\" title=\"enum serde_hjson::error::Error\">Error</a>","synthetic":true,"types":["serde_hjson::error::Error"]},{"text":"impl&lt;W, F&gt; Freeze for <a class=\"struct\" href=\"serde_hjson/ser/struct.Serializer.html\" title=\"struct serde_hjson::ser::Serializer\">Serializer</a>&lt;W, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["serde_hjson::ser::Serializer"]},{"text":"impl Freeze for <a class=\"enum\" href=\"serde_hjson/value/enum.Value.html\" title=\"enum serde_hjson::value::Value\">Value</a>","synthetic":true,"types":["serde_hjson::value::Value"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_hjson/value/struct.Serializer.html\" title=\"struct serde_hjson::value::Serializer\">Serializer</a>","synthetic":true,"types":["serde_hjson::value::Serializer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_hjson/value/struct.Deserializer.html\" title=\"struct serde_hjson::value::Deserializer\">Deserializer</a>","synthetic":true,"types":["serde_hjson::value::Deserializer"]}];
implementors["serde_json"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/de/struct.SliceRead.html\" title=\"struct serde_json::de::SliceRead\">SliceRead</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::read::SliceRead"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/de/struct.StrRead.html\" title=\"struct serde_json::de::StrRead\">StrRead</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::read::StrRead"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"serde_json/de/struct.IoRead.html\" title=\"struct serde_json::de::IoRead\">IoRead</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["serde_json::read::IoRead"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"serde_json/struct.Deserializer.html\" title=\"struct serde_json::Deserializer\">Deserializer</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["serde_json::de::Deserializer"]},{"text":"impl&lt;'de, R, T&gt; Freeze for <a class=\"struct\" href=\"serde_json/struct.StreamDeserializer.html\" title=\"struct serde_json::StreamDeserializer\">StreamDeserializer</a>&lt;'de, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["serde_json::de::StreamDeserializer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_json/struct.Error.html\" title=\"struct serde_json::Error\">Error</a>","synthetic":true,"types":["serde_json::error::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"serde_json/error/enum.Category.html\" title=\"enum serde_json::error::Category\">Category</a>","synthetic":true,"types":["serde_json::error::Category"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"serde_json/struct.Map.html\" title=\"struct serde_json::Map\">Map</a>&lt;K, V&gt;","synthetic":true,"types":["serde_json::map::Map"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"serde_json/map/enum.Entry.html\" title=\"enum serde_json::map::Entry\">Entry</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::Entry"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.VacantEntry.html\" title=\"struct serde_json::map::VacantEntry\">VacantEntry</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::VacantEntry"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.OccupiedEntry.html\" title=\"struct serde_json::map::OccupiedEntry\">OccupiedEntry</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::OccupiedEntry"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.Iter.html\" title=\"struct serde_json::map::Iter\">Iter</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::Iter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.IterMut.html\" title=\"struct serde_json::map::IterMut\">IterMut</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::IterMut"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_json/map/struct.IntoIter.html\" title=\"struct serde_json::map::IntoIter\">IntoIter</a>","synthetic":true,"types":["serde_json::map::IntoIter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.Keys.html\" title=\"struct serde_json::map::Keys\">Keys</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::Keys"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.Values.html\" title=\"struct serde_json::map::Values\">Values</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::Values"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.ValuesMut.html\" title=\"struct serde_json::map::ValuesMut\">ValuesMut</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::ValuesMut"]},{"text":"impl&lt;W, F&gt; Freeze for <a class=\"struct\" href=\"serde_json/struct.Serializer.html\" title=\"struct serde_json::Serializer\">Serializer</a>&lt;W, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["serde_json::ser::Serializer"]},{"text":"impl Freeze for <a class=\"enum\" href=\"serde_json/ser/enum.CharEscape.html\" title=\"enum serde_json::ser::CharEscape\">CharEscape</a>","synthetic":true,"types":["serde_json::ser::CharEscape"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_json/ser/struct.CompactFormatter.html\" title=\"struct serde_json::ser::CompactFormatter\">CompactFormatter</a>","synthetic":true,"types":["serde_json::ser::CompactFormatter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/ser/struct.PrettyFormatter.html\" title=\"struct serde_json::ser::PrettyFormatter\">PrettyFormatter</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::ser::PrettyFormatter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_json/value/struct.Serializer.html\" title=\"struct serde_json::value::Serializer\">Serializer</a>","synthetic":true,"types":["serde_json::value::ser::Serializer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_json/value/struct.Number.html\" title=\"struct serde_json::value::Number\">Number</a>","synthetic":true,"types":["serde_json::number::Number"]},{"text":"impl Freeze for <a class=\"enum\" href=\"serde_json/enum.Value.html\" title=\"enum serde_json::Value\">Value</a>","synthetic":true,"types":["serde_json::value::Value"]}];
implementors["serde_reflection"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"serde_reflection/enum.Error.html\" title=\"enum serde_reflection::Error\">Error</a>","synthetic":true,"types":["serde_reflection::error::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"serde_reflection/enum.Format.html\" title=\"enum serde_reflection::Format\">Format</a>","synthetic":true,"types":["serde_reflection::format::Format"]},{"text":"impl Freeze for <a class=\"enum\" href=\"serde_reflection/enum.ContainerFormat.html\" title=\"enum serde_reflection::ContainerFormat\">ContainerFormat</a>","synthetic":true,"types":["serde_reflection::format::ContainerFormat"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"serde_reflection/struct.Named.html\" title=\"struct serde_reflection::Named\">Named</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["serde_reflection::format::Named"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"serde_reflection/struct.Variable.html\" title=\"struct serde_reflection::Variable\">Variable</a>&lt;T&gt;","synthetic":true,"types":["serde_reflection::format::Variable"]},{"text":"impl Freeze for <a class=\"enum\" href=\"serde_reflection/enum.VariantFormat.html\" title=\"enum serde_reflection::VariantFormat\">VariantFormat</a>","synthetic":true,"types":["serde_reflection::format::VariantFormat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_reflection/struct.Tracer.html\" title=\"struct serde_reflection::Tracer\">Tracer</a>","synthetic":true,"types":["serde_reflection::trace::Tracer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_reflection/struct.Samples.html\" title=\"struct serde_reflection::Samples\">Samples</a>","synthetic":true,"types":["serde_reflection::trace::Samples"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_reflection/struct.TracerConfig.html\" title=\"struct serde_reflection::TracerConfig\">TracerConfig</a>","synthetic":true,"types":["serde_reflection::trace::TracerConfig"]},{"text":"impl Freeze for <a class=\"enum\" href=\"serde_reflection/enum.Value.html\" title=\"enum serde_reflection::Value\">Value</a>","synthetic":true,"types":["serde_reflection::value::Value"]}];
implementors["serde_urlencoded"] = [{"text":"impl&lt;'de&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/struct.Deserializer.html\" title=\"struct serde_urlencoded::Deserializer\">Deserializer</a>&lt;'de&gt;","synthetic":true,"types":["serde_urlencoded::de::Deserializer"]},{"text":"impl&lt;'input, 'output, Target&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/struct.Serializer.html\" title=\"struct serde_urlencoded::Serializer\">Serializer</a>&lt;'input, 'output, Target&gt;","synthetic":true,"types":["serde_urlencoded::ser::Serializer"]},{"text":"impl Freeze for <a class=\"enum\" href=\"serde_urlencoded/ser/enum.Error.html\" title=\"enum serde_urlencoded::ser::Error\">Error</a>","synthetic":true,"types":["serde_urlencoded::ser::Error"]},{"text":"impl&lt;'input, 'output, Target&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/ser/struct.SeqSerializer.html\" title=\"struct serde_urlencoded::ser::SeqSerializer\">SeqSerializer</a>&lt;'input, 'output, Target&gt;","synthetic":true,"types":["serde_urlencoded::ser::SeqSerializer"]},{"text":"impl&lt;'input, 'output, Target&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/ser/struct.TupleSerializer.html\" title=\"struct serde_urlencoded::ser::TupleSerializer\">TupleSerializer</a>&lt;'input, 'output, Target&gt;","synthetic":true,"types":["serde_urlencoded::ser::TupleSerializer"]},{"text":"impl&lt;'input, 'output, T&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/ser/struct.TupleStructSerializer.html\" title=\"struct serde_urlencoded::ser::TupleStructSerializer\">TupleStructSerializer</a>&lt;'input, 'output, T&gt;","synthetic":true,"types":["serde_urlencoded::ser::TupleStructSerializer"]},{"text":"impl&lt;'input, 'output, T&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/ser/struct.TupleVariantSerializer.html\" title=\"struct serde_urlencoded::ser::TupleVariantSerializer\">TupleVariantSerializer</a>&lt;'input, 'output, T&gt;","synthetic":true,"types":["serde_urlencoded::ser::TupleVariantSerializer"]},{"text":"impl&lt;'input, 'output, Target&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/ser/struct.MapSerializer.html\" title=\"struct serde_urlencoded::ser::MapSerializer\">MapSerializer</a>&lt;'input, 'output, Target&gt;","synthetic":true,"types":["serde_urlencoded::ser::MapSerializer"]},{"text":"impl&lt;'input, 'output, Target&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/ser/struct.StructSerializer.html\" title=\"struct serde_urlencoded::ser::StructSerializer\">StructSerializer</a>&lt;'input, 'output, Target&gt;","synthetic":true,"types":["serde_urlencoded::ser::StructSerializer"]},{"text":"impl&lt;'input, 'output, T&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/ser/struct.StructVariantSerializer.html\" title=\"struct serde_urlencoded::ser::StructVariantSerializer\">StructVariantSerializer</a>&lt;'input, 'output, T&gt;","synthetic":true,"types":["serde_urlencoded::ser::StructVariantSerializer"]}];
implementors["serde_value"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"serde_value/enum.Unexpected.html\" title=\"enum serde_value::Unexpected\">Unexpected</a>","synthetic":true,"types":["serde_value::de::Unexpected"]},{"text":"impl Freeze for <a class=\"enum\" href=\"serde_value/enum.DeserializerError.html\" title=\"enum serde_value::DeserializerError\">DeserializerError</a>","synthetic":true,"types":["serde_value::de::DeserializerError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_value/struct.ValueVisitor.html\" title=\"struct serde_value::ValueVisitor\">ValueVisitor</a>","synthetic":true,"types":["serde_value::de::ValueVisitor"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde_value/struct.ValueDeserializer.html\" title=\"struct serde_value::ValueDeserializer\">ValueDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde_value::de::ValueDeserializer"]},{"text":"impl Freeze for <a class=\"enum\" href=\"serde_value/enum.SerializerError.html\" title=\"enum serde_value::SerializerError\">SerializerError</a>","synthetic":true,"types":["serde_value::ser::SerializerError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"serde_value/enum.Value.html\" title=\"enum serde_value::Value\">Value</a>","synthetic":true,"types":["serde_value::Value"]}];
implementors["serde_yaml"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_yaml/struct.Deserializer.html\" title=\"struct serde_yaml::Deserializer\">Deserializer</a>&lt;'a&gt;","synthetic":true,"types":["serde_yaml::de::Deserializer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_yaml/struct.Error.html\" title=\"struct serde_yaml::Error\">Error</a>","synthetic":true,"types":["serde_yaml::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_yaml/struct.Location.html\" title=\"struct serde_yaml::Location\">Location</a>","synthetic":true,"types":["serde_yaml::error::Location"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_yaml/struct.Mapping.html\" title=\"struct serde_yaml::Mapping\">Mapping</a>","synthetic":true,"types":["serde_yaml::mapping::Mapping"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_yaml/mapping/struct.Iter.html\" title=\"struct serde_yaml::mapping::Iter\">Iter</a>&lt;'a&gt;","synthetic":true,"types":["serde_yaml::mapping::Iter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_yaml/mapping/struct.IterMut.html\" title=\"struct serde_yaml::mapping::IterMut\">IterMut</a>&lt;'a&gt;","synthetic":true,"types":["serde_yaml::mapping::IterMut"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_yaml/mapping/struct.IntoIter.html\" title=\"struct serde_yaml::mapping::IntoIter\">IntoIter</a>","synthetic":true,"types":["serde_yaml::mapping::IntoIter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"serde_yaml/mapping/enum.Entry.html\" title=\"enum serde_yaml::mapping::Entry\">Entry</a>&lt;'a&gt;","synthetic":true,"types":["serde_yaml::mapping::Entry"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_yaml/mapping/struct.OccupiedEntry.html\" title=\"struct serde_yaml::mapping::OccupiedEntry\">OccupiedEntry</a>&lt;'a&gt;","synthetic":true,"types":["serde_yaml::mapping::OccupiedEntry"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_yaml/mapping/struct.VacantEntry.html\" title=\"struct serde_yaml::mapping::VacantEntry\">VacantEntry</a>&lt;'a&gt;","synthetic":true,"types":["serde_yaml::mapping::VacantEntry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_yaml/struct.Number.html\" title=\"struct serde_yaml::Number\">Number</a>","synthetic":true,"types":["serde_yaml::number::Number"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"serde_yaml/struct.Serializer.html\" title=\"struct serde_yaml::Serializer\">Serializer</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["serde_yaml::ser::Serializer"]},{"text":"impl Freeze for <a class=\"enum\" href=\"serde_yaml/enum.Value.html\" title=\"enum serde_yaml::Value\">Value</a>","synthetic":true,"types":["serde_yaml::value::Value"]}];
implementors["sha1"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"sha1/struct.Sha1Core.html\" title=\"struct sha1::Sha1Core\">Sha1Core</a>","synthetic":true,"types":["sha1::Sha1Core"]}];
implementors["sha2"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"sha2/struct.Sha256.html\" title=\"struct sha2::Sha256\">Sha256</a>","synthetic":true,"types":["sha2::sha256::Sha256"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sha2/struct.Sha224.html\" title=\"struct sha2::Sha224\">Sha224</a>","synthetic":true,"types":["sha2::sha256::Sha224"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sha2/struct.Sha512.html\" title=\"struct sha2::Sha512\">Sha512</a>","synthetic":true,"types":["sha2::sha512::Sha512"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sha2/struct.Sha384.html\" title=\"struct sha2::Sha384\">Sha384</a>","synthetic":true,"types":["sha2::sha512::Sha384"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sha2/struct.Sha512Trunc256.html\" title=\"struct sha2::Sha512Trunc256\">Sha512Trunc256</a>","synthetic":true,"types":["sha2::sha512::Sha512Trunc256"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sha2/struct.Sha512Trunc224.html\" title=\"struct sha2::Sha512Trunc224\">Sha512Trunc224</a>","synthetic":true,"types":["sha2::sha512::Sha512Trunc224"]}];
implementors["sha3"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"sha3/struct.Sha3XofReader.html\" title=\"struct sha3::Sha3XofReader\">Sha3XofReader</a>","synthetic":true,"types":["sha3::reader::Sha3XofReader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sha3/struct.Keccak224.html\" title=\"struct sha3::Keccak224\">Keccak224</a>","synthetic":true,"types":["sha3::Keccak224"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sha3/struct.Keccak256.html\" title=\"struct sha3::Keccak256\">Keccak256</a>","synthetic":true,"types":["sha3::Keccak256"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sha3/struct.Keccak384.html\" title=\"struct sha3::Keccak384\">Keccak384</a>","synthetic":true,"types":["sha3::Keccak384"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sha3/struct.Keccak512.html\" title=\"struct sha3::Keccak512\">Keccak512</a>","synthetic":true,"types":["sha3::Keccak512"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sha3/struct.Keccak256Full.html\" title=\"struct sha3::Keccak256Full\">Keccak256Full</a>","synthetic":true,"types":["sha3::Keccak256Full"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sha3/struct.Sha3_224.html\" title=\"struct sha3::Sha3_224\">Sha3_224</a>","synthetic":true,"types":["sha3::Sha3_224"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sha3/struct.Sha3_256.html\" title=\"struct sha3::Sha3_256\">Sha3_256</a>","synthetic":true,"types":["sha3::Sha3_256"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sha3/struct.Sha3_384.html\" title=\"struct sha3::Sha3_384\">Sha3_384</a>","synthetic":true,"types":["sha3::Sha3_384"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sha3/struct.Sha3_512.html\" title=\"struct sha3::Sha3_512\">Sha3_512</a>","synthetic":true,"types":["sha3::Sha3_512"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sha3/struct.Shake128.html\" title=\"struct sha3::Shake128\">Shake128</a>","synthetic":true,"types":["sha3::Shake128"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sha3/struct.Shake256.html\" title=\"struct sha3::Shake256\">Shake256</a>","synthetic":true,"types":["sha3::Shake256"]}];
implementors["sharded_slab"] = [{"text":"impl&lt;T, C&nbsp;=&nbsp;<a class=\"struct\" href=\"sharded_slab/struct.DefaultConfig.html\" title=\"struct sharded_slab::DefaultConfig\">DefaultConfig</a>&gt; !Freeze for <a class=\"struct\" href=\"sharded_slab/struct.Pool.html\" title=\"struct sharded_slab::Pool\">Pool</a>&lt;T, C&gt;","synthetic":true,"types":["sharded_slab::pool::Pool"]},{"text":"impl&lt;'a, T, C&gt; Freeze for <a class=\"struct\" href=\"sharded_slab/pool/struct.Ref.html\" title=\"struct sharded_slab::pool::Ref\">Ref</a>&lt;'a, T, C&gt;","synthetic":true,"types":["sharded_slab::pool::Ref"]},{"text":"impl&lt;'a, T, C&gt; Freeze for <a class=\"struct\" href=\"sharded_slab/pool/struct.RefMut.html\" title=\"struct sharded_slab::pool::RefMut\">RefMut</a>&lt;'a, T, C&gt;","synthetic":true,"types":["sharded_slab::pool::RefMut"]},{"text":"impl&lt;T, C&gt; Freeze for <a class=\"struct\" href=\"sharded_slab/pool/struct.OwnedRef.html\" title=\"struct sharded_slab::pool::OwnedRef\">OwnedRef</a>&lt;T, C&gt;","synthetic":true,"types":["sharded_slab::pool::OwnedRef"]},{"text":"impl&lt;T, C&gt; Freeze for <a class=\"struct\" href=\"sharded_slab/pool/struct.OwnedRefMut.html\" title=\"struct sharded_slab::pool::OwnedRefMut\">OwnedRefMut</a>&lt;T, C&gt;","synthetic":true,"types":["sharded_slab::pool::OwnedRefMut"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sharded_slab/struct.DefaultConfig.html\" title=\"struct sharded_slab::DefaultConfig\">DefaultConfig</a>","synthetic":true,"types":["sharded_slab::cfg::DefaultConfig"]},{"text":"impl&lt;T, C&nbsp;=&nbsp;<a class=\"struct\" href=\"sharded_slab/struct.DefaultConfig.html\" title=\"struct sharded_slab::DefaultConfig\">DefaultConfig</a>&gt; !Freeze for <a class=\"struct\" href=\"sharded_slab/struct.Slab.html\" title=\"struct sharded_slab::Slab\">Slab</a>&lt;T, C&gt;","synthetic":true,"types":["sharded_slab::Slab"]},{"text":"impl&lt;'a, T, C&gt; Freeze for <a class=\"struct\" href=\"sharded_slab/struct.Entry.html\" title=\"struct sharded_slab::Entry\">Entry</a>&lt;'a, T, C&gt;","synthetic":true,"types":["sharded_slab::Entry"]},{"text":"impl&lt;'a, T, C&gt; Freeze for <a class=\"struct\" href=\"sharded_slab/struct.VacantEntry.html\" title=\"struct sharded_slab::VacantEntry\">VacantEntry</a>&lt;'a, T, C&gt;","synthetic":true,"types":["sharded_slab::VacantEntry"]},{"text":"impl&lt;T, C&gt; Freeze for <a class=\"struct\" href=\"sharded_slab/struct.OwnedEntry.html\" title=\"struct sharded_slab::OwnedEntry\">OwnedEntry</a>&lt;T, C&gt;","synthetic":true,"types":["sharded_slab::OwnedEntry"]}];
implementors["signal_hook"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"signal_hook/iterator/backend/struct.Handle.html\" title=\"struct signal_hook::iterator::backend::Handle\">Handle</a>","synthetic":true,"types":["signal_hook::iterator::backend::Handle"]},{"text":"impl&lt;R, E&gt; Freeze for <a class=\"struct\" href=\"signal_hook/iterator/backend/struct.SignalDelivery.html\" title=\"struct signal_hook::iterator::backend::SignalDelivery\">SignalDelivery</a>&lt;R, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["signal_hook::iterator::backend::SignalDelivery"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"signal_hook/iterator/backend/struct.Pending.html\" title=\"struct signal_hook::iterator::backend::Pending\">Pending</a>&lt;E&gt;","synthetic":true,"types":["signal_hook::iterator::backend::Pending"]},{"text":"impl&lt;O&gt; Freeze for <a class=\"enum\" href=\"signal_hook/iterator/backend/enum.PollResult.html\" title=\"enum signal_hook::iterator::backend::PollResult\">PollResult</a>&lt;O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Freeze,&nbsp;</span>","synthetic":true,"types":["signal_hook::iterator::backend::PollResult"]},{"text":"impl&lt;SD, E&gt; Freeze for <a class=\"struct\" href=\"signal_hook/iterator/backend/struct.SignalIterator.html\" title=\"struct signal_hook::iterator::backend::SignalIterator\">SignalIterator</a>&lt;SD, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;SD: Freeze,&nbsp;</span>","synthetic":true,"types":["signal_hook::iterator::backend::SignalIterator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"signal_hook/iterator/exfiltrator/raw/struct.WithRawSiginfo.html\" title=\"struct signal_hook::iterator::exfiltrator::raw::WithRawSiginfo\">WithRawSiginfo</a>","synthetic":true,"types":["signal_hook::iterator::exfiltrator::raw::WithRawSiginfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"signal_hook/iterator/exfiltrator/struct.SignalOnly.html\" title=\"struct signal_hook::iterator::exfiltrator::SignalOnly\">SignalOnly</a>","synthetic":true,"types":["signal_hook::iterator::exfiltrator::SignalOnly"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"signal_hook/iterator/struct.SignalsInfo.html\" title=\"struct signal_hook::iterator::SignalsInfo\">SignalsInfo</a>&lt;E&gt;","synthetic":true,"types":["signal_hook::iterator::SignalsInfo"]},{"text":"impl&lt;'a, E&gt; Freeze for <a class=\"struct\" href=\"signal_hook/iterator/struct.Forever.html\" title=\"struct signal_hook::iterator::Forever\">Forever</a>&lt;'a, E&gt;","synthetic":true,"types":["signal_hook::iterator::Forever"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"signal_hook/low_level/channel/struct.Channel.html\" title=\"struct signal_hook::low_level::channel::Channel\">Channel</a>&lt;T&gt;","synthetic":true,"types":["signal_hook::low_level::channel::Channel"]}];
implementors["signal_hook_mio"] = [{"text":"impl&lt;E&nbsp;=&nbsp;<a class=\"struct\" href=\"signal_hook/iterator/exfiltrator/struct.SignalOnly.html\" title=\"struct signal_hook::iterator::exfiltrator::SignalOnly\">SignalOnly</a>&gt; !Freeze for <a class=\"struct\" href=\"signal_hook_mio/v0_7/struct.SignalsInfo.html\" title=\"struct signal_hook_mio::v0_7::SignalsInfo\">SignalsInfo</a>&lt;E&gt;","synthetic":true,"types":["signal_hook_mio::v0_7::SignalsInfo"]}];
implementors["signal_hook_registry"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"signal_hook_registry/struct.SigId.html\" title=\"struct signal_hook_registry::SigId\">SigId</a>","synthetic":true,"types":["signal_hook_registry::SigId"]}];
implementors["signature"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"signature/struct.Error.html\" title=\"struct signature::Error\">Error</a>","synthetic":true,"types":["signature::error::Error"]}];
implementors["simplelog"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"simplelog/enum.LevelPadding.html\" title=\"enum simplelog::LevelPadding\">LevelPadding</a>","synthetic":true,"types":["simplelog::config::LevelPadding"]},{"text":"impl Freeze for <a class=\"enum\" href=\"simplelog/enum.ThreadPadding.html\" title=\"enum simplelog::ThreadPadding\">ThreadPadding</a>","synthetic":true,"types":["simplelog::config::ThreadPadding"]},{"text":"impl Freeze for <a class=\"enum\" href=\"simplelog/enum.ThreadLogMode.html\" title=\"enum simplelog::ThreadLogMode\">ThreadLogMode</a>","synthetic":true,"types":["simplelog::config::ThreadLogMode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"simplelog/struct.Config.html\" title=\"struct simplelog::Config\">Config</a>","synthetic":true,"types":["simplelog::config::Config"]},{"text":"impl Freeze for <a class=\"struct\" href=\"simplelog/struct.ConfigBuilder.html\" title=\"struct simplelog::ConfigBuilder\">ConfigBuilder</a>","synthetic":true,"types":["simplelog::config::ConfigBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"simplelog/struct.CombinedLogger.html\" title=\"struct simplelog::CombinedLogger\">CombinedLogger</a>","synthetic":true,"types":["simplelog::loggers::comblog::CombinedLogger"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"simplelog/struct.SimpleLogger.html\" title=\"struct simplelog::SimpleLogger\">SimpleLogger</a>","synthetic":true,"types":["simplelog::loggers::simplelog::SimpleLogger"]},{"text":"impl Freeze for <a class=\"enum\" href=\"simplelog/enum.TerminalMode.html\" title=\"enum simplelog::TerminalMode\">TerminalMode</a>","synthetic":true,"types":["simplelog::loggers::termlog::TerminalMode"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"simplelog/struct.TermLogger.html\" title=\"struct simplelog::TermLogger\">TermLogger</a>","synthetic":true,"types":["simplelog::loggers::termlog::TermLogger"]},{"text":"impl&lt;W&gt; !Freeze for <a class=\"struct\" href=\"simplelog/struct.WriteLogger.html\" title=\"struct simplelog::WriteLogger\">WriteLogger</a>&lt;W&gt;","synthetic":true,"types":["simplelog::loggers::writelog::WriteLogger"]}];
implementors["siphasher"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"siphasher/sip/struct.SipHasher13.html\" title=\"struct siphasher::sip::SipHasher13\">SipHasher13</a>","synthetic":true,"types":["siphasher::sip::SipHasher13"]},{"text":"impl Freeze for <a class=\"struct\" href=\"siphasher/sip/struct.SipHasher24.html\" title=\"struct siphasher::sip::SipHasher24\">SipHasher24</a>","synthetic":true,"types":["siphasher::sip::SipHasher24"]},{"text":"impl Freeze for <a class=\"struct\" href=\"siphasher/sip/struct.SipHasher.html\" title=\"struct siphasher::sip::SipHasher\">SipHasher</a>","synthetic":true,"types":["siphasher::sip::SipHasher"]},{"text":"impl Freeze for <a class=\"struct\" href=\"siphasher/sip128/struct.Hash128.html\" title=\"struct siphasher::sip128::Hash128\">Hash128</a>","synthetic":true,"types":["siphasher::sip128::Hash128"]},{"text":"impl Freeze for <a class=\"struct\" href=\"siphasher/sip128/struct.SipHasher13.html\" title=\"struct siphasher::sip128::SipHasher13\">SipHasher13</a>","synthetic":true,"types":["siphasher::sip128::SipHasher13"]},{"text":"impl Freeze for <a class=\"struct\" href=\"siphasher/sip128/struct.SipHasher24.html\" title=\"struct siphasher::sip128::SipHasher24\">SipHasher24</a>","synthetic":true,"types":["siphasher::sip128::SipHasher24"]},{"text":"impl Freeze for <a class=\"struct\" href=\"siphasher/sip128/struct.SipHasher.html\" title=\"struct siphasher::sip128::SipHasher\">SipHasher</a>","synthetic":true,"types":["siphasher::sip128::SipHasher"]}];
implementors["sized_chunks"] = [{"text":"impl&lt;A, T&gt; Freeze for <a class=\"struct\" href=\"sized_chunks/inline_array/struct.Iter.html\" title=\"struct sized_chunks::inline_array::Iter\">Iter</a>&lt;A, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["sized_chunks::inline_array::iter::Iter"]},{"text":"impl&lt;'a, A, T&gt; Freeze for <a class=\"struct\" href=\"sized_chunks/inline_array/struct.Drain.html\" title=\"struct sized_chunks::inline_array::Drain\">Drain</a>&lt;'a, A, T&gt;","synthetic":true,"types":["sized_chunks::inline_array::iter::Drain"]},{"text":"impl&lt;A, T&gt; Freeze for <a class=\"struct\" href=\"sized_chunks/inline_array/struct.InlineArray.html\" title=\"struct sized_chunks::inline_array::InlineArray\">InlineArray</a>&lt;A, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["sized_chunks::inline_array::InlineArray"]},{"text":"impl&lt;A, N&gt; Freeze for <a class=\"struct\" href=\"sized_chunks/sized_chunk/struct.Iter.html\" title=\"struct sized_chunks::sized_chunk::Iter\">Iter</a>&lt;A, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;N as <a class=\"trait\" href=\"sized_chunks/types/trait.ChunkLength.html\" title=\"trait sized_chunks::types::ChunkLength\">ChunkLength</a>&lt;A&gt;&gt;::<a class=\"associatedtype\" href=\"sized_chunks/types/trait.ChunkLength.html#associatedtype.SizedType\" title=\"type sized_chunks::types::ChunkLength::SizedType\">SizedType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["sized_chunks::sized_chunk::iter::Iter"]},{"text":"impl&lt;'a, A, N&gt; Freeze for <a class=\"struct\" href=\"sized_chunks/sized_chunk/struct.Drain.html\" title=\"struct sized_chunks::sized_chunk::Drain\">Drain</a>&lt;'a, A, N&gt;","synthetic":true,"types":["sized_chunks::sized_chunk::iter::Drain"]},{"text":"impl&lt;A, N&gt; Freeze for <a class=\"struct\" href=\"sized_chunks/sized_chunk/struct.Chunk.html\" title=\"struct sized_chunks::sized_chunk::Chunk\">Chunk</a>&lt;A, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;N as <a class=\"trait\" href=\"sized_chunks/types/trait.ChunkLength.html\" title=\"trait sized_chunks::types::ChunkLength\">ChunkLength</a>&lt;A&gt;&gt;::<a class=\"associatedtype\" href=\"sized_chunks/types/trait.ChunkLength.html#associatedtype.SizedType\" title=\"type sized_chunks::types::ChunkLength::SizedType\">SizedType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["sized_chunks::sized_chunk::Chunk"]},{"text":"impl&lt;'a, A, N&gt; Freeze for <a class=\"struct\" href=\"sized_chunks/sparse_chunk/struct.Iter.html\" title=\"struct sized_chunks::sparse_chunk::Iter\">Iter</a>&lt;'a, A, N&gt;","synthetic":true,"types":["sized_chunks::sparse_chunk::iter::Iter"]},{"text":"impl&lt;'a, A, N&gt; Freeze for <a class=\"struct\" href=\"sized_chunks/sparse_chunk/struct.IterMut.html\" title=\"struct sized_chunks::sparse_chunk::IterMut\">IterMut</a>&lt;'a, A, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;N as <a class=\"trait\" href=\"bitmaps/types/trait.Bits.html\" title=\"trait bitmaps::types::Bits\">Bits</a>&gt;::<a class=\"associatedtype\" href=\"bitmaps/types/trait.Bits.html#associatedtype.Store\" title=\"type bitmaps::types::Bits::Store\">Store</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["sized_chunks::sparse_chunk::iter::IterMut"]},{"text":"impl&lt;A, N&gt; Freeze for <a class=\"struct\" href=\"sized_chunks/sparse_chunk/struct.Drain.html\" title=\"struct sized_chunks::sparse_chunk::Drain\">Drain</a>&lt;A, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;N as <a class=\"trait\" href=\"sized_chunks/types/trait.ChunkLength.html\" title=\"trait sized_chunks::types::ChunkLength\">ChunkLength</a>&lt;A&gt;&gt;::<a class=\"associatedtype\" href=\"sized_chunks/types/trait.ChunkLength.html#associatedtype.SizedType\" title=\"type sized_chunks::types::ChunkLength::SizedType\">SizedType</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;N as <a class=\"trait\" href=\"bitmaps/types/trait.Bits.html\" title=\"trait bitmaps::types::Bits\">Bits</a>&gt;::<a class=\"associatedtype\" href=\"bitmaps/types/trait.Bits.html#associatedtype.Store\" title=\"type bitmaps::types::Bits::Store\">Store</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["sized_chunks::sparse_chunk::iter::Drain"]},{"text":"impl&lt;'a, A, N&gt; Freeze for <a class=\"struct\" href=\"sized_chunks/sparse_chunk/struct.OptionIter.html\" title=\"struct sized_chunks::sparse_chunk::OptionIter\">OptionIter</a>&lt;'a, A, N&gt;","synthetic":true,"types":["sized_chunks::sparse_chunk::iter::OptionIter"]},{"text":"impl&lt;'a, A, N&gt; Freeze for <a class=\"struct\" href=\"sized_chunks/sparse_chunk/struct.OptionIterMut.html\" title=\"struct sized_chunks::sparse_chunk::OptionIterMut\">OptionIterMut</a>&lt;'a, A, N&gt;","synthetic":true,"types":["sized_chunks::sparse_chunk::iter::OptionIterMut"]},{"text":"impl&lt;A, N&gt; Freeze for <a class=\"struct\" href=\"sized_chunks/sparse_chunk/struct.OptionDrain.html\" title=\"struct sized_chunks::sparse_chunk::OptionDrain\">OptionDrain</a>&lt;A, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;N as <a class=\"trait\" href=\"sized_chunks/types/trait.ChunkLength.html\" title=\"trait sized_chunks::types::ChunkLength\">ChunkLength</a>&lt;A&gt;&gt;::<a class=\"associatedtype\" href=\"sized_chunks/types/trait.ChunkLength.html#associatedtype.SizedType\" title=\"type sized_chunks::types::ChunkLength::SizedType\">SizedType</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;N as <a class=\"trait\" href=\"bitmaps/types/trait.Bits.html\" title=\"trait bitmaps::types::Bits\">Bits</a>&gt;::<a class=\"associatedtype\" href=\"bitmaps/types/trait.Bits.html#associatedtype.Store\" title=\"type bitmaps::types::Bits::Store\">Store</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["sized_chunks::sparse_chunk::iter::OptionDrain"]},{"text":"impl&lt;A, N&gt; Freeze for <a class=\"struct\" href=\"sized_chunks/sparse_chunk/struct.SparseChunk.html\" title=\"struct sized_chunks::sparse_chunk::SparseChunk\">SparseChunk</a>&lt;A, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;N as <a class=\"trait\" href=\"sized_chunks/types/trait.ChunkLength.html\" title=\"trait sized_chunks::types::ChunkLength\">ChunkLength</a>&lt;A&gt;&gt;::<a class=\"associatedtype\" href=\"sized_chunks/types/trait.ChunkLength.html#associatedtype.SizedType\" title=\"type sized_chunks::types::ChunkLength::SizedType\">SizedType</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;N as <a class=\"trait\" href=\"bitmaps/types/trait.Bits.html\" title=\"trait bitmaps::types::Bits\">Bits</a>&gt;::<a class=\"associatedtype\" href=\"bitmaps/types/trait.Bits.html#associatedtype.Store\" title=\"type bitmaps::types::Bits::Store\">Store</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["sized_chunks::sparse_chunk::SparseChunk"]}];
implementors["slab"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.Slab.html\" title=\"struct slab::Slab\">Slab</a>&lt;T&gt;","synthetic":true,"types":["slab::Slab"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.VacantEntry.html\" title=\"struct slab::VacantEntry\">VacantEntry</a>&lt;'a, T&gt;","synthetic":true,"types":["slab::VacantEntry"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.IntoIter.html\" title=\"struct slab::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["slab::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.Iter.html\" title=\"struct slab::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["slab::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.IterMut.html\" title=\"struct slab::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["slab::IterMut"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.Drain.html\" title=\"struct slab::Drain\">Drain</a>&lt;'a, T&gt;","synthetic":true,"types":["slab::Drain"]}];
implementors["smallvec"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"smallvec/enum.CollectionAllocErr.html\" title=\"enum smallvec::CollectionAllocErr\">CollectionAllocErr</a>","synthetic":true,"types":["smallvec::CollectionAllocErr"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"smallvec/struct.Drain.html\" title=\"struct smallvec::Drain\">Drain</a>&lt;'a, T&gt;","synthetic":true,"types":["smallvec::Drain"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"smallvec/struct.SmallVec.html\" title=\"struct smallvec::SmallVec\">SmallVec</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["smallvec::SmallVec"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"smallvec/struct.IntoIter.html\" title=\"struct smallvec::IntoIter\">IntoIter</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["smallvec::IntoIter"]}];
implementors["socket2"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"socket2/struct.SockAddr.html\" title=\"struct socket2::SockAddr\">SockAddr</a>","synthetic":true,"types":["socket2::sockaddr::SockAddr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"socket2/struct.Socket.html\" title=\"struct socket2::Socket\">Socket</a>","synthetic":true,"types":["socket2::socket::Socket"]},{"text":"impl Freeze for <a class=\"enum\" href=\"socket2/enum.InterfaceIndexOrAddress.html\" title=\"enum socket2::InterfaceIndexOrAddress\">InterfaceIndexOrAddress</a>","synthetic":true,"types":["socket2::socket::InterfaceIndexOrAddress"]},{"text":"impl&lt;'s&gt; Freeze for <a class=\"struct\" href=\"socket2/struct.SockRef.html\" title=\"struct socket2::SockRef\">SockRef</a>&lt;'s&gt;","synthetic":true,"types":["socket2::sockref::SockRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"socket2/struct.Domain.html\" title=\"struct socket2::Domain\">Domain</a>","synthetic":true,"types":["socket2::Domain"]},{"text":"impl Freeze for <a class=\"struct\" href=\"socket2/struct.Type.html\" title=\"struct socket2::Type\">Type</a>","synthetic":true,"types":["socket2::Type"]},{"text":"impl Freeze for <a class=\"struct\" href=\"socket2/struct.Protocol.html\" title=\"struct socket2::Protocol\">Protocol</a>","synthetic":true,"types":["socket2::Protocol"]},{"text":"impl Freeze for <a class=\"struct\" href=\"socket2/struct.RecvFlags.html\" title=\"struct socket2::RecvFlags\">RecvFlags</a>","synthetic":true,"types":["socket2::RecvFlags"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"socket2/struct.MaybeUninitSlice.html\" title=\"struct socket2::MaybeUninitSlice\">MaybeUninitSlice</a>&lt;'a&gt;","synthetic":true,"types":["socket2::MaybeUninitSlice"]},{"text":"impl Freeze for <a class=\"struct\" href=\"socket2/struct.TcpKeepalive.html\" title=\"struct socket2::TcpKeepalive\">TcpKeepalive</a>","synthetic":true,"types":["socket2::TcpKeepalive"]}];
implementors["spin"] = [{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"spin/struct.Mutex.html\" title=\"struct spin::Mutex\">Mutex</a>&lt;T&gt;","synthetic":true,"types":["spin::mutex::Mutex"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"spin/struct.MutexGuard.html\" title=\"struct spin::MutexGuard\">MutexGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["spin::mutex::MutexGuard"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"spin/struct.RwLock.html\" title=\"struct spin::RwLock\">RwLock</a>&lt;T&gt;","synthetic":true,"types":["spin::rw_lock::RwLock"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"spin/struct.RwLockReadGuard.html\" title=\"struct spin::RwLockReadGuard\">RwLockReadGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["spin::rw_lock::RwLockReadGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"spin/struct.RwLockWriteGuard.html\" title=\"struct spin::RwLockWriteGuard\">RwLockWriteGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["spin::rw_lock::RwLockWriteGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"spin/struct.RwLockUpgradeableGuard.html\" title=\"struct spin::RwLockUpgradeableGuard\">RwLockUpgradeableGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["spin::rw_lock::RwLockUpgradeableGuard"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"spin/struct.Once.html\" title=\"struct spin::Once\">Once</a>&lt;T&gt;","synthetic":true,"types":["spin::once::Once"]}];
implementors["strsim"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"strsim/enum.StrSimError.html\" title=\"enum strsim::StrSimError\">StrSimError</a>","synthetic":true,"types":["strsim::StrSimError"]}];
implementors["subtle"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a>","synthetic":true,"types":["subtle::Choice"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"subtle/struct.CtOption.html\" title=\"struct subtle::CtOption\">CtOption</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["subtle::CtOption"]}];
implementors["syn"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Underscore.html\" title=\"struct syn::token::Underscore\">Underscore</a>","synthetic":true,"types":["syn::token::Underscore"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Abstract.html\" title=\"struct syn::token::Abstract\">Abstract</a>","synthetic":true,"types":["syn::token::Abstract"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.As.html\" title=\"struct syn::token::As\">As</a>","synthetic":true,"types":["syn::token::As"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Async.html\" title=\"struct syn::token::Async\">Async</a>","synthetic":true,"types":["syn::token::Async"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Auto.html\" title=\"struct syn::token::Auto\">Auto</a>","synthetic":true,"types":["syn::token::Auto"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Await.html\" title=\"struct syn::token::Await\">Await</a>","synthetic":true,"types":["syn::token::Await"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Become.html\" title=\"struct syn::token::Become\">Become</a>","synthetic":true,"types":["syn::token::Become"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Box.html\" title=\"struct syn::token::Box\">Box</a>","synthetic":true,"types":["syn::token::Box"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Break.html\" title=\"struct syn::token::Break\">Break</a>","synthetic":true,"types":["syn::token::Break"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Const.html\" title=\"struct syn::token::Const\">Const</a>","synthetic":true,"types":["syn::token::Const"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Continue.html\" title=\"struct syn::token::Continue\">Continue</a>","synthetic":true,"types":["syn::token::Continue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Crate.html\" title=\"struct syn::token::Crate\">Crate</a>","synthetic":true,"types":["syn::token::Crate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Default.html\" title=\"struct syn::token::Default\">Default</a>","synthetic":true,"types":["syn::token::Default"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Do.html\" title=\"struct syn::token::Do\">Do</a>","synthetic":true,"types":["syn::token::Do"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dyn.html\" title=\"struct syn::token::Dyn\">Dyn</a>","synthetic":true,"types":["syn::token::Dyn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Else.html\" title=\"struct syn::token::Else\">Else</a>","synthetic":true,"types":["syn::token::Else"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Enum.html\" title=\"struct syn::token::Enum\">Enum</a>","synthetic":true,"types":["syn::token::Enum"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Extern.html\" title=\"struct syn::token::Extern\">Extern</a>","synthetic":true,"types":["syn::token::Extern"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Final.html\" title=\"struct syn::token::Final\">Final</a>","synthetic":true,"types":["syn::token::Final"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Fn.html\" title=\"struct syn::token::Fn\">Fn</a>","synthetic":true,"types":["syn::token::Fn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.For.html\" title=\"struct syn::token::For\">For</a>","synthetic":true,"types":["syn::token::For"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.If.html\" title=\"struct syn::token::If\">If</a>","synthetic":true,"types":["syn::token::If"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Impl.html\" title=\"struct syn::token::Impl\">Impl</a>","synthetic":true,"types":["syn::token::Impl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.In.html\" title=\"struct syn::token::In\">In</a>","synthetic":true,"types":["syn::token::In"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Let.html\" title=\"struct syn::token::Let\">Let</a>","synthetic":true,"types":["syn::token::Let"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Loop.html\" title=\"struct syn::token::Loop\">Loop</a>","synthetic":true,"types":["syn::token::Loop"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Macro.html\" title=\"struct syn::token::Macro\">Macro</a>","synthetic":true,"types":["syn::token::Macro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Match.html\" title=\"struct syn::token::Match\">Match</a>","synthetic":true,"types":["syn::token::Match"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Mod.html\" title=\"struct syn::token::Mod\">Mod</a>","synthetic":true,"types":["syn::token::Mod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Move.html\" title=\"struct syn::token::Move\">Move</a>","synthetic":true,"types":["syn::token::Move"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Mut.html\" title=\"struct syn::token::Mut\">Mut</a>","synthetic":true,"types":["syn::token::Mut"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Override.html\" title=\"struct syn::token::Override\">Override</a>","synthetic":true,"types":["syn::token::Override"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Priv.html\" title=\"struct syn::token::Priv\">Priv</a>","synthetic":true,"types":["syn::token::Priv"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Pub.html\" title=\"struct syn::token::Pub\">Pub</a>","synthetic":true,"types":["syn::token::Pub"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Ref.html\" title=\"struct syn::token::Ref\">Ref</a>","synthetic":true,"types":["syn::token::Ref"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Return.html\" title=\"struct syn::token::Return\">Return</a>","synthetic":true,"types":["syn::token::Return"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.SelfType.html\" title=\"struct syn::token::SelfType\">SelfType</a>","synthetic":true,"types":["syn::token::SelfType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.SelfValue.html\" title=\"struct syn::token::SelfValue\">SelfValue</a>","synthetic":true,"types":["syn::token::SelfValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Static.html\" title=\"struct syn::token::Static\">Static</a>","synthetic":true,"types":["syn::token::Static"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Struct.html\" title=\"struct syn::token::Struct\">Struct</a>","synthetic":true,"types":["syn::token::Struct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Super.html\" title=\"struct syn::token::Super\">Super</a>","synthetic":true,"types":["syn::token::Super"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Trait.html\" title=\"struct syn::token::Trait\">Trait</a>","synthetic":true,"types":["syn::token::Trait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Try.html\" title=\"struct syn::token::Try\">Try</a>","synthetic":true,"types":["syn::token::Try"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Type.html\" title=\"struct syn::token::Type\">Type</a>","synthetic":true,"types":["syn::token::Type"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Typeof.html\" title=\"struct syn::token::Typeof\">Typeof</a>","synthetic":true,"types":["syn::token::Typeof"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Union.html\" title=\"struct syn::token::Union\">Union</a>","synthetic":true,"types":["syn::token::Union"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Unsafe.html\" title=\"struct syn::token::Unsafe\">Unsafe</a>","synthetic":true,"types":["syn::token::Unsafe"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Unsized.html\" title=\"struct syn::token::Unsized\">Unsized</a>","synthetic":true,"types":["syn::token::Unsized"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Use.html\" title=\"struct syn::token::Use\">Use</a>","synthetic":true,"types":["syn::token::Use"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Virtual.html\" title=\"struct syn::token::Virtual\">Virtual</a>","synthetic":true,"types":["syn::token::Virtual"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Where.html\" title=\"struct syn::token::Where\">Where</a>","synthetic":true,"types":["syn::token::Where"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.While.html\" title=\"struct syn::token::While\">While</a>","synthetic":true,"types":["syn::token::While"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Yield.html\" title=\"struct syn::token::Yield\">Yield</a>","synthetic":true,"types":["syn::token::Yield"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Add.html\" title=\"struct syn::token::Add\">Add</a>","synthetic":true,"types":["syn::token::Add"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.AddEq.html\" title=\"struct syn::token::AddEq\">AddEq</a>","synthetic":true,"types":["syn::token::AddEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.And.html\" title=\"struct syn::token::And\">And</a>","synthetic":true,"types":["syn::token::And"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.AndAnd.html\" title=\"struct syn::token::AndAnd\">AndAnd</a>","synthetic":true,"types":["syn::token::AndAnd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.AndEq.html\" title=\"struct syn::token::AndEq\">AndEq</a>","synthetic":true,"types":["syn::token::AndEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.At.html\" title=\"struct syn::token::At\">At</a>","synthetic":true,"types":["syn::token::At"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Bang.html\" title=\"struct syn::token::Bang\">Bang</a>","synthetic":true,"types":["syn::token::Bang"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Caret.html\" title=\"struct syn::token::Caret\">Caret</a>","synthetic":true,"types":["syn::token::Caret"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.CaretEq.html\" title=\"struct syn::token::CaretEq\">CaretEq</a>","synthetic":true,"types":["syn::token::CaretEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Colon.html\" title=\"struct syn::token::Colon\">Colon</a>","synthetic":true,"types":["syn::token::Colon"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Colon2.html\" title=\"struct syn::token::Colon2\">Colon2</a>","synthetic":true,"types":["syn::token::Colon2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Comma.html\" title=\"struct syn::token::Comma\">Comma</a>","synthetic":true,"types":["syn::token::Comma"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Div.html\" title=\"struct syn::token::Div\">Div</a>","synthetic":true,"types":["syn::token::Div"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.DivEq.html\" title=\"struct syn::token::DivEq\">DivEq</a>","synthetic":true,"types":["syn::token::DivEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dollar.html\" title=\"struct syn::token::Dollar\">Dollar</a>","synthetic":true,"types":["syn::token::Dollar"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dot.html\" title=\"struct syn::token::Dot\">Dot</a>","synthetic":true,"types":["syn::token::Dot"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dot2.html\" title=\"struct syn::token::Dot2\">Dot2</a>","synthetic":true,"types":["syn::token::Dot2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dot3.html\" title=\"struct syn::token::Dot3\">Dot3</a>","synthetic":true,"types":["syn::token::Dot3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.DotDotEq.html\" title=\"struct syn::token::DotDotEq\">DotDotEq</a>","synthetic":true,"types":["syn::token::DotDotEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Eq.html\" title=\"struct syn::token::Eq\">Eq</a>","synthetic":true,"types":["syn::token::Eq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.EqEq.html\" title=\"struct syn::token::EqEq\">EqEq</a>","synthetic":true,"types":["syn::token::EqEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Ge.html\" title=\"struct syn::token::Ge\">Ge</a>","synthetic":true,"types":["syn::token::Ge"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Gt.html\" title=\"struct syn::token::Gt\">Gt</a>","synthetic":true,"types":["syn::token::Gt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Le.html\" title=\"struct syn::token::Le\">Le</a>","synthetic":true,"types":["syn::token::Le"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Lt.html\" title=\"struct syn::token::Lt\">Lt</a>","synthetic":true,"types":["syn::token::Lt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.MulEq.html\" title=\"struct syn::token::MulEq\">MulEq</a>","synthetic":true,"types":["syn::token::MulEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Ne.html\" title=\"struct syn::token::Ne\">Ne</a>","synthetic":true,"types":["syn::token::Ne"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Or.html\" title=\"struct syn::token::Or\">Or</a>","synthetic":true,"types":["syn::token::Or"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.OrEq.html\" title=\"struct syn::token::OrEq\">OrEq</a>","synthetic":true,"types":["syn::token::OrEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.OrOr.html\" title=\"struct syn::token::OrOr\">OrOr</a>","synthetic":true,"types":["syn::token::OrOr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Pound.html\" title=\"struct syn::token::Pound\">Pound</a>","synthetic":true,"types":["syn::token::Pound"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Question.html\" title=\"struct syn::token::Question\">Question</a>","synthetic":true,"types":["syn::token::Question"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.RArrow.html\" title=\"struct syn::token::RArrow\">RArrow</a>","synthetic":true,"types":["syn::token::RArrow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.LArrow.html\" title=\"struct syn::token::LArrow\">LArrow</a>","synthetic":true,"types":["syn::token::LArrow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Rem.html\" title=\"struct syn::token::Rem\">Rem</a>","synthetic":true,"types":["syn::token::Rem"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.RemEq.html\" title=\"struct syn::token::RemEq\">RemEq</a>","synthetic":true,"types":["syn::token::RemEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.FatArrow.html\" title=\"struct syn::token::FatArrow\">FatArrow</a>","synthetic":true,"types":["syn::token::FatArrow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Semi.html\" title=\"struct syn::token::Semi\">Semi</a>","synthetic":true,"types":["syn::token::Semi"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Shl.html\" title=\"struct syn::token::Shl\">Shl</a>","synthetic":true,"types":["syn::token::Shl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.ShlEq.html\" title=\"struct syn::token::ShlEq\">ShlEq</a>","synthetic":true,"types":["syn::token::ShlEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Shr.html\" title=\"struct syn::token::Shr\">Shr</a>","synthetic":true,"types":["syn::token::Shr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.ShrEq.html\" title=\"struct syn::token::ShrEq\">ShrEq</a>","synthetic":true,"types":["syn::token::ShrEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Star.html\" title=\"struct syn::token::Star\">Star</a>","synthetic":true,"types":["syn::token::Star"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Sub.html\" title=\"struct syn::token::Sub\">Sub</a>","synthetic":true,"types":["syn::token::Sub"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.SubEq.html\" title=\"struct syn::token::SubEq\">SubEq</a>","synthetic":true,"types":["syn::token::SubEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Tilde.html\" title=\"struct syn::token::Tilde\">Tilde</a>","synthetic":true,"types":["syn::token::Tilde"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Brace.html\" title=\"struct syn::token::Brace\">Brace</a>","synthetic":true,"types":["syn::token::Brace"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Bracket.html\" title=\"struct syn::token::Bracket\">Bracket</a>","synthetic":true,"types":["syn::token::Bracket"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Paren.html\" title=\"struct syn::token::Paren\">Paren</a>","synthetic":true,"types":["syn::token::Paren"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Group.html\" title=\"struct syn::token::Group\">Group</a>","synthetic":true,"types":["syn::token::Group"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Attribute.html\" title=\"struct syn::Attribute\">Attribute</a>","synthetic":true,"types":["syn::attr::Attribute"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.AttrStyle.html\" title=\"enum syn::AttrStyle\">AttrStyle</a>","synthetic":true,"types":["syn::attr::AttrStyle"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Meta.html\" title=\"enum syn::Meta\">Meta</a>","synthetic":true,"types":["syn::attr::Meta"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.MetaList.html\" title=\"struct syn::MetaList\">MetaList</a>","synthetic":true,"types":["syn::attr::MetaList"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.MetaNameValue.html\" title=\"struct syn::MetaNameValue\">MetaNameValue</a>","synthetic":true,"types":["syn::attr::MetaNameValue"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.NestedMeta.html\" title=\"enum syn::NestedMeta\">NestedMeta</a>","synthetic":true,"types":["syn::attr::NestedMeta"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Variant.html\" title=\"struct syn::Variant\">Variant</a>","synthetic":true,"types":["syn::data::Variant"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Fields.html\" title=\"enum syn::Fields\">Fields</a>","synthetic":true,"types":["syn::data::Fields"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldsNamed.html\" title=\"struct syn::FieldsNamed\">FieldsNamed</a>","synthetic":true,"types":["syn::data::FieldsNamed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldsUnnamed.html\" title=\"struct syn::FieldsUnnamed\">FieldsUnnamed</a>","synthetic":true,"types":["syn::data::FieldsUnnamed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Field.html\" title=\"struct syn::Field\">Field</a>","synthetic":true,"types":["syn::data::Field"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Visibility.html\" title=\"enum syn::Visibility\">Visibility</a>","synthetic":true,"types":["syn::data::Visibility"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.VisPublic.html\" title=\"struct syn::VisPublic\">VisPublic</a>","synthetic":true,"types":["syn::data::VisPublic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.VisCrate.html\" title=\"struct syn::VisCrate\">VisCrate</a>","synthetic":true,"types":["syn::data::VisCrate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.VisRestricted.html\" title=\"struct syn::VisRestricted\">VisRestricted</a>","synthetic":true,"types":["syn::data::VisRestricted"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Expr.html\" title=\"enum syn::Expr\">Expr</a>","synthetic":true,"types":["syn::expr::Expr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprArray.html\" title=\"struct syn::ExprArray\">ExprArray</a>","synthetic":true,"types":["syn::expr::ExprArray"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAssign.html\" title=\"struct syn::ExprAssign\">ExprAssign</a>","synthetic":true,"types":["syn::expr::ExprAssign"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAssignOp.html\" title=\"struct syn::ExprAssignOp\">ExprAssignOp</a>","synthetic":true,"types":["syn::expr::ExprAssignOp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAsync.html\" title=\"struct syn::ExprAsync\">ExprAsync</a>","synthetic":true,"types":["syn::expr::ExprAsync"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAwait.html\" title=\"struct syn::ExprAwait\">ExprAwait</a>","synthetic":true,"types":["syn::expr::ExprAwait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBinary.html\" title=\"struct syn::ExprBinary\">ExprBinary</a>","synthetic":true,"types":["syn::expr::ExprBinary"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBlock.html\" title=\"struct syn::ExprBlock\">ExprBlock</a>","synthetic":true,"types":["syn::expr::ExprBlock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBox.html\" title=\"struct syn::ExprBox\">ExprBox</a>","synthetic":true,"types":["syn::expr::ExprBox"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBreak.html\" title=\"struct syn::ExprBreak\">ExprBreak</a>","synthetic":true,"types":["syn::expr::ExprBreak"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprCall.html\" title=\"struct syn::ExprCall\">ExprCall</a>","synthetic":true,"types":["syn::expr::ExprCall"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprCast.html\" title=\"struct syn::ExprCast\">ExprCast</a>","synthetic":true,"types":["syn::expr::ExprCast"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprClosure.html\" title=\"struct syn::ExprClosure\">ExprClosure</a>","synthetic":true,"types":["syn::expr::ExprClosure"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprContinue.html\" title=\"struct syn::ExprContinue\">ExprContinue</a>","synthetic":true,"types":["syn::expr::ExprContinue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprField.html\" title=\"struct syn::ExprField\">ExprField</a>","synthetic":true,"types":["syn::expr::ExprField"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprForLoop.html\" title=\"struct syn::ExprForLoop\">ExprForLoop</a>","synthetic":true,"types":["syn::expr::ExprForLoop"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprGroup.html\" title=\"struct syn::ExprGroup\">ExprGroup</a>","synthetic":true,"types":["syn::expr::ExprGroup"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprIf.html\" title=\"struct syn::ExprIf\">ExprIf</a>","synthetic":true,"types":["syn::expr::ExprIf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprIndex.html\" title=\"struct syn::ExprIndex\">ExprIndex</a>","synthetic":true,"types":["syn::expr::ExprIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprLet.html\" title=\"struct syn::ExprLet\">ExprLet</a>","synthetic":true,"types":["syn::expr::ExprLet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprLit.html\" title=\"struct syn::ExprLit\">ExprLit</a>","synthetic":true,"types":["syn::expr::ExprLit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprLoop.html\" title=\"struct syn::ExprLoop\">ExprLoop</a>","synthetic":true,"types":["syn::expr::ExprLoop"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprMacro.html\" title=\"struct syn::ExprMacro\">ExprMacro</a>","synthetic":true,"types":["syn::expr::ExprMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprMatch.html\" title=\"struct syn::ExprMatch\">ExprMatch</a>","synthetic":true,"types":["syn::expr::ExprMatch"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprMethodCall.html\" title=\"struct syn::ExprMethodCall\">ExprMethodCall</a>","synthetic":true,"types":["syn::expr::ExprMethodCall"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprParen.html\" title=\"struct syn::ExprParen\">ExprParen</a>","synthetic":true,"types":["syn::expr::ExprParen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprPath.html\" title=\"struct syn::ExprPath\">ExprPath</a>","synthetic":true,"types":["syn::expr::ExprPath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprRange.html\" title=\"struct syn::ExprRange\">ExprRange</a>","synthetic":true,"types":["syn::expr::ExprRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprReference.html\" title=\"struct syn::ExprReference\">ExprReference</a>","synthetic":true,"types":["syn::expr::ExprReference"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprRepeat.html\" title=\"struct syn::ExprRepeat\">ExprRepeat</a>","synthetic":true,"types":["syn::expr::ExprRepeat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprReturn.html\" title=\"struct syn::ExprReturn\">ExprReturn</a>","synthetic":true,"types":["syn::expr::ExprReturn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprStruct.html\" title=\"struct syn::ExprStruct\">ExprStruct</a>","synthetic":true,"types":["syn::expr::ExprStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprTry.html\" title=\"struct syn::ExprTry\">ExprTry</a>","synthetic":true,"types":["syn::expr::ExprTry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprTryBlock.html\" title=\"struct syn::ExprTryBlock\">ExprTryBlock</a>","synthetic":true,"types":["syn::expr::ExprTryBlock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprTuple.html\" title=\"struct syn::ExprTuple\">ExprTuple</a>","synthetic":true,"types":["syn::expr::ExprTuple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprType.html\" title=\"struct syn::ExprType\">ExprType</a>","synthetic":true,"types":["syn::expr::ExprType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprUnary.html\" title=\"struct syn::ExprUnary\">ExprUnary</a>","synthetic":true,"types":["syn::expr::ExprUnary"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprUnsafe.html\" title=\"struct syn::ExprUnsafe\">ExprUnsafe</a>","synthetic":true,"types":["syn::expr::ExprUnsafe"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprWhile.html\" title=\"struct syn::ExprWhile\">ExprWhile</a>","synthetic":true,"types":["syn::expr::ExprWhile"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprYield.html\" title=\"struct syn::ExprYield\">ExprYield</a>","synthetic":true,"types":["syn::expr::ExprYield"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Member.html\" title=\"enum syn::Member\">Member</a>","synthetic":true,"types":["syn::expr::Member"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Index.html\" title=\"struct syn::Index\">Index</a>","synthetic":true,"types":["syn::expr::Index"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.MethodTurbofish.html\" title=\"struct syn::MethodTurbofish\">MethodTurbofish</a>","synthetic":true,"types":["syn::expr::MethodTurbofish"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.GenericMethodArgument.html\" title=\"enum syn::GenericMethodArgument\">GenericMethodArgument</a>","synthetic":true,"types":["syn::expr::GenericMethodArgument"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldValue.html\" title=\"struct syn::FieldValue\">FieldValue</a>","synthetic":true,"types":["syn::expr::FieldValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Label.html\" title=\"struct syn::Label\">Label</a>","synthetic":true,"types":["syn::expr::Label"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Arm.html\" title=\"struct syn::Arm\">Arm</a>","synthetic":true,"types":["syn::expr::Arm"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.RangeLimits.html\" title=\"enum syn::RangeLimits\">RangeLimits</a>","synthetic":true,"types":["syn::expr::RangeLimits"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Generics.html\" title=\"struct syn::Generics\">Generics</a>","synthetic":true,"types":["syn::generics::Generics"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.GenericParam.html\" title=\"enum syn::GenericParam\">GenericParam</a>","synthetic":true,"types":["syn::generics::GenericParam"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeParam.html\" title=\"struct syn::TypeParam\">TypeParam</a>","synthetic":true,"types":["syn::generics::TypeParam"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LifetimeDef.html\" title=\"struct syn::LifetimeDef\">LifetimeDef</a>","synthetic":true,"types":["syn::generics::LifetimeDef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ConstParam.html\" title=\"struct syn::ConstParam\">ConstParam</a>","synthetic":true,"types":["syn::generics::ConstParam"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/struct.ImplGenerics.html\" title=\"struct syn::ImplGenerics\">ImplGenerics</a>&lt;'a&gt;","synthetic":true,"types":["syn::generics::ImplGenerics"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/struct.TypeGenerics.html\" title=\"struct syn::TypeGenerics\">TypeGenerics</a>&lt;'a&gt;","synthetic":true,"types":["syn::generics::TypeGenerics"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/struct.Turbofish.html\" title=\"struct syn::Turbofish\">Turbofish</a>&lt;'a&gt;","synthetic":true,"types":["syn::generics::Turbofish"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.BoundLifetimes.html\" title=\"struct syn::BoundLifetimes\">BoundLifetimes</a>","synthetic":true,"types":["syn::generics::BoundLifetimes"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.TypeParamBound.html\" title=\"enum syn::TypeParamBound\">TypeParamBound</a>","synthetic":true,"types":["syn::generics::TypeParamBound"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitBound.html\" title=\"struct syn::TraitBound\">TraitBound</a>","synthetic":true,"types":["syn::generics::TraitBound"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.TraitBoundModifier.html\" title=\"enum syn::TraitBoundModifier\">TraitBoundModifier</a>","synthetic":true,"types":["syn::generics::TraitBoundModifier"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.WhereClause.html\" title=\"struct syn::WhereClause\">WhereClause</a>","synthetic":true,"types":["syn::generics::WhereClause"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.WherePredicate.html\" title=\"enum syn::WherePredicate\">WherePredicate</a>","synthetic":true,"types":["syn::generics::WherePredicate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PredicateType.html\" title=\"struct syn::PredicateType\">PredicateType</a>","synthetic":true,"types":["syn::generics::PredicateType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PredicateLifetime.html\" title=\"struct syn::PredicateLifetime\">PredicateLifetime</a>","synthetic":true,"types":["syn::generics::PredicateLifetime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PredicateEq.html\" title=\"struct syn::PredicateEq\">PredicateEq</a>","synthetic":true,"types":["syn::generics::PredicateEq"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Item.html\" title=\"enum syn::Item\">Item</a>","synthetic":true,"types":["syn::item::Item"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemConst.html\" title=\"struct syn::ItemConst\">ItemConst</a>","synthetic":true,"types":["syn::item::ItemConst"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemEnum.html\" title=\"struct syn::ItemEnum\">ItemEnum</a>","synthetic":true,"types":["syn::item::ItemEnum"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemExternCrate.html\" title=\"struct syn::ItemExternCrate\">ItemExternCrate</a>","synthetic":true,"types":["syn::item::ItemExternCrate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemFn.html\" title=\"struct syn::ItemFn\">ItemFn</a>","synthetic":true,"types":["syn::item::ItemFn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemForeignMod.html\" title=\"struct syn::ItemForeignMod\">ItemForeignMod</a>","synthetic":true,"types":["syn::item::ItemForeignMod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemImpl.html\" title=\"struct syn::ItemImpl\">ItemImpl</a>","synthetic":true,"types":["syn::item::ItemImpl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemMacro.html\" title=\"struct syn::ItemMacro\">ItemMacro</a>","synthetic":true,"types":["syn::item::ItemMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemMacro2.html\" title=\"struct syn::ItemMacro2\">ItemMacro2</a>","synthetic":true,"types":["syn::item::ItemMacro2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemMod.html\" title=\"struct syn::ItemMod\">ItemMod</a>","synthetic":true,"types":["syn::item::ItemMod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemStatic.html\" title=\"struct syn::ItemStatic\">ItemStatic</a>","synthetic":true,"types":["syn::item::ItemStatic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemStruct.html\" title=\"struct syn::ItemStruct\">ItemStruct</a>","synthetic":true,"types":["syn::item::ItemStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemTrait.html\" title=\"struct syn::ItemTrait\">ItemTrait</a>","synthetic":true,"types":["syn::item::ItemTrait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemTraitAlias.html\" title=\"struct syn::ItemTraitAlias\">ItemTraitAlias</a>","synthetic":true,"types":["syn::item::ItemTraitAlias"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemType.html\" title=\"struct syn::ItemType\">ItemType</a>","synthetic":true,"types":["syn::item::ItemType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemUnion.html\" title=\"struct syn::ItemUnion\">ItemUnion</a>","synthetic":true,"types":["syn::item::ItemUnion"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemUse.html\" title=\"struct syn::ItemUse\">ItemUse</a>","synthetic":true,"types":["syn::item::ItemUse"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.UseTree.html\" title=\"enum syn::UseTree\">UseTree</a>","synthetic":true,"types":["syn::item::UseTree"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.UsePath.html\" title=\"struct syn::UsePath\">UsePath</a>","synthetic":true,"types":["syn::item::UsePath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.UseName.html\" title=\"struct syn::UseName\">UseName</a>","synthetic":true,"types":["syn::item::UseName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.UseRename.html\" title=\"struct syn::UseRename\">UseRename</a>","synthetic":true,"types":["syn::item::UseRename"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.UseGlob.html\" title=\"struct syn::UseGlob\">UseGlob</a>","synthetic":true,"types":["syn::item::UseGlob"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.UseGroup.html\" title=\"struct syn::UseGroup\">UseGroup</a>","synthetic":true,"types":["syn::item::UseGroup"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.ForeignItem.html\" title=\"enum syn::ForeignItem\">ForeignItem</a>","synthetic":true,"types":["syn::item::ForeignItem"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ForeignItemFn.html\" title=\"struct syn::ForeignItemFn\">ForeignItemFn</a>","synthetic":true,"types":["syn::item::ForeignItemFn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ForeignItemStatic.html\" title=\"struct syn::ForeignItemStatic\">ForeignItemStatic</a>","synthetic":true,"types":["syn::item::ForeignItemStatic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ForeignItemType.html\" title=\"struct syn::ForeignItemType\">ForeignItemType</a>","synthetic":true,"types":["syn::item::ForeignItemType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ForeignItemMacro.html\" title=\"struct syn::ForeignItemMacro\">ForeignItemMacro</a>","synthetic":true,"types":["syn::item::ForeignItemMacro"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.TraitItem.html\" title=\"enum syn::TraitItem\">TraitItem</a>","synthetic":true,"types":["syn::item::TraitItem"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitItemConst.html\" title=\"struct syn::TraitItemConst\">TraitItemConst</a>","synthetic":true,"types":["syn::item::TraitItemConst"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitItemMethod.html\" title=\"struct syn::TraitItemMethod\">TraitItemMethod</a>","synthetic":true,"types":["syn::item::TraitItemMethod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitItemType.html\" title=\"struct syn::TraitItemType\">TraitItemType</a>","synthetic":true,"types":["syn::item::TraitItemType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitItemMacro.html\" title=\"struct syn::TraitItemMacro\">TraitItemMacro</a>","synthetic":true,"types":["syn::item::TraitItemMacro"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.ImplItem.html\" title=\"enum syn::ImplItem\">ImplItem</a>","synthetic":true,"types":["syn::item::ImplItem"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ImplItemConst.html\" title=\"struct syn::ImplItemConst\">ImplItemConst</a>","synthetic":true,"types":["syn::item::ImplItemConst"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ImplItemMethod.html\" title=\"struct syn::ImplItemMethod\">ImplItemMethod</a>","synthetic":true,"types":["syn::item::ImplItemMethod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ImplItemType.html\" title=\"struct syn::ImplItemType\">ImplItemType</a>","synthetic":true,"types":["syn::item::ImplItemType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ImplItemMacro.html\" title=\"struct syn::ImplItemMacro\">ImplItemMacro</a>","synthetic":true,"types":["syn::item::ImplItemMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Signature.html\" title=\"struct syn::Signature\">Signature</a>","synthetic":true,"types":["syn::item::Signature"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.FnArg.html\" title=\"enum syn::FnArg\">FnArg</a>","synthetic":true,"types":["syn::item::FnArg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Receiver.html\" title=\"struct syn::Receiver\">Receiver</a>","synthetic":true,"types":["syn::item::Receiver"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.File.html\" title=\"struct syn::File\">File</a>","synthetic":true,"types":["syn::file::File"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Lifetime.html\" title=\"struct syn::Lifetime\">Lifetime</a>","synthetic":true,"types":["syn::lifetime::Lifetime"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Lit.html\" title=\"enum syn::Lit\">Lit</a>","synthetic":true,"types":["syn::lit::Lit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitStr.html\" title=\"struct syn::LitStr\">LitStr</a>","synthetic":true,"types":["syn::lit::LitStr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitByteStr.html\" title=\"struct syn::LitByteStr\">LitByteStr</a>","synthetic":true,"types":["syn::lit::LitByteStr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitByte.html\" title=\"struct syn::LitByte\">LitByte</a>","synthetic":true,"types":["syn::lit::LitByte"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitChar.html\" title=\"struct syn::LitChar\">LitChar</a>","synthetic":true,"types":["syn::lit::LitChar"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitInt.html\" title=\"struct syn::LitInt\">LitInt</a>","synthetic":true,"types":["syn::lit::LitInt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitFloat.html\" title=\"struct syn::LitFloat\">LitFloat</a>","synthetic":true,"types":["syn::lit::LitFloat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitBool.html\" title=\"struct syn::LitBool\">LitBool</a>","synthetic":true,"types":["syn::lit::LitBool"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.StrStyle.html\" title=\"enum syn::StrStyle\">StrStyle</a>","synthetic":true,"types":["syn::lit::StrStyle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Macro.html\" title=\"struct syn::Macro\">Macro</a>","synthetic":true,"types":["syn::mac::Macro"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.MacroDelimiter.html\" title=\"enum syn::MacroDelimiter\">MacroDelimiter</a>","synthetic":true,"types":["syn::mac::MacroDelimiter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DeriveInput.html\" title=\"struct syn::DeriveInput\">DeriveInput</a>","synthetic":true,"types":["syn::derive::DeriveInput"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Data.html\" title=\"enum syn::Data\">Data</a>","synthetic":true,"types":["syn::derive::Data"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DataStruct.html\" title=\"struct syn::DataStruct\">DataStruct</a>","synthetic":true,"types":["syn::derive::DataStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DataEnum.html\" title=\"struct syn::DataEnum\">DataEnum</a>","synthetic":true,"types":["syn::derive::DataEnum"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DataUnion.html\" title=\"struct syn::DataUnion\">DataUnion</a>","synthetic":true,"types":["syn::derive::DataUnion"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.BinOp.html\" title=\"enum syn::BinOp\">BinOp</a>","synthetic":true,"types":["syn::op::BinOp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.UnOp.html\" title=\"enum syn::UnOp\">UnOp</a>","synthetic":true,"types":["syn::op::UnOp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Block.html\" title=\"struct syn::Block\">Block</a>","synthetic":true,"types":["syn::stmt::Block"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Stmt.html\" title=\"enum syn::Stmt\">Stmt</a>","synthetic":true,"types":["syn::stmt::Stmt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Local.html\" title=\"struct syn::Local\">Local</a>","synthetic":true,"types":["syn::stmt::Local"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Type.html\" title=\"enum syn::Type\">Type</a>","synthetic":true,"types":["syn::ty::Type"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeArray.html\" title=\"struct syn::TypeArray\">TypeArray</a>","synthetic":true,"types":["syn::ty::TypeArray"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeBareFn.html\" title=\"struct syn::TypeBareFn\">TypeBareFn</a>","synthetic":true,"types":["syn::ty::TypeBareFn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeGroup.html\" title=\"struct syn::TypeGroup\">TypeGroup</a>","synthetic":true,"types":["syn::ty::TypeGroup"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeImplTrait.html\" title=\"struct syn::TypeImplTrait\">TypeImplTrait</a>","synthetic":true,"types":["syn::ty::TypeImplTrait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeInfer.html\" title=\"struct syn::TypeInfer\">TypeInfer</a>","synthetic":true,"types":["syn::ty::TypeInfer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeMacro.html\" title=\"struct syn::TypeMacro\">TypeMacro</a>","synthetic":true,"types":["syn::ty::TypeMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeNever.html\" title=\"struct syn::TypeNever\">TypeNever</a>","synthetic":true,"types":["syn::ty::TypeNever"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeParen.html\" title=\"struct syn::TypeParen\">TypeParen</a>","synthetic":true,"types":["syn::ty::TypeParen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypePath.html\" title=\"struct syn::TypePath\">TypePath</a>","synthetic":true,"types":["syn::ty::TypePath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypePtr.html\" title=\"struct syn::TypePtr\">TypePtr</a>","synthetic":true,"types":["syn::ty::TypePtr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeReference.html\" title=\"struct syn::TypeReference\">TypeReference</a>","synthetic":true,"types":["syn::ty::TypeReference"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeSlice.html\" title=\"struct syn::TypeSlice\">TypeSlice</a>","synthetic":true,"types":["syn::ty::TypeSlice"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeTraitObject.html\" title=\"struct syn::TypeTraitObject\">TypeTraitObject</a>","synthetic":true,"types":["syn::ty::TypeTraitObject"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeTuple.html\" title=\"struct syn::TypeTuple\">TypeTuple</a>","synthetic":true,"types":["syn::ty::TypeTuple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Abi.html\" title=\"struct syn::Abi\">Abi</a>","synthetic":true,"types":["syn::ty::Abi"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.BareFnArg.html\" title=\"struct syn::BareFnArg\">BareFnArg</a>","synthetic":true,"types":["syn::ty::BareFnArg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Variadic.html\" title=\"struct syn::Variadic\">Variadic</a>","synthetic":true,"types":["syn::ty::Variadic"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.ReturnType.html\" title=\"enum syn::ReturnType\">ReturnType</a>","synthetic":true,"types":["syn::ty::ReturnType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Pat.html\" title=\"enum syn::Pat\">Pat</a>","synthetic":true,"types":["syn::pat::Pat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatBox.html\" title=\"struct syn::PatBox\">PatBox</a>","synthetic":true,"types":["syn::pat::PatBox"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatIdent.html\" title=\"struct syn::PatIdent\">PatIdent</a>","synthetic":true,"types":["syn::pat::PatIdent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatLit.html\" title=\"struct syn::PatLit\">PatLit</a>","synthetic":true,"types":["syn::pat::PatLit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatMacro.html\" title=\"struct syn::PatMacro\">PatMacro</a>","synthetic":true,"types":["syn::pat::PatMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatOr.html\" title=\"struct syn::PatOr\">PatOr</a>","synthetic":true,"types":["syn::pat::PatOr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatPath.html\" title=\"struct syn::PatPath\">PatPath</a>","synthetic":true,"types":["syn::pat::PatPath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatRange.html\" title=\"struct syn::PatRange\">PatRange</a>","synthetic":true,"types":["syn::pat::PatRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatReference.html\" title=\"struct syn::PatReference\">PatReference</a>","synthetic":true,"types":["syn::pat::PatReference"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatRest.html\" title=\"struct syn::PatRest\">PatRest</a>","synthetic":true,"types":["syn::pat::PatRest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatSlice.html\" title=\"struct syn::PatSlice\">PatSlice</a>","synthetic":true,"types":["syn::pat::PatSlice"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatStruct.html\" title=\"struct syn::PatStruct\">PatStruct</a>","synthetic":true,"types":["syn::pat::PatStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatTuple.html\" title=\"struct syn::PatTuple\">PatTuple</a>","synthetic":true,"types":["syn::pat::PatTuple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatTupleStruct.html\" title=\"struct syn::PatTupleStruct\">PatTupleStruct</a>","synthetic":true,"types":["syn::pat::PatTupleStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatType.html\" title=\"struct syn::PatType\">PatType</a>","synthetic":true,"types":["syn::pat::PatType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatWild.html\" title=\"struct syn::PatWild\">PatWild</a>","synthetic":true,"types":["syn::pat::PatWild"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldPat.html\" title=\"struct syn::FieldPat\">FieldPat</a>","synthetic":true,"types":["syn::pat::FieldPat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Path.html\" title=\"struct syn::Path\">Path</a>","synthetic":true,"types":["syn::path::Path"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PathSegment.html\" title=\"struct syn::PathSegment\">PathSegment</a>","synthetic":true,"types":["syn::path::PathSegment"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.PathArguments.html\" title=\"enum syn::PathArguments\">PathArguments</a>","synthetic":true,"types":["syn::path::PathArguments"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.GenericArgument.html\" title=\"enum syn::GenericArgument\">GenericArgument</a>","synthetic":true,"types":["syn::path::GenericArgument"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.AngleBracketedGenericArguments.html\" title=\"struct syn::AngleBracketedGenericArguments\">AngleBracketedGenericArguments</a>","synthetic":true,"types":["syn::path::AngleBracketedGenericArguments"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Binding.html\" title=\"struct syn::Binding\">Binding</a>","synthetic":true,"types":["syn::path::Binding"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Constraint.html\" title=\"struct syn::Constraint\">Constraint</a>","synthetic":true,"types":["syn::path::Constraint"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ParenthesizedGenericArguments.html\" title=\"struct syn::ParenthesizedGenericArguments\">ParenthesizedGenericArguments</a>","synthetic":true,"types":["syn::path::ParenthesizedGenericArguments"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.QSelf.html\" title=\"struct syn::QSelf\">QSelf</a>","synthetic":true,"types":["syn::path::QSelf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/buffer/struct.TokenBuffer.html\" title=\"struct syn::buffer::TokenBuffer\">TokenBuffer</a>","synthetic":true,"types":["syn::buffer::TokenBuffer"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/buffer/struct.Cursor.html\" title=\"struct syn::buffer::Cursor\">Cursor</a>&lt;'a&gt;","synthetic":true,"types":["syn::buffer::Cursor"]},{"text":"impl&lt;T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.Punctuated.html\" title=\"struct syn::punctuated::Punctuated\">Punctuated</a>&lt;T, P&gt;","synthetic":true,"types":["syn::punctuated::Punctuated"]},{"text":"impl&lt;'a, T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.Pairs.html\" title=\"struct syn::punctuated::Pairs\">Pairs</a>&lt;'a, T, P&gt;","synthetic":true,"types":["syn::punctuated::Pairs"]},{"text":"impl&lt;'a, T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.PairsMut.html\" title=\"struct syn::punctuated::PairsMut\">PairsMut</a>&lt;'a, T, P&gt;","synthetic":true,"types":["syn::punctuated::PairsMut"]},{"text":"impl&lt;T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.IntoPairs.html\" title=\"struct syn::punctuated::IntoPairs\">IntoPairs</a>&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["syn::punctuated::IntoPairs"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.IntoIter.html\" title=\"struct syn::punctuated::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["syn::punctuated::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.Iter.html\" title=\"struct syn::punctuated::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["syn::punctuated::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.IterMut.html\" title=\"struct syn::punctuated::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["syn::punctuated::IterMut"]},{"text":"impl&lt;T, P&gt; Freeze for <a class=\"enum\" href=\"syn/punctuated/enum.Pair.html\" title=\"enum syn::punctuated::Pair\">Pair</a>&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["syn::punctuated::Pair"]},{"text":"impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"syn/parse/struct.Lookahead1.html\" title=\"struct syn::parse::Lookahead1\">Lookahead1</a>&lt;'a&gt;","synthetic":true,"types":["syn::lookahead::Lookahead1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/parse/struct.Error.html\" title=\"struct syn::parse::Error\">Error</a>","synthetic":true,"types":["syn::error::Error"]},{"text":"impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"syn/parse/struct.ParseBuffer.html\" title=\"struct syn::parse::ParseBuffer\">ParseBuffer</a>&lt;'a&gt;","synthetic":true,"types":["syn::parse::ParseBuffer"]},{"text":"impl&lt;'c, 'a&gt; Freeze for <a class=\"struct\" href=\"syn/parse/struct.StepCursor.html\" title=\"struct syn::parse::StepCursor\">StepCursor</a>&lt;'c, 'a&gt;","synthetic":true,"types":["syn::parse::StepCursor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/parse/struct.Nothing.html\" title=\"struct syn::parse::Nothing\">Nothing</a>","synthetic":true,"types":["syn::parse::Nothing"]}];
implementors["synstructure"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"synstructure/enum.AddBounds.html\" title=\"enum synstructure::AddBounds\">AddBounds</a>","synthetic":true,"types":["synstructure::AddBounds"]},{"text":"impl Freeze for <a class=\"enum\" href=\"synstructure/enum.BindStyle.html\" title=\"enum synstructure::BindStyle\">BindStyle</a>","synthetic":true,"types":["synstructure::BindStyle"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"synstructure/struct.BindingInfo.html\" title=\"struct synstructure::BindingInfo\">BindingInfo</a>&lt;'a&gt;","synthetic":true,"types":["synstructure::BindingInfo"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"synstructure/struct.VariantAst.html\" title=\"struct synstructure::VariantAst\">VariantAst</a>&lt;'a&gt;","synthetic":true,"types":["synstructure::VariantAst"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"synstructure/struct.VariantInfo.html\" title=\"struct synstructure::VariantInfo\">VariantInfo</a>&lt;'a&gt;","synthetic":true,"types":["synstructure::VariantInfo"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"synstructure/struct.Structure.html\" title=\"struct synstructure::Structure\">Structure</a>&lt;'a&gt;","synthetic":true,"types":["synstructure::Structure"]}];
implementors["tempfile"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"tempfile/struct.TempDir.html\" title=\"struct tempfile::TempDir\">TempDir</a>","synthetic":true,"types":["tempfile::dir::TempDir"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tempfile/struct.PathPersistError.html\" title=\"struct tempfile::PathPersistError\">PathPersistError</a>","synthetic":true,"types":["tempfile::file::PathPersistError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tempfile/struct.TempPath.html\" title=\"struct tempfile::TempPath\">TempPath</a>","synthetic":true,"types":["tempfile::file::TempPath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tempfile/struct.NamedTempFile.html\" title=\"struct tempfile::NamedTempFile\">NamedTempFile</a>","synthetic":true,"types":["tempfile::file::NamedTempFile"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tempfile/struct.PersistError.html\" title=\"struct tempfile::PersistError\">PersistError</a>","synthetic":true,"types":["tempfile::file::PersistError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tempfile/struct.SpooledTempFile.html\" title=\"struct tempfile::SpooledTempFile\">SpooledTempFile</a>","synthetic":true,"types":["tempfile::spooled::SpooledTempFile"]},{"text":"impl&lt;'a, 'b&gt; Freeze for <a class=\"struct\" href=\"tempfile/struct.Builder.html\" title=\"struct tempfile::Builder\">Builder</a>&lt;'a, 'b&gt;","synthetic":true,"types":["tempfile::Builder"]}];
implementors["tera"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"tera/struct.Context.html\" title=\"struct tera::Context\">Context</a>","synthetic":true,"types":["tera::context::Context"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tera/enum.ErrorKind.html\" title=\"enum tera::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["tera::errors::ErrorKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tera/struct.Error.html\" title=\"struct tera::Error\">Error</a>","synthetic":true,"types":["tera::errors::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tera/struct.Tera.html\" title=\"struct tera::Tera\">Tera</a>","synthetic":true,"types":["tera::tera::Tera"]}];
implementors["termcolor"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"termcolor/enum.ColorChoice.html\" title=\"enum termcolor::ColorChoice\">ColorChoice</a>","synthetic":true,"types":["termcolor::ColorChoice"]},{"text":"impl Freeze for <a class=\"struct\" href=\"termcolor/struct.StandardStream.html\" title=\"struct termcolor::StandardStream\">StandardStream</a>","synthetic":true,"types":["termcolor::StandardStream"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"termcolor/struct.StandardStreamLock.html\" title=\"struct termcolor::StandardStreamLock\">StandardStreamLock</a>&lt;'a&gt;","synthetic":true,"types":["termcolor::StandardStreamLock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"termcolor/struct.BufferedStandardStream.html\" title=\"struct termcolor::BufferedStandardStream\">BufferedStandardStream</a>","synthetic":true,"types":["termcolor::BufferedStandardStream"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"termcolor/struct.BufferWriter.html\" title=\"struct termcolor::BufferWriter\">BufferWriter</a>","synthetic":true,"types":["termcolor::BufferWriter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"termcolor/struct.Buffer.html\" title=\"struct termcolor::Buffer\">Buffer</a>","synthetic":true,"types":["termcolor::Buffer"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"termcolor/struct.NoColor.html\" title=\"struct termcolor::NoColor\">NoColor</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["termcolor::NoColor"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"termcolor/struct.Ansi.html\" title=\"struct termcolor::Ansi\">Ansi</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["termcolor::Ansi"]},{"text":"impl Freeze for <a class=\"struct\" href=\"termcolor/struct.ColorSpec.html\" title=\"struct termcolor::ColorSpec\">ColorSpec</a>","synthetic":true,"types":["termcolor::ColorSpec"]},{"text":"impl Freeze for <a class=\"enum\" href=\"termcolor/enum.Color.html\" title=\"enum termcolor::Color\">Color</a>","synthetic":true,"types":["termcolor::Color"]},{"text":"impl Freeze for <a class=\"struct\" href=\"termcolor/struct.ParseColorError.html\" title=\"struct termcolor::ParseColorError\">ParseColorError</a>","synthetic":true,"types":["termcolor::ParseColorError"]}];
implementors["textwrap"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"textwrap/enum.WordSeparator.html\" title=\"enum textwrap::WordSeparator\">WordSeparator</a>","synthetic":true,"types":["textwrap::word_separators::WordSeparator"]},{"text":"impl Freeze for <a class=\"enum\" href=\"textwrap/word_splitters/enum.WordSplitter.html\" title=\"enum textwrap::word_splitters::WordSplitter\">WordSplitter</a>","synthetic":true,"types":["textwrap::word_splitters::WordSplitter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"textwrap/wrap_algorithms/struct.Penalties.html\" title=\"struct textwrap::wrap_algorithms::Penalties\">Penalties</a>","synthetic":true,"types":["textwrap::wrap_algorithms::optimal_fit::Penalties"]},{"text":"impl Freeze for <a class=\"struct\" href=\"textwrap/wrap_algorithms/struct.OverflowError.html\" title=\"struct textwrap::wrap_algorithms::OverflowError\">OverflowError</a>","synthetic":true,"types":["textwrap::wrap_algorithms::optimal_fit::OverflowError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"textwrap/wrap_algorithms/enum.WrapAlgorithm.html\" title=\"enum textwrap::wrap_algorithms::WrapAlgorithm\">WrapAlgorithm</a>","synthetic":true,"types":["textwrap::wrap_algorithms::WrapAlgorithm"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"textwrap/core/struct.Word.html\" title=\"struct textwrap::core::Word\">Word</a>&lt;'a&gt;","synthetic":true,"types":["textwrap::core::Word"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"textwrap/struct.Options.html\" title=\"struct textwrap::Options\">Options</a>&lt;'a&gt;","synthetic":true,"types":["textwrap::Options"]}];
implementors["thread_local"] = [{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"thread_local/struct.CachedThreadLocal.html\" title=\"struct thread_local::CachedThreadLocal\">CachedThreadLocal</a>&lt;T&gt;","synthetic":true,"types":["thread_local::cached::CachedThreadLocal"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"thread_local/struct.CachedIterMut.html\" title=\"struct thread_local::CachedIterMut\">CachedIterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["thread_local::cached::CachedIterMut"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"thread_local/struct.CachedIntoIter.html\" title=\"struct thread_local::CachedIntoIter\">CachedIntoIter</a>&lt;T&gt;","synthetic":true,"types":["thread_local::cached::CachedIntoIter"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"thread_local/struct.ThreadLocal.html\" title=\"struct thread_local::ThreadLocal\">ThreadLocal</a>&lt;T&gt;","synthetic":true,"types":["thread_local::ThreadLocal"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"thread_local/struct.Iter.html\" title=\"struct thread_local::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["thread_local::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"thread_local/struct.IterMut.html\" title=\"struct thread_local::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["thread_local::IterMut"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"thread_local/struct.IntoIter.html\" title=\"struct thread_local::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["thread_local::IntoIter"]}];
implementors["threadpool"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"threadpool/struct.Builder.html\" title=\"struct threadpool::Builder\">Builder</a>","synthetic":true,"types":["threadpool::Builder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"threadpool/struct.ThreadPool.html\" title=\"struct threadpool::ThreadPool\">ThreadPool</a>","synthetic":true,"types":["threadpool::ThreadPool"]}];
implementors["time"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"time/struct.Date.html\" title=\"struct time::Date\">Date</a>","synthetic":true,"types":["time::date::Date"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/struct.Duration.html\" title=\"struct time::Duration\">Duration</a>","synthetic":true,"types":["time::duration::Duration"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/error/struct.ComponentRange.html\" title=\"struct time::error::ComponentRange\">ComponentRange</a>","synthetic":true,"types":["time::error::component_range::ComponentRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/error/struct.ConversionRange.html\" title=\"struct time::error::ConversionRange\">ConversionRange</a>","synthetic":true,"types":["time::error::conversion_range::ConversionRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/error/struct.DifferentVariant.html\" title=\"struct time::error::DifferentVariant\">DifferentVariant</a>","synthetic":true,"types":["time::error::different_variant::DifferentVariant"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/error/enum.Format.html\" title=\"enum time::error::Format\">Format</a>","synthetic":true,"types":["time::error::format::Format"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/error/enum.InvalidFormatDescription.html\" title=\"enum time::error::InvalidFormatDescription\">InvalidFormatDescription</a>","synthetic":true,"types":["time::error::invalid_format_description::InvalidFormatDescription"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/error/struct.InvalidVariant.html\" title=\"struct time::error::InvalidVariant\">InvalidVariant</a>","synthetic":true,"types":["time::error::invalid_variant::InvalidVariant"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/error/enum.Parse.html\" title=\"enum time::error::Parse\">Parse</a>","synthetic":true,"types":["time::error::parse::Parse"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/error/enum.ParseFromDescription.html\" title=\"enum time::error::ParseFromDescription\">ParseFromDescription</a>","synthetic":true,"types":["time::error::parse_from_description::ParseFromDescription"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/error/enum.TryFromParsed.html\" title=\"enum time::error::TryFromParsed\">TryFromParsed</a>","synthetic":true,"types":["time::error::try_from_parsed::TryFromParsed"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/error/enum.Error.html\" title=\"enum time::error::Error\">Error</a>","synthetic":true,"types":["time::error::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/format_description/enum.Component.html\" title=\"enum time::format_description::Component\">Component</a>","synthetic":true,"types":["time::format_description::component::Component"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.Day.html\" title=\"struct time::format_description::modifier::Day\">Day</a>","synthetic":true,"types":["time::format_description::modifier::Day"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/format_description/modifier/enum.MonthRepr.html\" title=\"enum time::format_description::modifier::MonthRepr\">MonthRepr</a>","synthetic":true,"types":["time::format_description::modifier::MonthRepr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.Month.html\" title=\"struct time::format_description::modifier::Month\">Month</a>","synthetic":true,"types":["time::format_description::modifier::Month"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.Ordinal.html\" title=\"struct time::format_description::modifier::Ordinal\">Ordinal</a>","synthetic":true,"types":["time::format_description::modifier::Ordinal"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/format_description/modifier/enum.WeekdayRepr.html\" title=\"enum time::format_description::modifier::WeekdayRepr\">WeekdayRepr</a>","synthetic":true,"types":["time::format_description::modifier::WeekdayRepr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.Weekday.html\" title=\"struct time::format_description::modifier::Weekday\">Weekday</a>","synthetic":true,"types":["time::format_description::modifier::Weekday"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/format_description/modifier/enum.WeekNumberRepr.html\" title=\"enum time::format_description::modifier::WeekNumberRepr\">WeekNumberRepr</a>","synthetic":true,"types":["time::format_description::modifier::WeekNumberRepr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.WeekNumber.html\" title=\"struct time::format_description::modifier::WeekNumber\">WeekNumber</a>","synthetic":true,"types":["time::format_description::modifier::WeekNumber"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/format_description/modifier/enum.YearRepr.html\" title=\"enum time::format_description::modifier::YearRepr\">YearRepr</a>","synthetic":true,"types":["time::format_description::modifier::YearRepr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.Year.html\" title=\"struct time::format_description::modifier::Year\">Year</a>","synthetic":true,"types":["time::format_description::modifier::Year"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.Hour.html\" title=\"struct time::format_description::modifier::Hour\">Hour</a>","synthetic":true,"types":["time::format_description::modifier::Hour"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.Minute.html\" title=\"struct time::format_description::modifier::Minute\">Minute</a>","synthetic":true,"types":["time::format_description::modifier::Minute"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.Period.html\" title=\"struct time::format_description::modifier::Period\">Period</a>","synthetic":true,"types":["time::format_description::modifier::Period"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.Second.html\" title=\"struct time::format_description::modifier::Second\">Second</a>","synthetic":true,"types":["time::format_description::modifier::Second"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/format_description/modifier/enum.SubsecondDigits.html\" title=\"enum time::format_description::modifier::SubsecondDigits\">SubsecondDigits</a>","synthetic":true,"types":["time::format_description::modifier::SubsecondDigits"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.Subsecond.html\" title=\"struct time::format_description::modifier::Subsecond\">Subsecond</a>","synthetic":true,"types":["time::format_description::modifier::Subsecond"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.OffsetHour.html\" title=\"struct time::format_description::modifier::OffsetHour\">OffsetHour</a>","synthetic":true,"types":["time::format_description::modifier::OffsetHour"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.OffsetMinute.html\" title=\"struct time::format_description::modifier::OffsetMinute\">OffsetMinute</a>","synthetic":true,"types":["time::format_description::modifier::OffsetMinute"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.OffsetSecond.html\" title=\"struct time::format_description::modifier::OffsetSecond\">OffsetSecond</a>","synthetic":true,"types":["time::format_description::modifier::OffsetSecond"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/format_description/modifier/enum.Padding.html\" title=\"enum time::format_description::modifier::Padding\">Padding</a>","synthetic":true,"types":["time::format_description::modifier::Padding"]},{"text":"impl&lt;const CONFIG:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.61.0/std/primitive.u128.html\">u128</a>&gt; Freeze for <a class=\"struct\" href=\"time/format_description/well_known/struct.Iso8601.html\" title=\"struct time::format_description::well_known::Iso8601\">Iso8601</a>&lt;CONFIG&gt;","synthetic":true,"types":["time::format_description::well_known::iso8601::Iso8601"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/format_description/well_known/iso8601/enum.FormattedComponents.html\" title=\"enum time::format_description::well_known::iso8601::FormattedComponents\">FormattedComponents</a>","synthetic":true,"types":["time::format_description::well_known::iso8601::FormattedComponents"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/format_description/well_known/iso8601/enum.DateKind.html\" title=\"enum time::format_description::well_known::iso8601::DateKind\">DateKind</a>","synthetic":true,"types":["time::format_description::well_known::iso8601::DateKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/format_description/well_known/iso8601/enum.TimePrecision.html\" title=\"enum time::format_description::well_known::iso8601::TimePrecision\">TimePrecision</a>","synthetic":true,"types":["time::format_description::well_known::iso8601::TimePrecision"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/format_description/well_known/iso8601/enum.OffsetPrecision.html\" title=\"enum time::format_description::well_known::iso8601::OffsetPrecision\">OffsetPrecision</a>","synthetic":true,"types":["time::format_description::well_known::iso8601::OffsetPrecision"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/well_known/iso8601/struct.Config.html\" title=\"struct time::format_description::well_known::iso8601::Config\">Config</a>","synthetic":true,"types":["time::format_description::well_known::iso8601::Config"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/well_known/struct.Rfc2822.html\" title=\"struct time::format_description::well_known::Rfc2822\">Rfc2822</a>","synthetic":true,"types":["time::format_description::well_known::rfc2822::Rfc2822"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/well_known/struct.Rfc3339.html\" title=\"struct time::format_description::well_known::Rfc3339\">Rfc3339</a>","synthetic":true,"types":["time::format_description::well_known::rfc3339::Rfc3339"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"time/format_description/enum.FormatItem.html\" title=\"enum time::format_description::FormatItem\">FormatItem</a>&lt;'a&gt;","synthetic":true,"types":["time::format_description::FormatItem"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/struct.Instant.html\" title=\"struct time::Instant\">Instant</a>","synthetic":true,"types":["time::instant::Instant"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/enum.Month.html\" title=\"enum time::Month\">Month</a>","synthetic":true,"types":["time::month::Month"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/struct.OffsetDateTime.html\" title=\"struct time::OffsetDateTime\">OffsetDateTime</a>","synthetic":true,"types":["time::offset_date_time::OffsetDateTime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/parsing/struct.Parsed.html\" title=\"struct time::parsing::Parsed\">Parsed</a>","synthetic":true,"types":["time::parsing::parsed::Parsed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/struct.PrimitiveDateTime.html\" title=\"struct time::PrimitiveDateTime\">PrimitiveDateTime</a>","synthetic":true,"types":["time::primitive_date_time::PrimitiveDateTime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/struct.Time.html\" title=\"struct time::Time\">Time</a>","synthetic":true,"types":["time::time::Time"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/struct.UtcOffset.html\" title=\"struct time::UtcOffset\">UtcOffset</a>","synthetic":true,"types":["time::utc_offset::UtcOffset"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/enum.Weekday.html\" title=\"enum time::Weekday\">Weekday</a>","synthetic":true,"types":["time::weekday::Weekday"]}];
implementors["tint"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a>","synthetic":true,"types":["tint::Color"]}];
implementors["tiny_keccak"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"tiny_keccak/struct.Sha3.html\" title=\"struct tiny_keccak::Sha3\">Sha3</a>","synthetic":true,"types":["tiny_keccak::sha3::Sha3"]}];
implementors["tinyvec"] = [{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"tinyvec/struct.ArrayVec.html\" title=\"struct tinyvec::ArrayVec\">ArrayVec</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["tinyvec::arrayvec::ArrayVec"]},{"text":"impl&lt;'p, A, I&gt; Freeze for <a class=\"struct\" href=\"tinyvec/struct.ArrayVecSplice.html\" title=\"struct tinyvec::ArrayVecSplice\">ArrayVecSplice</a>&lt;'p, A, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["tinyvec::arrayvec::ArrayVecSplice"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tinyvec/struct.TryFromSliceError.html\" title=\"struct tinyvec::TryFromSliceError\">TryFromSliceError</a>","synthetic":true,"types":["tinyvec::arrayvec::TryFromSliceError"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"tinyvec/struct.ArrayVecIterator.html\" title=\"struct tinyvec::ArrayVecIterator\">ArrayVecIterator</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["tinyvec::arrayvec::ArrayVecIterator"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"tinyvec/struct.ArrayVecDrain.html\" title=\"struct tinyvec::ArrayVecDrain\">ArrayVecDrain</a>&lt;'a, T&gt;","synthetic":true,"types":["tinyvec::arrayvec_drain::ArrayVecDrain"]},{"text":"impl&lt;'s, T&gt; Freeze for <a class=\"struct\" href=\"tinyvec/struct.SliceVec.html\" title=\"struct tinyvec::SliceVec\">SliceVec</a>&lt;'s, T&gt;","synthetic":true,"types":["tinyvec::slicevec::SliceVec"]},{"text":"impl&lt;'p, 's, T&gt; Freeze for <a class=\"struct\" href=\"tinyvec/struct.SliceVecDrain.html\" title=\"struct tinyvec::SliceVecDrain\">SliceVecDrain</a>&lt;'p, 's, T&gt;","synthetic":true,"types":["tinyvec::slicevec::SliceVecDrain"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"enum\" href=\"tinyvec/enum.TinyVec.html\" title=\"enum tinyvec::TinyVec\">TinyVec</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["tinyvec::tinyvec::TinyVec"]},{"text":"impl&lt;'p, A&gt; Freeze for <a class=\"enum\" href=\"tinyvec/enum.TinyVecDrain.html\" title=\"enum tinyvec::TinyVecDrain\">TinyVecDrain</a>&lt;'p, A&gt;","synthetic":true,"types":["tinyvec::tinyvec::TinyVecDrain"]},{"text":"impl&lt;'p, A, I&gt; Freeze for <a class=\"struct\" href=\"tinyvec/struct.TinyVecSplice.html\" title=\"struct tinyvec::TinyVecSplice\">TinyVecSplice</a>&lt;'p, A, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["tinyvec::tinyvec::TinyVecSplice"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"enum\" href=\"tinyvec/enum.TinyVecIterator.html\" title=\"enum tinyvec::TinyVecIterator\">TinyVecIterator</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["tinyvec::tinyvec::TinyVecIterator"]}];
implementors["tokio"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/fs/struct.DirBuilder.html\" title=\"struct tokio::fs::DirBuilder\">DirBuilder</a>","synthetic":true,"types":["tokio::fs::dir_builder::DirBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/fs/struct.File.html\" title=\"struct tokio::fs::File\">File</a>","synthetic":true,"types":["tokio::fs::file::File"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/fs/struct.OpenOptions.html\" title=\"struct tokio::fs::OpenOptions\">OpenOptions</a>","synthetic":true,"types":["tokio::fs::open_options::OpenOptions"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/fs/struct.ReadDir.html\" title=\"struct tokio::fs::ReadDir\">ReadDir</a>","synthetic":true,"types":["tokio::fs::read_dir::ReadDir"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/fs/struct.DirEntry.html\" title=\"struct tokio::fs::DirEntry\">DirEntry</a>","synthetic":true,"types":["tokio::fs::read_dir::DirEntry"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.ReadBuf.html\" title=\"struct tokio::io::ReadBuf\">ReadBuf</a>&lt;'a&gt;","synthetic":true,"types":["tokio::io::read_buf::ReadBuf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/io/struct.Interest.html\" title=\"struct tokio::io::Interest\">Interest</a>","synthetic":true,"types":["tokio::io::driver::interest::Interest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/io/struct.Ready.html\" title=\"struct tokio::io::Ready\">Ready</a>","synthetic":true,"types":["tokio::io::driver::ready::Ready"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/io/unix/struct.AsyncFd.html\" title=\"struct tokio::io::unix::AsyncFd\">AsyncFd</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::io::async_fd::AsyncFd"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"tokio/io/unix/struct.AsyncFdReadyGuard.html\" title=\"struct tokio::io::unix::AsyncFdReadyGuard\">AsyncFdReadyGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio::io::async_fd::AsyncFdReadyGuard"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"tokio/io/unix/struct.AsyncFdReadyMutGuard.html\" title=\"struct tokio::io::unix::AsyncFdReadyMutGuard\">AsyncFdReadyMutGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio::io::async_fd::AsyncFdReadyMutGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/io/unix/struct.TryIoError.html\" title=\"struct tokio::io::unix::TryIoError\">TryIoError</a>","synthetic":true,"types":["tokio::io::async_fd::TryIoError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/io/struct.Stderr.html\" title=\"struct tokio::io::Stderr\">Stderr</a>","synthetic":true,"types":["tokio::io::stderr::Stderr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/io/struct.Stdin.html\" title=\"struct tokio::io::Stdin\">Stdin</a>","synthetic":true,"types":["tokio::io::stdin::Stdin"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/io/struct.Stdout.html\" title=\"struct tokio::io::Stdout\">Stdout</a>","synthetic":true,"types":["tokio::io::stdout::Stdout"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.ReadHalf.html\" title=\"struct tokio::io::ReadHalf\">ReadHalf</a>&lt;T&gt;","synthetic":true,"types":["tokio::io::split::ReadHalf"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.WriteHalf.html\" title=\"struct tokio::io::WriteHalf\">WriteHalf</a>&lt;T&gt;","synthetic":true,"types":["tokio::io::split::WriteHalf"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.BufReader.html\" title=\"struct tokio::io::BufReader\">BufReader</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::io::util::buf_reader::BufReader"]},{"text":"impl&lt;RW&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.BufStream.html\" title=\"struct tokio::io::BufStream\">BufStream</a>&lt;RW&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;RW: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::io::util::buf_stream::BufStream"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.BufWriter.html\" title=\"struct tokio::io::BufWriter\">BufWriter</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::io::util::buf_writer::BufWriter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/io/struct.Empty.html\" title=\"struct tokio::io::Empty\">Empty</a>","synthetic":true,"types":["tokio::io::util::empty::Empty"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.Lines.html\" title=\"struct tokio::io::Lines\">Lines</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::io::util::lines::Lines"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/io/struct.DuplexStream.html\" title=\"struct tokio::io::DuplexStream\">DuplexStream</a>","synthetic":true,"types":["tokio::io::util::mem::DuplexStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/io/struct.Repeat.html\" title=\"struct tokio::io::Repeat\">Repeat</a>","synthetic":true,"types":["tokio::io::util::repeat::Repeat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/io/struct.Sink.html\" title=\"struct tokio::io::Sink\">Sink</a>","synthetic":true,"types":["tokio::io::util::sink::Sink"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.Split.html\" title=\"struct tokio::io::Split\">Split</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::io::util::split::Split"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.Take.html\" title=\"struct tokio::io::Take\">Take</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::io::util::take::Take"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/net/struct.TcpListener.html\" title=\"struct tokio::net::TcpListener\">TcpListener</a>","synthetic":true,"types":["tokio::net::tcp::listener::TcpListener"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/net/struct.TcpSocket.html\" title=\"struct tokio::net::TcpSocket\">TcpSocket</a>","synthetic":true,"types":["tokio::net::tcp::socket::TcpSocket"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tokio/net/tcp/struct.ReadHalf.html\" title=\"struct tokio::net::tcp::ReadHalf\">ReadHalf</a>&lt;'a&gt;","synthetic":true,"types":["tokio::net::tcp::split::ReadHalf"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tokio/net/tcp/struct.WriteHalf.html\" title=\"struct tokio::net::tcp::WriteHalf\">WriteHalf</a>&lt;'a&gt;","synthetic":true,"types":["tokio::net::tcp::split::WriteHalf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/net/tcp/struct.OwnedReadHalf.html\" title=\"struct tokio::net::tcp::OwnedReadHalf\">OwnedReadHalf</a>","synthetic":true,"types":["tokio::net::tcp::split_owned::OwnedReadHalf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/net/tcp/struct.OwnedWriteHalf.html\" title=\"struct tokio::net::tcp::OwnedWriteHalf\">OwnedWriteHalf</a>","synthetic":true,"types":["tokio::net::tcp::split_owned::OwnedWriteHalf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/net/tcp/struct.ReuniteError.html\" title=\"struct tokio::net::tcp::ReuniteError\">ReuniteError</a>","synthetic":true,"types":["tokio::net::tcp::split_owned::ReuniteError"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/net/struct.TcpStream.html\" title=\"struct tokio::net::TcpStream\">TcpStream</a>","synthetic":true,"types":["tokio::net::tcp::stream::TcpStream"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/net/struct.UdpSocket.html\" title=\"struct tokio::net::UdpSocket\">UdpSocket</a>","synthetic":true,"types":["tokio::net::udp::UdpSocket"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/net/struct.UnixDatagram.html\" title=\"struct tokio::net::UnixDatagram\">UnixDatagram</a>","synthetic":true,"types":["tokio::net::unix::datagram::socket::UnixDatagram"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/net/struct.UnixListener.html\" title=\"struct tokio::net::UnixListener\">UnixListener</a>","synthetic":true,"types":["tokio::net::unix::listener::UnixListener"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tokio/net/unix/struct.ReadHalf.html\" title=\"struct tokio::net::unix::ReadHalf\">ReadHalf</a>&lt;'a&gt;","synthetic":true,"types":["tokio::net::unix::split::ReadHalf"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tokio/net/unix/struct.WriteHalf.html\" title=\"struct tokio::net::unix::WriteHalf\">WriteHalf</a>&lt;'a&gt;","synthetic":true,"types":["tokio::net::unix::split::WriteHalf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/net/unix/struct.OwnedReadHalf.html\" title=\"struct tokio::net::unix::OwnedReadHalf\">OwnedReadHalf</a>","synthetic":true,"types":["tokio::net::unix::split_owned::OwnedReadHalf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/net/unix/struct.OwnedWriteHalf.html\" title=\"struct tokio::net::unix::OwnedWriteHalf\">OwnedWriteHalf</a>","synthetic":true,"types":["tokio::net::unix::split_owned::OwnedWriteHalf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/net/unix/struct.ReuniteError.html\" title=\"struct tokio::net::unix::ReuniteError\">ReuniteError</a>","synthetic":true,"types":["tokio::net::unix::split_owned::ReuniteError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/net/unix/struct.SocketAddr.html\" title=\"struct tokio::net::unix::SocketAddr\">SocketAddr</a>","synthetic":true,"types":["tokio::net::unix::socketaddr::SocketAddr"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/net/struct.UnixStream.html\" title=\"struct tokio::net::UnixStream\">UnixStream</a>","synthetic":true,"types":["tokio::net::unix::stream::UnixStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/net/unix/struct.UCred.html\" title=\"struct tokio::net::unix::UCred\">UCred</a>","synthetic":true,"types":["tokio::net::unix::ucred::UCred"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/process/struct.Command.html\" title=\"struct tokio::process::Command\">Command</a>","synthetic":true,"types":["tokio::process::Command"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/process/struct.Child.html\" title=\"struct tokio::process::Child\">Child</a>","synthetic":true,"types":["tokio::process::Child"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/process/struct.ChildStdin.html\" title=\"struct tokio::process::ChildStdin\">ChildStdin</a>","synthetic":true,"types":["tokio::process::ChildStdin"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/process/struct.ChildStdout.html\" title=\"struct tokio::process::ChildStdout\">ChildStdout</a>","synthetic":true,"types":["tokio::process::ChildStdout"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/process/struct.ChildStderr.html\" title=\"struct tokio::process::ChildStderr\">ChildStderr</a>","synthetic":true,"types":["tokio::process::ChildStderr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/task/struct.JoinError.html\" title=\"struct tokio::task::JoinError\">JoinError</a>","synthetic":true,"types":["tokio::runtime::task::error::JoinError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/task/struct.JoinHandle.html\" title=\"struct tokio::task::JoinHandle\">JoinHandle</a>&lt;T&gt;","synthetic":true,"types":["tokio::runtime::task::join::JoinHandle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/runtime/struct.Builder.html\" title=\"struct tokio::runtime::Builder\">Builder</a>","synthetic":true,"types":["tokio::runtime::builder::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/runtime/struct.Handle.html\" title=\"struct tokio::runtime::Handle\">Handle</a>","synthetic":true,"types":["tokio::runtime::handle::Handle"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tokio/runtime/struct.EnterGuard.html\" title=\"struct tokio::runtime::EnterGuard\">EnterGuard</a>&lt;'a&gt;","synthetic":true,"types":["tokio::runtime::handle::EnterGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/runtime/struct.TryCurrentError.html\" title=\"struct tokio::runtime::TryCurrentError\">TryCurrentError</a>","synthetic":true,"types":["tokio::runtime::handle::TryCurrentError"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/runtime/struct.Runtime.html\" title=\"struct tokio::runtime::Runtime\">Runtime</a>","synthetic":true,"types":["tokio::runtime::Runtime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/signal/unix/struct.SignalKind.html\" title=\"struct tokio::signal::unix::SignalKind\">SignalKind</a>","synthetic":true,"types":["tokio::signal::unix::SignalKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/signal/unix/struct.Signal.html\" title=\"struct tokio::signal::unix::Signal\">Signal</a>","synthetic":true,"types":["tokio::signal::unix::Signal"]},{"text":"impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"tokio/sync/futures/struct.Notified.html\" title=\"struct tokio::sync::futures::Notified\">Notified</a>&lt;'a&gt;","synthetic":true,"types":["tokio::sync::notify::Notified"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/sync/struct.Barrier.html\" title=\"struct tokio::sync::Barrier\">Barrier</a>","synthetic":true,"types":["tokio::sync::barrier::Barrier"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/sync/struct.BarrierWaitResult.html\" title=\"struct tokio::sync::BarrierWaitResult\">BarrierWaitResult</a>","synthetic":true,"types":["tokio::sync::barrier::BarrierWaitResult"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/broadcast/error/struct.SendError.html\" title=\"struct tokio::sync::broadcast::error::SendError\">SendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::sync::broadcast::error::SendError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio/sync/broadcast/error/enum.RecvError.html\" title=\"enum tokio::sync::broadcast::error::RecvError\">RecvError</a>","synthetic":true,"types":["tokio::sync::broadcast::error::RecvError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio/sync/broadcast/error/enum.TryRecvError.html\" title=\"enum tokio::sync::broadcast::error::TryRecvError\">TryRecvError</a>","synthetic":true,"types":["tokio::sync::broadcast::error::TryRecvError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/broadcast/struct.Sender.html\" title=\"struct tokio::sync::broadcast::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::broadcast::Sender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/broadcast/struct.Receiver.html\" title=\"struct tokio::sync::broadcast::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::broadcast::Receiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/mpsc/struct.Sender.html\" title=\"struct tokio::sync::mpsc::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::mpsc::bounded::Sender"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/mpsc/struct.Permit.html\" title=\"struct tokio::sync::mpsc::Permit\">Permit</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio::sync::mpsc::bounded::Permit"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/mpsc/struct.OwnedPermit.html\" title=\"struct tokio::sync::mpsc::OwnedPermit\">OwnedPermit</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::mpsc::bounded::OwnedPermit"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/mpsc/struct.Receiver.html\" title=\"struct tokio::sync::mpsc::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::mpsc::bounded::Receiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/mpsc/struct.UnboundedSender.html\" title=\"struct tokio::sync::mpsc::UnboundedSender\">UnboundedSender</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::mpsc::unbounded::UnboundedSender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/mpsc/struct.UnboundedReceiver.html\" title=\"struct tokio::sync::mpsc::UnboundedReceiver\">UnboundedReceiver</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::mpsc::unbounded::UnboundedReceiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/mpsc/error/struct.SendError.html\" title=\"struct tokio::sync::mpsc::error::SendError\">SendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::sync::mpsc::error::SendError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"tokio/sync/mpsc/error/enum.TrySendError.html\" title=\"enum tokio::sync::mpsc::error::TrySendError\">TrySendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::sync::mpsc::error::TrySendError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio/sync/mpsc/error/enum.TryRecvError.html\" title=\"enum tokio::sync::mpsc::error::TryRecvError\">TryRecvError</a>","synthetic":true,"types":["tokio::sync::mpsc::error::TryRecvError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"tokio/sync/mpsc/error/enum.SendTimeoutError.html\" title=\"enum tokio::sync::mpsc::error::SendTimeoutError\">SendTimeoutError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::sync::mpsc::error::SendTimeoutError"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"tokio/sync/struct.Mutex.html\" title=\"struct tokio::sync::Mutex\">Mutex</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::mutex::Mutex"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/struct.MutexGuard.html\" title=\"struct tokio::sync::MutexGuard\">MutexGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio::sync::mutex::MutexGuard"]},{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/struct.OwnedMutexGuard.html\" title=\"struct tokio::sync::OwnedMutexGuard\">OwnedMutexGuard</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::mutex::OwnedMutexGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/struct.MappedMutexGuard.html\" title=\"struct tokio::sync::MappedMutexGuard\">MappedMutexGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio::sync::mutex::MappedMutexGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/sync/struct.TryLockError.html\" title=\"struct tokio::sync::TryLockError\">TryLockError</a>","synthetic":true,"types":["tokio::sync::mutex::TryLockError"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/sync/struct.Notify.html\" title=\"struct tokio::sync::Notify\">Notify</a>","synthetic":true,"types":["tokio::sync::notify::Notify"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/sync/oneshot/error/struct.RecvError.html\" title=\"struct tokio::sync::oneshot::error::RecvError\">RecvError</a>","synthetic":true,"types":["tokio::sync::oneshot::error::RecvError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio/sync/oneshot/error/enum.TryRecvError.html\" title=\"enum tokio::sync::oneshot::error::TryRecvError\">TryRecvError</a>","synthetic":true,"types":["tokio::sync::oneshot::error::TryRecvError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/oneshot/struct.Sender.html\" title=\"struct tokio::sync::oneshot::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::oneshot::Sender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/oneshot/struct.Receiver.html\" title=\"struct tokio::sync::oneshot::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::oneshot::Receiver"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio/sync/enum.TryAcquireError.html\" title=\"enum tokio::sync::TryAcquireError\">TryAcquireError</a>","synthetic":true,"types":["tokio::sync::batch_semaphore::TryAcquireError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/sync/struct.AcquireError.html\" title=\"struct tokio::sync::AcquireError\">AcquireError</a>","synthetic":true,"types":["tokio::sync::batch_semaphore::AcquireError"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/sync/struct.Semaphore.html\" title=\"struct tokio::sync::Semaphore\">Semaphore</a>","synthetic":true,"types":["tokio::sync::semaphore::Semaphore"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/struct.SemaphorePermit.html\" title=\"struct tokio::sync::SemaphorePermit\">SemaphorePermit</a>&lt;'a&gt;","synthetic":true,"types":["tokio::sync::semaphore::SemaphorePermit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/sync/struct.OwnedSemaphorePermit.html\" title=\"struct tokio::sync::OwnedSemaphorePermit\">OwnedSemaphorePermit</a>","synthetic":true,"types":["tokio::sync::semaphore::OwnedSemaphorePermit"]},{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, U:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/struct.OwnedRwLockReadGuard.html\" title=\"struct tokio::sync::OwnedRwLockReadGuard\">OwnedRwLockReadGuard</a>&lt;T, U&gt;","synthetic":true,"types":["tokio::sync::rwlock::owned_read_guard::OwnedRwLockReadGuard"]},{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/struct.OwnedRwLockWriteGuard.html\" title=\"struct tokio::sync::OwnedRwLockWriteGuard\">OwnedRwLockWriteGuard</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::rwlock::owned_write_guard::OwnedRwLockWriteGuard"]},{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, U:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/struct.OwnedRwLockMappedWriteGuard.html\" title=\"struct tokio::sync::OwnedRwLockMappedWriteGuard\">OwnedRwLockMappedWriteGuard</a>&lt;T, U&gt;","synthetic":true,"types":["tokio::sync::rwlock::owned_write_guard_mapped::OwnedRwLockMappedWriteGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/struct.RwLockReadGuard.html\" title=\"struct tokio::sync::RwLockReadGuard\">RwLockReadGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio::sync::rwlock::read_guard::RwLockReadGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/struct.RwLockWriteGuard.html\" title=\"struct tokio::sync::RwLockWriteGuard\">RwLockWriteGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio::sync::rwlock::write_guard::RwLockWriteGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/struct.RwLockMappedWriteGuard.html\" title=\"struct tokio::sync::RwLockMappedWriteGuard\">RwLockMappedWriteGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio::sync::rwlock::write_guard_mapped::RwLockMappedWriteGuard"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"tokio/sync/struct.RwLock.html\" title=\"struct tokio::sync::RwLock\">RwLock</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::rwlock::RwLock"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"tokio/sync/struct.OnceCell.html\" title=\"struct tokio::sync::OnceCell\">OnceCell</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::once_cell::OnceCell"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"tokio/sync/enum.SetError.html\" title=\"enum tokio::sync::SetError\">SetError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::sync::once_cell::SetError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/watch/error/struct.SendError.html\" title=\"struct tokio::sync::watch::error::SendError\">SendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::sync::watch::error::SendError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/sync/watch/error/struct.RecvError.html\" title=\"struct tokio::sync::watch::error::RecvError\">RecvError</a>","synthetic":true,"types":["tokio::sync::watch::error::RecvError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/watch/struct.Receiver.html\" title=\"struct tokio::sync::watch::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::watch::Receiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/watch/struct.Sender.html\" title=\"struct tokio::sync::watch::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::watch::Sender"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/watch/struct.Ref.html\" title=\"struct tokio::sync::watch::Ref\">Ref</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio::sync::watch::Ref"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/task/struct.LocalSet.html\" title=\"struct tokio::task::LocalSet\">LocalSet</a>","synthetic":true,"types":["tokio::task::local::LocalSet"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/task/struct.LocalKey.html\" title=\"struct tokio::task::LocalKey\">LocalKey</a>&lt;T&gt;","synthetic":true,"types":["tokio::task::task_local::LocalKey"]},{"text":"impl&lt;T, F&gt; Freeze for <a class=\"struct\" href=\"tokio/task/futures/struct.TaskLocalFuture.html\" title=\"struct tokio::task::futures::TaskLocalFuture\">TaskLocalFuture</a>&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::task::task_local::TaskLocalFuture"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"tokio/task/struct.Unconstrained.html\" title=\"struct tokio::task::Unconstrained\">Unconstrained</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::task::unconstrained::Unconstrained"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/time/struct.Sleep.html\" title=\"struct tokio::time::Sleep\">Sleep</a>","synthetic":true,"types":["tokio::time::driver::sleep::Sleep"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/time/error/struct.Error.html\" title=\"struct tokio::time::error::Error\">Error</a>","synthetic":true,"types":["tokio::time::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/time/error/struct.Elapsed.html\" title=\"struct tokio::time::error::Elapsed\">Elapsed</a>","synthetic":true,"types":["tokio::time::error::Elapsed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/time/struct.Instant.html\" title=\"struct tokio::time::Instant\">Instant</a>","synthetic":true,"types":["tokio::time::instant::Instant"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio/time/enum.MissedTickBehavior.html\" title=\"enum tokio::time::MissedTickBehavior\">MissedTickBehavior</a>","synthetic":true,"types":["tokio::time::interval::MissedTickBehavior"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/time/struct.Interval.html\" title=\"struct tokio::time::Interval\">Interval</a>","synthetic":true,"types":["tokio::time::interval::Interval"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"tokio/time/struct.Timeout.html\" title=\"struct tokio::time::Timeout\">Timeout</a>&lt;T&gt;","synthetic":true,"types":["tokio::time::timeout::Timeout"]}];
implementors["tokio_native_tls"] = [{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"tokio_native_tls/struct.AllowStd.html\" title=\"struct tokio_native_tls::AllowStd\">AllowStd</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_native_tls::AllowStd"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"tokio_native_tls/struct.TlsStream.html\" title=\"struct tokio_native_tls::TlsStream\">TlsStream</a>&lt;S&gt;","synthetic":true,"types":["tokio_native_tls::TlsStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_native_tls/struct.TlsConnector.html\" title=\"struct tokio_native_tls::TlsConnector\">TlsConnector</a>","synthetic":true,"types":["tokio_native_tls::TlsConnector"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_native_tls/struct.TlsAcceptor.html\" title=\"struct tokio_native_tls::TlsAcceptor\">TlsAcceptor</a>","synthetic":true,"types":["tokio_native_tls::TlsAcceptor"]}];
implementors["tokio_stream"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_stream/wrappers/struct.ReceiverStream.html\" title=\"struct tokio_stream::wrappers::ReceiverStream\">ReceiverStream</a>&lt;T&gt;","synthetic":true,"types":["tokio_stream::wrappers::mpsc_bounded::ReceiverStream"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_stream/wrappers/struct.UnboundedReceiverStream.html\" title=\"struct tokio_stream::wrappers::UnboundedReceiverStream\">UnboundedReceiverStream</a>&lt;T&gt;","synthetic":true,"types":["tokio_stream::wrappers::mpsc_unbounded::UnboundedReceiverStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_stream/wrappers/struct.IntervalStream.html\" title=\"struct tokio_stream::wrappers::IntervalStream\">IntervalStream</a>","synthetic":true,"types":["tokio_stream::wrappers::interval::IntervalStream"]},{"text":"impl&lt;S&gt; !Freeze for <a class=\"struct\" href=\"tokio_stream/struct.Timeout.html\" title=\"struct tokio_stream::Timeout\">Timeout</a>&lt;S&gt;","synthetic":true,"types":["tokio_stream::stream_ext::timeout::Timeout"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_stream/struct.Elapsed.html\" title=\"struct tokio_stream::Elapsed\">Elapsed</a>","synthetic":true,"types":["tokio_stream::stream_ext::timeout::Elapsed"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_stream/struct.Empty.html\" title=\"struct tokio_stream::Empty\">Empty</a>&lt;T&gt;","synthetic":true,"types":["tokio_stream::empty::Empty"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"tokio_stream/struct.Iter.html\" title=\"struct tokio_stream::Iter\">Iter</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_stream::iter::Iter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_stream/struct.Once.html\" title=\"struct tokio_stream::Once\">Once</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_stream::once::Once"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_stream/struct.Pending.html\" title=\"struct tokio_stream::Pending\">Pending</a>&lt;T&gt;","synthetic":true,"types":["tokio_stream::pending::Pending"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"tokio_stream/struct.StreamMap.html\" title=\"struct tokio_stream::StreamMap\">StreamMap</a>&lt;K, V&gt;","synthetic":true,"types":["tokio_stream::stream_map::StreamMap"]}];
implementors["tokio_tungstenite"] = [{"text":"impl&lt;S&gt; Freeze for <a class=\"enum\" href=\"tokio_tungstenite/enum.MaybeTlsStream.html\" title=\"enum tokio_tungstenite::MaybeTlsStream\">MaybeTlsStream</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_tungstenite::stream::MaybeTlsStream"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"tokio_tungstenite/struct.WebSocketStream.html\" title=\"struct tokio_tungstenite::WebSocketStream\">WebSocketStream</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_tungstenite::WebSocketStream"]}];
implementors["tokio_util"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_util/codec/struct.BytesCodec.html\" title=\"struct tokio_util::codec::BytesCodec\">BytesCodec</a>","synthetic":true,"types":["tokio_util::codec::bytes_codec::BytesCodec"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"tokio_util/codec/struct.Framed.html\" title=\"struct tokio_util::codec::Framed\">Framed</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_util::codec::framed::Framed"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"tokio_util/codec/struct.FramedParts.html\" title=\"struct tokio_util::codec::FramedParts\">FramedParts</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_util::codec::framed::FramedParts"]},{"text":"impl&lt;T, D&gt; Freeze for <a class=\"struct\" href=\"tokio_util/codec/struct.FramedRead.html\" title=\"struct tokio_util::codec::FramedRead\">FramedRead</a>&lt;T, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_util::codec::framed_read::FramedRead"]},{"text":"impl&lt;T, E&gt; Freeze for <a class=\"struct\" href=\"tokio_util/codec/struct.FramedWrite.html\" title=\"struct tokio_util::codec::FramedWrite\">FramedWrite</a>&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_util::codec::framed_write::FramedWrite"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_util/codec/length_delimited/struct.Builder.html\" title=\"struct tokio_util::codec::length_delimited::Builder\">Builder</a>","synthetic":true,"types":["tokio_util::codec::length_delimited::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_util/codec/length_delimited/struct.LengthDelimitedCodecError.html\" title=\"struct tokio_util::codec::length_delimited::LengthDelimitedCodecError\">LengthDelimitedCodecError</a>","synthetic":true,"types":["tokio_util::codec::length_delimited::LengthDelimitedCodecError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_util/codec/length_delimited/struct.LengthDelimitedCodec.html\" title=\"struct tokio_util::codec::length_delimited::LengthDelimitedCodec\">LengthDelimitedCodec</a>","synthetic":true,"types":["tokio_util::codec::length_delimited::LengthDelimitedCodec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_util/codec/struct.LinesCodec.html\" title=\"struct tokio_util::codec::LinesCodec\">LinesCodec</a>","synthetic":true,"types":["tokio_util::codec::lines_codec::LinesCodec"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio_util/codec/enum.LinesCodecError.html\" title=\"enum tokio_util::codec::LinesCodecError\">LinesCodecError</a>","synthetic":true,"types":["tokio_util::codec::lines_codec::LinesCodecError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_util/codec/struct.AnyDelimiterCodec.html\" title=\"struct tokio_util::codec::AnyDelimiterCodec\">AnyDelimiterCodec</a>","synthetic":true,"types":["tokio_util::codec::any_delimiter_codec::AnyDelimiterCodec"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio_util/codec/enum.AnyDelimiterCodecError.html\" title=\"enum tokio_util::codec::AnyDelimiterCodecError\">AnyDelimiterCodecError</a>","synthetic":true,"types":["tokio_util::codec::any_delimiter_codec::AnyDelimiterCodecError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_util/sync/struct.DropGuard.html\" title=\"struct tokio_util::sync::DropGuard\">DropGuard</a>","synthetic":true,"types":["tokio_util::sync::cancellation_token::guard::DropGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_util/sync/struct.CancellationToken.html\" title=\"struct tokio_util::sync::CancellationToken\">CancellationToken</a>","synthetic":true,"types":["tokio_util::sync::cancellation_token::CancellationToken"]},{"text":"impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"tokio_util/sync/struct.WaitForCancellationFuture.html\" title=\"struct tokio_util::sync::WaitForCancellationFuture\">WaitForCancellationFuture</a>&lt;'a&gt;","synthetic":true,"types":["tokio_util::sync::cancellation_token::WaitForCancellationFuture"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_util/sync/struct.PollSendError.html\" title=\"struct tokio_util::sync::PollSendError\">PollSendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_util::sync::mpsc::PollSendError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_util/sync/struct.PollSender.html\" title=\"struct tokio_util::sync::PollSender\">PollSender</a>&lt;T&gt;","synthetic":true,"types":["tokio_util::sync::mpsc::PollSender"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_util/sync/struct.PollSemaphore.html\" title=\"struct tokio_util::sync::PollSemaphore\">PollSemaphore</a>","synthetic":true,"types":["tokio_util::sync::poll_semaphore::PollSemaphore"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"tokio_util/sync/struct.ReusableBoxFuture.html\" title=\"struct tokio_util::sync::ReusableBoxFuture\">ReusableBoxFuture</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio_util::sync::reusable_box::ReusableBoxFuture"]},{"text":"impl&lt;L, R&gt; Freeze for <a class=\"enum\" href=\"tokio_util/either/enum.Either.html\" title=\"enum tokio_util::either::Either\">Either</a>&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_util::either::Either"]}];
implementors["toml"] = [{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.Map.html\" title=\"struct toml::map::Map\">Map</a>&lt;K, V&gt;","synthetic":true,"types":["toml::map::Map"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"toml/map/enum.Entry.html\" title=\"enum toml::map::Entry\">Entry</a>&lt;'a&gt;","synthetic":true,"types":["toml::map::Entry"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.VacantEntry.html\" title=\"struct toml::map::VacantEntry\">VacantEntry</a>&lt;'a&gt;","synthetic":true,"types":["toml::map::VacantEntry"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.OccupiedEntry.html\" title=\"struct toml::map::OccupiedEntry\">OccupiedEntry</a>&lt;'a&gt;","synthetic":true,"types":["toml::map::OccupiedEntry"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.Iter.html\" title=\"struct toml::map::Iter\">Iter</a>&lt;'a&gt;","synthetic":true,"types":["toml::map::Iter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.IterMut.html\" title=\"struct toml::map::IterMut\">IterMut</a>&lt;'a&gt;","synthetic":true,"types":["toml::map::IterMut"]},{"text":"impl Freeze for <a class=\"struct\" href=\"toml/map/struct.IntoIter.html\" title=\"struct toml::map::IntoIter\">IntoIter</a>","synthetic":true,"types":["toml::map::IntoIter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.Keys.html\" title=\"struct toml::map::Keys\">Keys</a>&lt;'a&gt;","synthetic":true,"types":["toml::map::Keys"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.Values.html\" title=\"struct toml::map::Values\">Values</a>&lt;'a&gt;","synthetic":true,"types":["toml::map::Values"]},{"text":"impl Freeze for <a class=\"struct\" href=\"toml/value/struct.Date.html\" title=\"struct toml::value::Date\">Date</a>","synthetic":true,"types":["toml::datetime::Date"]},{"text":"impl Freeze for <a class=\"struct\" href=\"toml/value/struct.Datetime.html\" title=\"struct toml::value::Datetime\">Datetime</a>","synthetic":true,"types":["toml::datetime::Datetime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"toml/value/struct.DatetimeParseError.html\" title=\"struct toml::value::DatetimeParseError\">DatetimeParseError</a>","synthetic":true,"types":["toml::datetime::DatetimeParseError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"toml/value/enum.Offset.html\" title=\"enum toml::value::Offset\">Offset</a>","synthetic":true,"types":["toml::datetime::Offset"]},{"text":"impl Freeze for <a class=\"struct\" href=\"toml/value/struct.Time.html\" title=\"struct toml::value::Time\">Time</a>","synthetic":true,"types":["toml::datetime::Time"]},{"text":"impl Freeze for <a class=\"enum\" href=\"toml/value/enum.Value.html\" title=\"enum toml::value::Value\">Value</a>","synthetic":true,"types":["toml::value::Value"]},{"text":"impl Freeze for <a class=\"enum\" href=\"toml/ser/enum.Error.html\" title=\"enum toml::ser::Error\">Error</a>","synthetic":true,"types":["toml::ser::Error"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/ser/struct.Serializer.html\" title=\"struct toml::ser::Serializer\">Serializer</a>&lt;'a&gt;","synthetic":true,"types":["toml::ser::Serializer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"toml/de/struct.Error.html\" title=\"struct toml::de::Error\">Error</a>","synthetic":true,"types":["toml::de::Error"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/de/struct.Deserializer.html\" title=\"struct toml::de::Deserializer\">Deserializer</a>&lt;'a&gt;","synthetic":true,"types":["toml::de::Deserializer"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"toml/struct.Spanned.html\" title=\"struct toml::Spanned\">Spanned</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["toml::spanned::Spanned"]}];
implementors["tracing"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tracing/instrument/struct.WithDispatch.html\" title=\"struct tracing::instrument::WithDispatch\">WithDispatch</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing::instrument::WithDispatch"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tracing/instrument/struct.Instrumented.html\" title=\"struct tracing::instrument::Instrumented\">Instrumented</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing::instrument::Instrumented"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing/struct.Span.html\" title=\"struct tracing::Span\">Span</a>","synthetic":true,"types":["tracing::span::Span"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tracing/span/struct.Entered.html\" title=\"struct tracing::span::Entered\">Entered</a>&lt;'a&gt;","synthetic":true,"types":["tracing::span::Entered"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing/span/struct.EnteredSpan.html\" title=\"struct tracing::span::EnteredSpan\">EnteredSpan</a>","synthetic":true,"types":["tracing::span::EnteredSpan"]}];
implementors["tracing_core"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/callsite/struct.Identifier.html\" title=\"struct tracing_core::callsite::Identifier\">Identifier</a>","synthetic":true,"types":["tracing_core::callsite::Identifier"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tracing_core/callsite/struct.DefaultCallsite.html\" title=\"struct tracing_core::callsite::DefaultCallsite\">DefaultCallsite</a>","synthetic":true,"types":["tracing_core::callsite::DefaultCallsite"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/struct.Dispatch.html\" title=\"struct tracing_core::Dispatch\">Dispatch</a>","synthetic":true,"types":["tracing_core::dispatcher::Dispatch"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/dispatcher/struct.DefaultGuard.html\" title=\"struct tracing_core::dispatcher::DefaultGuard\">DefaultGuard</a>","synthetic":true,"types":["tracing_core::dispatcher::DefaultGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/dispatcher/struct.SetGlobalDefaultError.html\" title=\"struct tracing_core::dispatcher::SetGlobalDefaultError\">SetGlobalDefaultError</a>","synthetic":true,"types":["tracing_core::dispatcher::SetGlobalDefaultError"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tracing_core/struct.Event.html\" title=\"struct tracing_core::Event\">Event</a>&lt;'a&gt;","synthetic":true,"types":["tracing_core::event::Event"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/struct.Field.html\" title=\"struct tracing_core::Field\">Field</a>","synthetic":true,"types":["tracing_core::field::Field"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/field/struct.Empty.html\" title=\"struct tracing_core::field::Empty\">Empty</a>","synthetic":true,"types":["tracing_core::field::Empty"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/field/struct.FieldSet.html\" title=\"struct tracing_core::field::FieldSet\">FieldSet</a>","synthetic":true,"types":["tracing_core::field::FieldSet"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tracing_core/field/struct.ValueSet.html\" title=\"struct tracing_core::field::ValueSet\">ValueSet</a>&lt;'a&gt;","synthetic":true,"types":["tracing_core::field::ValueSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/field/struct.Iter.html\" title=\"struct tracing_core::field::Iter\">Iter</a>","synthetic":true,"types":["tracing_core::field::Iter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tracing_core/field/struct.DisplayValue.html\" title=\"struct tracing_core::field::DisplayValue\">DisplayValue</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing_core::field::DisplayValue"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tracing_core/field/struct.DebugValue.html\" title=\"struct tracing_core::field::DebugValue\">DebugValue</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing_core::field::DebugValue"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tracing_core/struct.Metadata.html\" title=\"struct tracing_core::Metadata\">Metadata</a>&lt;'a&gt;","synthetic":true,"types":["tracing_core::metadata::Metadata"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/metadata/struct.Kind.html\" title=\"struct tracing_core::metadata::Kind\">Kind</a>","synthetic":true,"types":["tracing_core::metadata::Kind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/struct.Level.html\" title=\"struct tracing_core::Level\">Level</a>","synthetic":true,"types":["tracing_core::metadata::Level"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/struct.LevelFilter.html\" title=\"struct tracing_core::LevelFilter\">LevelFilter</a>","synthetic":true,"types":["tracing_core::metadata::LevelFilter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/metadata/struct.ParseLevelFilterError.html\" title=\"struct tracing_core::metadata::ParseLevelFilterError\">ParseLevelFilterError</a>","synthetic":true,"types":["tracing_core::metadata::ParseLevelFilterError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/metadata/struct.ParseLevelError.html\" title=\"struct tracing_core::metadata::ParseLevelError\">ParseLevelError</a>","synthetic":true,"types":["tracing_core::metadata::ParseLevelError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>","synthetic":true,"types":["tracing_core::span::Id"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tracing_core/span/struct.Attributes.html\" title=\"struct tracing_core::span::Attributes\">Attributes</a>&lt;'a&gt;","synthetic":true,"types":["tracing_core::span::Attributes"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tracing_core/span/struct.Record.html\" title=\"struct tracing_core::span::Record\">Record</a>&lt;'a&gt;","synthetic":true,"types":["tracing_core::span::Record"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/span/struct.Current.html\" title=\"struct tracing_core::span::Current\">Current</a>","synthetic":true,"types":["tracing_core::span::Current"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/subscriber/struct.Interest.html\" title=\"struct tracing_core::subscriber::Interest\">Interest</a>","synthetic":true,"types":["tracing_core::subscriber::Interest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/subscriber/struct.NoSubscriber.html\" title=\"struct tracing_core::subscriber::NoSubscriber\">NoSubscriber</a>","synthetic":true,"types":["tracing_core::subscriber::NoSubscriber"]}];
implementors["tracing_log"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_log/struct.LogTracer.html\" title=\"struct tracing_log::LogTracer\">LogTracer</a>","synthetic":true,"types":["tracing_log::log_tracer::LogTracer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_log/log_tracer/struct.Builder.html\" title=\"struct tracing_log::log_tracer::Builder\">Builder</a>","synthetic":true,"types":["tracing_log::log_tracer::Builder"]}];
implementors["tracing_subscriber"] = [{"text":"impl&lt;V&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/field/debug/struct.Alt.html\" title=\"struct tracing_subscriber::field::debug::Alt\">Alt</a>&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing_subscriber::field::debug::Alt"]},{"text":"impl&lt;D, V&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/field/delimited/struct.Delimited.html\" title=\"struct tracing_subscriber::field::delimited::Delimited\">Delimited</a>&lt;D, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing_subscriber::field::delimited::Delimited"]},{"text":"impl&lt;D, V&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/field/delimited/struct.VisitDelimited.html\" title=\"struct tracing_subscriber::field::delimited::VisitDelimited\">VisitDelimited</a>&lt;D, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing_subscriber::field::delimited::VisitDelimited"]},{"text":"impl&lt;V&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/field/display/struct.Messages.html\" title=\"struct tracing_subscriber::field::display::Messages\">Messages</a>&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing_subscriber::field::display::Messages"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/filter/struct.FilterFn.html\" title=\"struct tracing_subscriber::filter::FilterFn\">FilterFn</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing_subscriber::filter::filter_fn::FilterFn"]},{"text":"impl&lt;S, F, R&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/filter/struct.DynFilterFn.html\" title=\"struct tracing_subscriber::filter::DynFilterFn\">DynFilterFn</a>&lt;S, F, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing_subscriber::filter::filter_fn::DynFilterFn"]},{"text":"impl&lt;A, B, S&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/filter/combinator/struct.And.html\" title=\"struct tracing_subscriber::filter::combinator::And\">And</a>&lt;A, B, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing_subscriber::filter::layer_filters::combinator::And"]},{"text":"impl&lt;A, B, S&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/filter/combinator/struct.Or.html\" title=\"struct tracing_subscriber::filter::combinator::Or\">Or</a>&lt;A, B, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing_subscriber::filter::layer_filters::combinator::Or"]},{"text":"impl&lt;A, S&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/filter/combinator/struct.Not.html\" title=\"struct tracing_subscriber::filter::combinator::Not\">Not</a>&lt;A, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing_subscriber::filter::layer_filters::combinator::Not"]},{"text":"impl&lt;L, F, S&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/filter/struct.Filtered.html\" title=\"struct tracing_subscriber::filter::Filtered\">Filtered</a>&lt;L, F, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing_subscriber::filter::layer_filters::Filtered"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_subscriber/filter/struct.FilterId.html\" title=\"struct tracing_subscriber::filter::FilterId\">FilterId</a>","synthetic":true,"types":["tracing_subscriber::filter::layer_filters::FilterId"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_subscriber/filter/targets/struct.Targets.html\" title=\"struct tracing_subscriber::filter::targets::Targets\">Targets</a>","synthetic":true,"types":["tracing_subscriber::filter::targets::Targets"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_subscriber/filter/targets/struct.IntoIter.html\" title=\"struct tracing_subscriber::filter::targets::IntoIter\">IntoIter</a>","synthetic":true,"types":["tracing_subscriber::filter::targets::IntoIter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/filter/targets/struct.Iter.html\" title=\"struct tracing_subscriber::filter::targets::Iter\">Iter</a>&lt;'a&gt;","synthetic":true,"types":["tracing_subscriber::filter::targets::Iter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_subscriber/filter/struct.ParseError.html\" title=\"struct tracing_subscriber::filter::ParseError\">ParseError</a>","synthetic":true,"types":["tracing_subscriber::filter::directive::ParseError"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/registry/struct.Extensions.html\" title=\"struct tracing_subscriber::registry::Extensions\">Extensions</a>&lt;'a&gt;","synthetic":true,"types":["tracing_subscriber::registry::extensions::Extensions"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/registry/struct.ExtensionsMut.html\" title=\"struct tracing_subscriber::registry::ExtensionsMut\">ExtensionsMut</a>&lt;'a&gt;","synthetic":true,"types":["tracing_subscriber::registry::extensions::ExtensionsMut"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tracing_subscriber/registry/struct.Registry.html\" title=\"struct tracing_subscriber::registry::Registry\">Registry</a>","synthetic":true,"types":["tracing_subscriber::registry::sharded::Registry"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/registry/struct.Data.html\" title=\"struct tracing_subscriber::registry::Data\">Data</a>&lt;'a&gt;","synthetic":true,"types":["tracing_subscriber::registry::sharded::Data"]},{"text":"impl&lt;'a, R&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/registry/struct.SpanRef.html\" title=\"struct tracing_subscriber::registry::SpanRef\">SpanRef</a>&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"tracing_subscriber/registry/trait.LookupSpan.html\" title=\"trait tracing_subscriber::registry::LookupSpan\">LookupSpan</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"tracing_subscriber/registry/trait.LookupSpan.html#associatedtype.Data\" title=\"type tracing_subscriber::registry::LookupSpan::Data\">Data</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing_subscriber::registry::SpanRef"]},{"text":"impl&lt;'a, R&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/registry/struct.Scope.html\" title=\"struct tracing_subscriber::registry::Scope\">Scope</a>&lt;'a, R&gt;","synthetic":true,"types":["tracing_subscriber::registry::Scope"]},{"text":"impl&lt;'a, R&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/registry/struct.ScopeFromRoot.html\" title=\"struct tracing_subscriber::registry::ScopeFromRoot\">ScopeFromRoot</a>&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"tracing_subscriber/registry/trait.LookupSpan.html\" title=\"trait tracing_subscriber::registry::LookupSpan\">LookupSpan</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"tracing_subscriber/registry/trait.LookupSpan.html#associatedtype.Data\" title=\"type tracing_subscriber::registry::LookupSpan::Data\">Data</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing_subscriber::registry::ScopeFromRoot"]},{"text":"impl&lt;'a, S&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/layer/struct.Context.html\" title=\"struct tracing_subscriber::layer::Context\">Context</a>&lt;'a, S&gt;","synthetic":true,"types":["tracing_subscriber::layer::context::Context"]},{"text":"impl&lt;L, I, S&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/layer/struct.Layered.html\" title=\"struct tracing_subscriber::layer::Layered\">Layered</a>&lt;L, I, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing_subscriber::layer::layered::Layered"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_subscriber/layer/struct.Identity.html\" title=\"struct tracing_subscriber::layer::Identity\">Identity</a>","synthetic":true,"types":["tracing_subscriber::layer::Identity"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_subscriber/util/struct.TryInitError.html\" title=\"struct tracing_subscriber::util::TryInitError\">TryInitError</a>","synthetic":true,"types":["tracing_subscriber::util::TryInitError"]},{"text":"impl&lt;L, S&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/reload/struct.Layer.html\" title=\"struct tracing_subscriber::reload::Layer\">Layer</a>&lt;L, S&gt;","synthetic":true,"types":["tracing_subscriber::reload::Layer"]},{"text":"impl&lt;L, S&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/reload/struct.Handle.html\" title=\"struct tracing_subscriber::reload::Handle\">Handle</a>&lt;L, S&gt;","synthetic":true,"types":["tracing_subscriber::reload::Handle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_subscriber/reload/struct.Error.html\" title=\"struct tracing_subscriber::reload::Error\">Error</a>","synthetic":true,"types":["tracing_subscriber::reload::Error"]},{"text":"impl&lt;S, N, E, W&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/fmt/struct.Layer.html\" title=\"struct tracing_subscriber::fmt::Layer\">Layer</a>&lt;S, N, E, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing_subscriber::fmt::fmt_layer::Layer"]},{"text":"impl&lt;E:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/fmt/struct.FormattedFields.html\" title=\"struct tracing_subscriber::fmt::FormattedFields\">FormattedFields</a>&lt;E&gt;","synthetic":true,"types":["tracing_subscriber::fmt::fmt_layer::FormattedFields"]},{"text":"impl&lt;'a, S, N&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/fmt/struct.FmtContext.html\" title=\"struct tracing_subscriber::fmt::FmtContext\">FmtContext</a>&lt;'a, S, N&gt;","synthetic":true,"types":["tracing_subscriber::fmt::fmt_layer::FmtContext"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_subscriber/fmt/format/struct.Pretty.html\" title=\"struct tracing_subscriber::fmt::format::Pretty\">Pretty</a>","synthetic":true,"types":["tracing_subscriber::fmt::format::pretty::Pretty"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/fmt/format/struct.PrettyVisitor.html\" title=\"struct tracing_subscriber::fmt::format::PrettyVisitor\">PrettyVisitor</a>&lt;'a&gt;","synthetic":true,"types":["tracing_subscriber::fmt::format::pretty::PrettyVisitor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_subscriber/fmt/format/struct.PrettyFields.html\" title=\"struct tracing_subscriber::fmt::format::PrettyFields\">PrettyFields</a>","synthetic":true,"types":["tracing_subscriber::fmt::format::pretty::PrettyFields"]},{"text":"impl&lt;'writer&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/fmt/format/struct.Writer.html\" title=\"struct tracing_subscriber::fmt::format::Writer\">Writer</a>&lt;'writer&gt;","synthetic":true,"types":["tracing_subscriber::fmt::format::Writer"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/fmt/format/struct.FieldFn.html\" title=\"struct tracing_subscriber::fmt::format::FieldFn\">FieldFn</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing_subscriber::fmt::format::FieldFn"]},{"text":"impl&lt;'a, F&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/fmt/format/struct.FieldFnVisitor.html\" title=\"struct tracing_subscriber::fmt::format::FieldFnVisitor\">FieldFnVisitor</a>&lt;'a, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing_subscriber::fmt::format::FieldFnVisitor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_subscriber/fmt/format/struct.Compact.html\" title=\"struct tracing_subscriber::fmt::format::Compact\">Compact</a>","synthetic":true,"types":["tracing_subscriber::fmt::format::Compact"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_subscriber/fmt/format/struct.Full.html\" title=\"struct tracing_subscriber::fmt::format::Full\">Full</a>","synthetic":true,"types":["tracing_subscriber::fmt::format::Full"]},{"text":"impl&lt;F, T&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/fmt/format/struct.Format.html\" title=\"struct tracing_subscriber::fmt::format::Format\">Format</a>&lt;F, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing_subscriber::fmt::format::Format"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_subscriber/fmt/format/struct.DefaultFields.html\" title=\"struct tracing_subscriber::fmt::format::DefaultFields\">DefaultFields</a>","synthetic":true,"types":["tracing_subscriber::fmt::format::DefaultFields"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/fmt/format/struct.DefaultVisitor.html\" title=\"struct tracing_subscriber::fmt::format::DefaultVisitor\">DefaultVisitor</a>&lt;'a&gt;","synthetic":true,"types":["tracing_subscriber::fmt::format::DefaultVisitor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_subscriber/fmt/format/struct.FmtSpan.html\" title=\"struct tracing_subscriber::fmt::format::FmtSpan\">FmtSpan</a>","synthetic":true,"types":["tracing_subscriber::fmt::format::FmtSpan"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_subscriber/fmt/time/struct.SystemTime.html\" title=\"struct tracing_subscriber::fmt::time::SystemTime\">SystemTime</a>","synthetic":true,"types":["tracing_subscriber::fmt::time::SystemTime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_subscriber/fmt/time/struct.Uptime.html\" title=\"struct tracing_subscriber::fmt::time::Uptime\">Uptime</a>","synthetic":true,"types":["tracing_subscriber::fmt::time::Uptime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_subscriber/fmt/struct.TestWriter.html\" title=\"struct tracing_subscriber::fmt::TestWriter\">TestWriter</a>","synthetic":true,"types":["tracing_subscriber::fmt::writer::TestWriter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_subscriber/fmt/writer/struct.BoxMakeWriter.html\" title=\"struct tracing_subscriber::fmt::writer::BoxMakeWriter\">BoxMakeWriter</a>","synthetic":true,"types":["tracing_subscriber::fmt::writer::BoxMakeWriter"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"enum\" href=\"tracing_subscriber/fmt/writer/enum.EitherWriter.html\" title=\"enum tracing_subscriber::fmt::writer::EitherWriter\">EitherWriter</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing_subscriber::fmt::writer::EitherWriter"]},{"text":"impl&lt;M&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/fmt/writer/struct.WithMaxLevel.html\" title=\"struct tracing_subscriber::fmt::writer::WithMaxLevel\">WithMaxLevel</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing_subscriber::fmt::writer::WithMaxLevel"]},{"text":"impl&lt;M&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/fmt/writer/struct.WithMinLevel.html\" title=\"struct tracing_subscriber::fmt::writer::WithMinLevel\">WithMinLevel</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing_subscriber::fmt::writer::WithMinLevel"]},{"text":"impl&lt;M, F&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/fmt/writer/struct.WithFilter.html\" title=\"struct tracing_subscriber::fmt::writer::WithFilter\">WithFilter</a>&lt;M, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing_subscriber::fmt::writer::WithFilter"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/fmt/writer/struct.OrElse.html\" title=\"struct tracing_subscriber::fmt::writer::OrElse\">OrElse</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing_subscriber::fmt::writer::OrElse"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/fmt/writer/struct.Tee.html\" title=\"struct tracing_subscriber::fmt::writer::Tee\">Tee</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing_subscriber::fmt::writer::Tee"]},{"text":"impl&lt;'a, W&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/fmt/writer/struct.MutexGuardWriter.html\" title=\"struct tracing_subscriber::fmt::writer::MutexGuardWriter\">MutexGuardWriter</a>&lt;'a, W&gt;","synthetic":true,"types":["tracing_subscriber::fmt::writer::MutexGuardWriter"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/fmt/writer/struct.ArcWriter.html\" title=\"struct tracing_subscriber::fmt::writer::ArcWriter\">ArcWriter</a>&lt;W&gt;","synthetic":true,"types":["tracing_subscriber::fmt::writer::ArcWriter"]},{"text":"impl&lt;N&nbsp;=&nbsp;<a class=\"struct\" href=\"tracing_subscriber/fmt/format/struct.DefaultFields.html\" title=\"struct tracing_subscriber::fmt::format::DefaultFields\">DefaultFields</a>, E&nbsp;=&nbsp;<a class=\"struct\" href=\"tracing_subscriber/fmt/format/struct.Format.html\" title=\"struct tracing_subscriber::fmt::format::Format\">Format</a>&lt;<a class=\"struct\" href=\"tracing_subscriber/fmt/format/struct.Full.html\" title=\"struct tracing_subscriber::fmt::format::Full\">Full</a>, <a class=\"struct\" href=\"tracing_subscriber/fmt/time/struct.SystemTime.html\" title=\"struct tracing_subscriber::fmt::time::SystemTime\">SystemTime</a>&gt;, F&nbsp;=&nbsp;<a class=\"struct\" href=\"tracing_subscriber/filter/struct.LevelFilter.html\" title=\"struct tracing_subscriber::filter::LevelFilter\">LevelFilter</a>, W&nbsp;=&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.61.0/std/primitive.fn.html\">fn</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.61.0/std/io/stdio/struct.Stdout.html\" title=\"struct std::io::stdio::Stdout\">Stdout</a>&gt; !Freeze for <a class=\"struct\" href=\"tracing_subscriber/fmt/struct.Subscriber.html\" title=\"struct tracing_subscriber::fmt::Subscriber\">Subscriber</a>&lt;N, E, F, W&gt;","synthetic":true,"types":["tracing_subscriber::fmt::Subscriber"]},{"text":"impl&lt;N, E, F, W&gt; Freeze for <a class=\"struct\" href=\"tracing_subscriber/fmt/struct.SubscriberBuilder.html\" title=\"struct tracing_subscriber::fmt::SubscriberBuilder\">SubscriberBuilder</a>&lt;N, E, F, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing_subscriber::fmt::SubscriberBuilder"]}];
implementors["transaction_builder_generator"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"transaction_builder_generator/cpp/struct.Installer.html\" title=\"struct transaction_builder_generator::cpp::Installer\">Installer</a>","synthetic":true,"types":["transaction_builder_generator::cpp::Installer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"transaction_builder_generator/csharp/struct.Installer.html\" title=\"struct transaction_builder_generator::csharp::Installer\">Installer</a>","synthetic":true,"types":["transaction_builder_generator::csharp::Installer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"transaction_builder_generator/golang/struct.Installer.html\" title=\"struct transaction_builder_generator::golang::Installer\">Installer</a>","synthetic":true,"types":["transaction_builder_generator::golang::Installer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"transaction_builder_generator/java/struct.Installer.html\" title=\"struct transaction_builder_generator::java::Installer\">Installer</a>","synthetic":true,"types":["transaction_builder_generator::java::Installer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"transaction_builder_generator/python3/struct.Installer.html\" title=\"struct transaction_builder_generator::python3::Installer\">Installer</a>","synthetic":true,"types":["transaction_builder_generator::python3::Installer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"transaction_builder_generator/rust/struct.Installer.html\" title=\"struct transaction_builder_generator::rust::Installer\">Installer</a>","synthetic":true,"types":["transaction_builder_generator::rust::Installer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"transaction_builder_generator/swift/struct.Installer.html\" title=\"struct transaction_builder_generator::swift::Installer\">Installer</a>","synthetic":true,"types":["transaction_builder_generator::swift::Installer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"transaction_builder_generator/typescript/struct.Installer.html\" title=\"struct transaction_builder_generator::typescript::Installer\">Installer</a>","synthetic":true,"types":["transaction_builder_generator::typescript::Installer"]}];
implementors["try_lock"] = [{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"try_lock/struct.TryLock.html\" title=\"struct try_lock::TryLock\">TryLock</a>&lt;T&gt;","synthetic":true,"types":["try_lock::TryLock"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"try_lock/struct.Locked.html\" title=\"struct try_lock::Locked\">Locked</a>&lt;'a, T&gt;","synthetic":true,"types":["try_lock::Locked"]}];
implementors["tui"] = [{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"tui/backend/struct.CrosstermBackend.html\" title=\"struct tui::backend::CrosstermBackend\">CrosstermBackend</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["tui::backend::crossterm::CrosstermBackend"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tui/backend/struct.TestBackend.html\" title=\"struct tui::backend::TestBackend\">TestBackend</a>","synthetic":true,"types":["tui::backend::test::TestBackend"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tui/buffer/struct.Cell.html\" title=\"struct tui::buffer::Cell\">Cell</a>","synthetic":true,"types":["tui::buffer::Cell"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tui/buffer/struct.Buffer.html\" title=\"struct tui::buffer::Buffer\">Buffer</a>","synthetic":true,"types":["tui::buffer::Buffer"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tui/layout/enum.Corner.html\" title=\"enum tui::layout::Corner\">Corner</a>","synthetic":true,"types":["tui::layout::Corner"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tui/layout/enum.Direction.html\" title=\"enum tui::layout::Direction\">Direction</a>","synthetic":true,"types":["tui::layout::Direction"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tui/layout/enum.Constraint.html\" title=\"enum tui::layout::Constraint\">Constraint</a>","synthetic":true,"types":["tui::layout::Constraint"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tui/layout/struct.Margin.html\" title=\"struct tui::layout::Margin\">Margin</a>","synthetic":true,"types":["tui::layout::Margin"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tui/layout/enum.Alignment.html\" title=\"enum tui::layout::Alignment\">Alignment</a>","synthetic":true,"types":["tui::layout::Alignment"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tui/layout/struct.Layout.html\" title=\"struct tui::layout::Layout\">Layout</a>","synthetic":true,"types":["tui::layout::Layout"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tui/layout/struct.Rect.html\" title=\"struct tui::layout::Rect\">Rect</a>","synthetic":true,"types":["tui::layout::Rect"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tui/style/enum.Color.html\" title=\"enum tui::style::Color\">Color</a>","synthetic":true,"types":["tui::style::Color"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tui/style/struct.Modifier.html\" title=\"struct tui::style::Modifier\">Modifier</a>","synthetic":true,"types":["tui::style::Modifier"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tui/style/struct.Style.html\" title=\"struct tui::style::Style\">Style</a>","synthetic":true,"types":["tui::style::Style"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tui/symbols/block/struct.Set.html\" title=\"struct tui::symbols::block::Set\">Set</a>","synthetic":true,"types":["tui::symbols::block::Set"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tui/symbols/bar/struct.Set.html\" title=\"struct tui::symbols::bar::Set\">Set</a>","synthetic":true,"types":["tui::symbols::bar::Set"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tui/symbols/line/struct.Set.html\" title=\"struct tui::symbols::line::Set\">Set</a>","synthetic":true,"types":["tui::symbols::line::Set"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tui/symbols/enum.Marker.html\" title=\"enum tui::symbols::Marker\">Marker</a>","synthetic":true,"types":["tui::symbols::Marker"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tui/terminal/struct.Viewport.html\" title=\"struct tui::terminal::Viewport\">Viewport</a>","synthetic":true,"types":["tui::terminal::Viewport"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tui/terminal/struct.TerminalOptions.html\" title=\"struct tui::terminal::TerminalOptions\">TerminalOptions</a>","synthetic":true,"types":["tui::terminal::TerminalOptions"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"tui/terminal/struct.Terminal.html\" title=\"struct tui::terminal::Terminal\">Terminal</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["tui::terminal::Terminal"]},{"text":"impl&lt;'a, B&gt; Freeze for <a class=\"struct\" href=\"tui/terminal/struct.Frame.html\" title=\"struct tui::terminal::Frame\">Frame</a>&lt;'a, B&gt;","synthetic":true,"types":["tui::terminal::Frame"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tui/terminal/struct.CompletedFrame.html\" title=\"struct tui::terminal::CompletedFrame\">CompletedFrame</a>&lt;'a&gt;","synthetic":true,"types":["tui::terminal::CompletedFrame"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tui/text/struct.StyledGrapheme.html\" title=\"struct tui::text::StyledGrapheme\">StyledGrapheme</a>&lt;'a&gt;","synthetic":true,"types":["tui::text::StyledGrapheme"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tui/text/struct.Span.html\" title=\"struct tui::text::Span\">Span</a>&lt;'a&gt;","synthetic":true,"types":["tui::text::Span"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tui/text/struct.Spans.html\" title=\"struct tui::text::Spans\">Spans</a>&lt;'a&gt;","synthetic":true,"types":["tui::text::Spans"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tui/text/struct.Text.html\" title=\"struct tui::text::Text\">Text</a>&lt;'a&gt;","synthetic":true,"types":["tui::text::Text"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tui/widgets/struct.BarChart.html\" title=\"struct tui::widgets::BarChart\">BarChart</a>&lt;'a&gt;","synthetic":true,"types":["tui::widgets::barchart::BarChart"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tui/widgets/enum.BorderType.html\" title=\"enum tui::widgets::BorderType\">BorderType</a>","synthetic":true,"types":["tui::widgets::block::BorderType"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tui/widgets/struct.Block.html\" title=\"struct tui::widgets::Block\">Block</a>&lt;'a&gt;","synthetic":true,"types":["tui::widgets::block::Block"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tui/widgets/canvas/struct.Line.html\" title=\"struct tui::widgets::canvas::Line\">Line</a>","synthetic":true,"types":["tui::widgets::canvas::line::Line"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tui/widgets/canvas/enum.MapResolution.html\" title=\"enum tui::widgets::canvas::MapResolution\">MapResolution</a>","synthetic":true,"types":["tui::widgets::canvas::map::MapResolution"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tui/widgets/canvas/struct.Map.html\" title=\"struct tui::widgets::canvas::Map\">Map</a>","synthetic":true,"types":["tui::widgets::canvas::map::Map"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tui/widgets/canvas/struct.Points.html\" title=\"struct tui::widgets::canvas::Points\">Points</a>&lt;'a&gt;","synthetic":true,"types":["tui::widgets::canvas::points::Points"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tui/widgets/canvas/struct.Rectangle.html\" title=\"struct tui::widgets::canvas::Rectangle\">Rectangle</a>","synthetic":true,"types":["tui::widgets::canvas::rectangle::Rectangle"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tui/widgets/canvas/struct.Label.html\" title=\"struct tui::widgets::canvas::Label\">Label</a>&lt;'a&gt;","synthetic":true,"types":["tui::widgets::canvas::Label"]},{"text":"impl&lt;'a, 'b&gt; Freeze for <a class=\"struct\" href=\"tui/widgets/canvas/struct.Painter.html\" title=\"struct tui::widgets::canvas::Painter\">Painter</a>&lt;'a, 'b&gt;","synthetic":true,"types":["tui::widgets::canvas::Painter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tui/widgets/canvas/struct.Context.html\" title=\"struct tui::widgets::canvas::Context\">Context</a>&lt;'a&gt;","synthetic":true,"types":["tui::widgets::canvas::Context"]},{"text":"impl&lt;'a, F&gt; Freeze for <a class=\"struct\" href=\"tui/widgets/canvas/struct.Canvas.html\" title=\"struct tui::widgets::canvas::Canvas\">Canvas</a>&lt;'a, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["tui::widgets::canvas::Canvas"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tui/widgets/struct.Axis.html\" title=\"struct tui::widgets::Axis\">Axis</a>&lt;'a&gt;","synthetic":true,"types":["tui::widgets::chart::Axis"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tui/widgets/enum.GraphType.html\" title=\"enum tui::widgets::GraphType\">GraphType</a>","synthetic":true,"types":["tui::widgets::chart::GraphType"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tui/widgets/struct.Dataset.html\" title=\"struct tui::widgets::Dataset\">Dataset</a>&lt;'a&gt;","synthetic":true,"types":["tui::widgets::chart::Dataset"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tui/widgets/struct.Chart.html\" title=\"struct tui::widgets::Chart\">Chart</a>&lt;'a&gt;","synthetic":true,"types":["tui::widgets::chart::Chart"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tui/widgets/struct.Clear.html\" title=\"struct tui::widgets::Clear\">Clear</a>","synthetic":true,"types":["tui::widgets::clear::Clear"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tui/widgets/struct.Gauge.html\" title=\"struct tui::widgets::Gauge\">Gauge</a>&lt;'a&gt;","synthetic":true,"types":["tui::widgets::gauge::Gauge"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tui/widgets/struct.LineGauge.html\" title=\"struct tui::widgets::LineGauge\">LineGauge</a>&lt;'a&gt;","synthetic":true,"types":["tui::widgets::gauge::LineGauge"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tui/widgets/struct.ListState.html\" title=\"struct tui::widgets::ListState\">ListState</a>","synthetic":true,"types":["tui::widgets::list::ListState"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tui/widgets/struct.ListItem.html\" title=\"struct tui::widgets::ListItem\">ListItem</a>&lt;'a&gt;","synthetic":true,"types":["tui::widgets::list::ListItem"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tui/widgets/struct.List.html\" title=\"struct tui::widgets::List\">List</a>&lt;'a&gt;","synthetic":true,"types":["tui::widgets::list::List"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tui/widgets/struct.Paragraph.html\" title=\"struct tui::widgets::Paragraph\">Paragraph</a>&lt;'a&gt;","synthetic":true,"types":["tui::widgets::paragraph::Paragraph"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tui/widgets/struct.Wrap.html\" title=\"struct tui::widgets::Wrap\">Wrap</a>","synthetic":true,"types":["tui::widgets::paragraph::Wrap"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tui/widgets/struct.Sparkline.html\" title=\"struct tui::widgets::Sparkline\">Sparkline</a>&lt;'a&gt;","synthetic":true,"types":["tui::widgets::sparkline::Sparkline"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tui/widgets/struct.Cell.html\" title=\"struct tui::widgets::Cell\">Cell</a>&lt;'a&gt;","synthetic":true,"types":["tui::widgets::table::Cell"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tui/widgets/struct.Row.html\" title=\"struct tui::widgets::Row\">Row</a>&lt;'a&gt;","synthetic":true,"types":["tui::widgets::table::Row"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tui/widgets/struct.Table.html\" title=\"struct tui::widgets::Table\">Table</a>&lt;'a&gt;","synthetic":true,"types":["tui::widgets::table::Table"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tui/widgets/struct.TableState.html\" title=\"struct tui::widgets::TableState\">TableState</a>","synthetic":true,"types":["tui::widgets::table::TableState"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tui/widgets/struct.Tabs.html\" title=\"struct tui::widgets::Tabs\">Tabs</a>&lt;'a&gt;","synthetic":true,"types":["tui::widgets::tabs::Tabs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tui/widgets/struct.Borders.html\" title=\"struct tui::widgets::Borders\">Borders</a>","synthetic":true,"types":["tui::widgets::Borders"]}];
implementors["tungstenite"] = [{"text":"impl&lt;const CHUNK_SIZE:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.61.0/std/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"tungstenite/buffer/struct.ReadBuffer.html\" title=\"struct tungstenite::buffer::ReadBuffer\">ReadBuffer</a>&lt;CHUNK_SIZE&gt;","synthetic":true,"types":["tungstenite::buffer::ReadBuffer"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tungstenite/error/enum.Error.html\" title=\"enum tungstenite::error::Error\">Error</a>","synthetic":true,"types":["tungstenite::error::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tungstenite/error/enum.CapacityError.html\" title=\"enum tungstenite::error::CapacityError\">CapacityError</a>","synthetic":true,"types":["tungstenite::error::CapacityError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tungstenite/error/enum.ProtocolError.html\" title=\"enum tungstenite::error::ProtocolError\">ProtocolError</a>","synthetic":true,"types":["tungstenite::error::ProtocolError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tungstenite/error/enum.UrlError.html\" title=\"enum tungstenite::error::UrlError\">UrlError</a>","synthetic":true,"types":["tungstenite::error::UrlError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tungstenite/error/enum.TlsError.html\" title=\"enum tungstenite::error::TlsError\">TlsError</a>","synthetic":true,"types":["tungstenite::error::TlsError"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"tungstenite/handshake/client/struct.ClientHandshake.html\" title=\"struct tungstenite::handshake::client::ClientHandshake\">ClientHandshake</a>&lt;S&gt;","synthetic":true,"types":["tungstenite::handshake::client::ClientHandshake"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tungstenite/handshake/server/struct.NoCallback.html\" title=\"struct tungstenite::handshake::server::NoCallback\">NoCallback</a>","synthetic":true,"types":["tungstenite::handshake::server::NoCallback"]},{"text":"impl&lt;S, C&gt; Freeze for <a class=\"struct\" href=\"tungstenite/handshake/server/struct.ServerHandshake.html\" title=\"struct tungstenite::handshake::server::ServerHandshake\">ServerHandshake</a>&lt;S, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,&nbsp;</span>","synthetic":true,"types":["tungstenite::handshake::server::ServerHandshake"]},{"text":"impl&lt;Role&gt; Freeze for <a class=\"struct\" href=\"tungstenite/handshake/struct.MidHandshake.html\" title=\"struct tungstenite::handshake::MidHandshake\">MidHandshake</a>&lt;Role&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Role: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Role as <a class=\"trait\" href=\"tungstenite/handshake/trait.HandshakeRole.html\" title=\"trait tungstenite::handshake::HandshakeRole\">HandshakeRole</a>&gt;::<a class=\"associatedtype\" href=\"tungstenite/handshake/trait.HandshakeRole.html#associatedtype.InternalStream\" title=\"type tungstenite::handshake::HandshakeRole::InternalStream\">InternalStream</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["tungstenite::handshake::MidHandshake"]},{"text":"impl&lt;Role&gt; Freeze for <a class=\"enum\" href=\"tungstenite/handshake/enum.HandshakeError.html\" title=\"enum tungstenite::handshake::HandshakeError\">HandshakeError</a>&lt;Role&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Role: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Role as <a class=\"trait\" href=\"tungstenite/handshake/trait.HandshakeRole.html\" title=\"trait tungstenite::handshake::HandshakeRole\">HandshakeRole</a>&gt;::<a class=\"associatedtype\" href=\"tungstenite/handshake/trait.HandshakeRole.html#associatedtype.InternalStream\" title=\"type tungstenite::handshake::HandshakeRole::InternalStream\">InternalStream</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["tungstenite::handshake::HandshakeError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tungstenite/protocol/frame/coding/enum.OpCode.html\" title=\"enum tungstenite::protocol::frame::coding::OpCode\">OpCode</a>","synthetic":true,"types":["tungstenite::protocol::frame::coding::OpCode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tungstenite/protocol/frame/coding/enum.Data.html\" title=\"enum tungstenite::protocol::frame::coding::Data\">Data</a>","synthetic":true,"types":["tungstenite::protocol::frame::coding::Data"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tungstenite/protocol/frame/coding/enum.Control.html\" title=\"enum tungstenite::protocol::frame::coding::Control\">Control</a>","synthetic":true,"types":["tungstenite::protocol::frame::coding::Control"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tungstenite/protocol/frame/coding/enum.CloseCode.html\" title=\"enum tungstenite::protocol::frame::coding::CloseCode\">CloseCode</a>","synthetic":true,"types":["tungstenite::protocol::frame::coding::CloseCode"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"tungstenite/protocol/frame/struct.CloseFrame.html\" title=\"struct tungstenite::protocol::frame::CloseFrame\">CloseFrame</a>&lt;'t&gt;","synthetic":true,"types":["tungstenite::protocol::frame::frame::CloseFrame"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tungstenite/protocol/frame/struct.FrameHeader.html\" title=\"struct tungstenite::protocol::frame::FrameHeader\">FrameHeader</a>","synthetic":true,"types":["tungstenite::protocol::frame::frame::FrameHeader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tungstenite/protocol/frame/struct.Frame.html\" title=\"struct tungstenite::protocol::frame::Frame\">Frame</a>","synthetic":true,"types":["tungstenite::protocol::frame::frame::Frame"]},{"text":"impl&lt;Stream&gt; Freeze for <a class=\"struct\" href=\"tungstenite/protocol/frame/struct.FrameSocket.html\" title=\"struct tungstenite::protocol::frame::FrameSocket\">FrameSocket</a>&lt;Stream&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Stream: Freeze,&nbsp;</span>","synthetic":true,"types":["tungstenite::protocol::frame::FrameSocket"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tungstenite/protocol/enum.Message.html\" title=\"enum tungstenite::protocol::Message\">Message</a>","synthetic":true,"types":["tungstenite::protocol::message::Message"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tungstenite/protocol/enum.Role.html\" title=\"enum tungstenite::protocol::Role\">Role</a>","synthetic":true,"types":["tungstenite::protocol::Role"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tungstenite/protocol/struct.WebSocketConfig.html\" title=\"struct tungstenite::protocol::WebSocketConfig\">WebSocketConfig</a>","synthetic":true,"types":["tungstenite::protocol::WebSocketConfig"]},{"text":"impl&lt;Stream&gt; Freeze for <a class=\"struct\" href=\"tungstenite/protocol/struct.WebSocket.html\" title=\"struct tungstenite::protocol::WebSocket\">WebSocket</a>&lt;Stream&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Stream: Freeze,&nbsp;</span>","synthetic":true,"types":["tungstenite::protocol::WebSocket"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tungstenite/protocol/struct.WebSocketContext.html\" title=\"struct tungstenite::protocol::WebSocketContext\">WebSocketContext</a>","synthetic":true,"types":["tungstenite::protocol::WebSocketContext"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tungstenite/stream/enum.Mode.html\" title=\"enum tungstenite::stream::Mode\">Mode</a>","synthetic":true,"types":["tungstenite::stream::Mode"]},{"text":"impl&lt;S, T&gt; Freeze for <a class=\"enum\" href=\"tungstenite/stream/enum.Stream.html\" title=\"enum tungstenite::stream::Stream\">Stream</a>&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tungstenite::stream::Stream"]}];
implementors["typed_arena"] = [{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"typed_arena/struct.Arena.html\" title=\"struct typed_arena::Arena\">Arena</a>&lt;T&gt;","synthetic":true,"types":["typed_arena::Arena"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"typed_arena/struct.IterMut.html\" title=\"struct typed_arena::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["typed_arena::IterMut"]}];
implementors["typenum"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>","synthetic":true,"types":["typenum::bit::B0"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>","synthetic":true,"types":["typenum::bit::B1"]},{"text":"impl&lt;U&gt; Freeze for <a class=\"struct\" href=\"typenum/int/struct.PInt.html\" title=\"struct typenum::int::PInt\">PInt</a>&lt;U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["typenum::int::PInt"]},{"text":"impl&lt;U&gt; Freeze for <a class=\"struct\" href=\"typenum/int/struct.NInt.html\" title=\"struct typenum::int::NInt\">NInt</a>&lt;U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["typenum::int::NInt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>","synthetic":true,"types":["typenum::int::Z0"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>","synthetic":true,"types":["typenum::uint::UTerm"]},{"text":"impl&lt;U, B&gt; Freeze for <a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;U, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["typenum::uint::UInt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/array/struct.ATerm.html\" title=\"struct typenum::array::ATerm\">ATerm</a>","synthetic":true,"types":["typenum::array::ATerm"]},{"text":"impl&lt;V, A&gt; Freeze for <a class=\"struct\" href=\"typenum/array/struct.TArr.html\" title=\"struct typenum::array::TArr\">TArr</a>&lt;V, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Freeze,&nbsp;</span>","synthetic":true,"types":["typenum::array::TArr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/struct.Greater.html\" title=\"struct typenum::Greater\">Greater</a>","synthetic":true,"types":["typenum::Greater"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/struct.Less.html\" title=\"struct typenum::Less\">Less</a>","synthetic":true,"types":["typenum::Less"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/struct.Equal.html\" title=\"struct typenum::Equal\">Equal</a>","synthetic":true,"types":["typenum::Equal"]}];
implementors["ucd_trie"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"ucd_trie/enum.Error.html\" title=\"enum ucd_trie::Error\">Error</a>","synthetic":true,"types":["ucd_trie::owned::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ucd_trie/struct.TrieSetOwned.html\" title=\"struct ucd_trie::TrieSetOwned\">TrieSetOwned</a>","synthetic":true,"types":["ucd_trie::owned::TrieSetOwned"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"ucd_trie/struct.TrieSetSlice.html\" title=\"struct ucd_trie::TrieSetSlice\">TrieSetSlice</a>&lt;'a&gt;","synthetic":true,"types":["ucd_trie::TrieSetSlice"]}];
implementors["uncased"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"uncased/struct.UncasedStr.html\" title=\"struct uncased::UncasedStr\">UncasedStr</a>","synthetic":true,"types":["uncased::borrowed::UncasedStr"]}];
implementors["unic_char_property"] = [{"text":"impl&lt;V&gt; Freeze for <a class=\"enum\" href=\"unic_char_property/tables/enum.CharDataTable.html\" title=\"enum unic_char_property::tables::CharDataTable\">CharDataTable</a>&lt;V&gt;","synthetic":true,"types":["unic_char_property::tables::CharDataTable"]},{"text":"impl&lt;'a, V&gt; Freeze for <a class=\"struct\" href=\"unic_char_property/tables/struct.CharDataTableIter.html\" title=\"struct unic_char_property::tables::CharDataTableIter\">CharDataTableIter</a>&lt;'a, V&gt;","synthetic":true,"types":["unic_char_property::tables::CharDataTableIter"]}];
implementors["unic_char_range"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"unic_char_range/struct.CharIter.html\" title=\"struct unic_char_range::CharIter\">CharIter</a>","synthetic":true,"types":["unic_char_range::iter::CharIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"unic_char_range/struct.CharRange.html\" title=\"struct unic_char_range::CharRange\">CharRange</a>","synthetic":true,"types":["unic_char_range::range::CharRange"]}];
implementors["unic_common"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"unic_common/version/struct.UnicodeVersion.html\" title=\"struct unic_common::version::UnicodeVersion\">UnicodeVersion</a>","synthetic":true,"types":["unic_common::version::UnicodeVersion"]}];
implementors["unic_segment"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"unic_segment/struct.GraphemeIndices.html\" title=\"struct unic_segment::GraphemeIndices\">GraphemeIndices</a>&lt;'a&gt;","synthetic":true,"types":["unic_segment::grapheme::GraphemeIndices"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"unic_segment/struct.Graphemes.html\" title=\"struct unic_segment::Graphemes\">Graphemes</a>&lt;'a&gt;","synthetic":true,"types":["unic_segment::grapheme::Graphemes"]},{"text":"impl Freeze for <a class=\"struct\" href=\"unic_segment/struct.GraphemeCursor.html\" title=\"struct unic_segment::GraphemeCursor\">GraphemeCursor</a>","synthetic":true,"types":["unic_segment::grapheme::GraphemeCursor"]},{"text":"impl Freeze for <a class=\"enum\" href=\"unic_segment/enum.GraphemeIncomplete.html\" title=\"enum unic_segment::GraphemeIncomplete\">GraphemeIncomplete</a>","synthetic":true,"types":["unic_segment::grapheme::GraphemeIncomplete"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"unic_segment/struct.Words.html\" title=\"struct unic_segment::Words\">Words</a>&lt;'a&gt;","synthetic":true,"types":["unic_segment::word::Words"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"unic_segment/struct.WordBounds.html\" title=\"struct unic_segment::WordBounds\">WordBounds</a>&lt;'a&gt;","synthetic":true,"types":["unic_segment::word::WordBounds"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"unic_segment/struct.WordBoundIndices.html\" title=\"struct unic_segment::WordBoundIndices\">WordBoundIndices</a>&lt;'a&gt;","synthetic":true,"types":["unic_segment::word::WordBoundIndices"]}];
implementors["unic_ucd_segment"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"unic_ucd_segment/grapheme_cluster_break/enum.GraphemeClusterBreak.html\" title=\"enum unic_ucd_segment::grapheme_cluster_break::GraphemeClusterBreak\">GraphemeClusterBreak</a>","synthetic":true,"types":["unic_ucd_segment::grapheme_cluster_break::GraphemeClusterBreak"]},{"text":"impl Freeze for <a class=\"enum\" href=\"unic_ucd_segment/sentence_break/enum.SentenceBreak.html\" title=\"enum unic_ucd_segment::sentence_break::SentenceBreak\">SentenceBreak</a>","synthetic":true,"types":["unic_ucd_segment::sentence_break::SentenceBreak"]},{"text":"impl Freeze for <a class=\"enum\" href=\"unic_ucd_segment/word_break/enum.WordBreak.html\" title=\"enum unic_ucd_segment::word_break::WordBreak\">WordBreak</a>","synthetic":true,"types":["unic_ucd_segment::word_break::WordBreak"]}];
implementors["unicase"] = [{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"unicase/struct.UniCase.html\" title=\"struct unicase::UniCase\">UniCase</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["unicase::UniCase"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"unicase/struct.Ascii.html\" title=\"struct unicase::Ascii\">Ascii</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["unicase::Ascii"]}];
implementors["unicode_bidi"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"unicode_bidi/level/struct.Level.html\" title=\"struct unicode_bidi::level::Level\">Level</a>","synthetic":true,"types":["unicode_bidi::level::Level"]},{"text":"impl Freeze for <a class=\"enum\" href=\"unicode_bidi/level/enum.Error.html\" title=\"enum unicode_bidi::level::Error\">Error</a>","synthetic":true,"types":["unicode_bidi::level::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"unicode_bidi/enum.BidiClass.html\" title=\"enum unicode_bidi::BidiClass\">BidiClass</a>","synthetic":true,"types":["unicode_bidi::char_data::tables::BidiClass"]},{"text":"impl Freeze for <a class=\"struct\" href=\"unicode_bidi/struct.HardcodedBidiData.html\" title=\"struct unicode_bidi::HardcodedBidiData\">HardcodedBidiData</a>","synthetic":true,"types":["unicode_bidi::char_data::HardcodedBidiData"]},{"text":"impl Freeze for <a class=\"enum\" href=\"unicode_bidi/enum.Direction.html\" title=\"enum unicode_bidi::Direction\">Direction</a>","synthetic":true,"types":["unicode_bidi::Direction"]},{"text":"impl Freeze for <a class=\"struct\" href=\"unicode_bidi/struct.ParagraphInfo.html\" title=\"struct unicode_bidi::ParagraphInfo\">ParagraphInfo</a>","synthetic":true,"types":["unicode_bidi::ParagraphInfo"]},{"text":"impl&lt;'text&gt; Freeze for <a class=\"struct\" href=\"unicode_bidi/struct.InitialInfo.html\" title=\"struct unicode_bidi::InitialInfo\">InitialInfo</a>&lt;'text&gt;","synthetic":true,"types":["unicode_bidi::InitialInfo"]},{"text":"impl&lt;'text&gt; Freeze for <a class=\"struct\" href=\"unicode_bidi/struct.BidiInfo.html\" title=\"struct unicode_bidi::BidiInfo\">BidiInfo</a>&lt;'text&gt;","synthetic":true,"types":["unicode_bidi::BidiInfo"]},{"text":"impl&lt;'a, 'text&gt; Freeze for <a class=\"struct\" href=\"unicode_bidi/struct.Paragraph.html\" title=\"struct unicode_bidi::Paragraph\">Paragraph</a>&lt;'a, 'text&gt;","synthetic":true,"types":["unicode_bidi::Paragraph"]}];
implementors["unicode_linebreak"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"unicode_linebreak/enum.BreakClass.html\" title=\"enum unicode_linebreak::BreakClass\">BreakClass</a>","synthetic":true,"types":["unicode_linebreak::BreakClass"]},{"text":"impl Freeze for <a class=\"enum\" href=\"unicode_linebreak/enum.BreakOpportunity.html\" title=\"enum unicode_linebreak::BreakOpportunity\">BreakOpportunity</a>","synthetic":true,"types":["unicode_linebreak::BreakOpportunity"]}];
implementors["unicode_normalization"] = [{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"unicode_normalization/struct.Decompositions.html\" title=\"struct unicode_normalization::Decompositions\">Decompositions</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["unicode_normalization::decompose::Decompositions"]},{"text":"impl Freeze for <a class=\"enum\" href=\"unicode_normalization/enum.IsNormalized.html\" title=\"enum unicode_normalization::IsNormalized\">IsNormalized</a>","synthetic":true,"types":["unicode_normalization::quick_check::IsNormalized"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"unicode_normalization/struct.Recompositions.html\" title=\"struct unicode_normalization::Recompositions\">Recompositions</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["unicode_normalization::recompose::Recompositions"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"unicode_normalization/struct.Replacements.html\" title=\"struct unicode_normalization::Replacements\">Replacements</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["unicode_normalization::replace::Replacements"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"unicode_normalization/struct.StreamSafe.html\" title=\"struct unicode_normalization::StreamSafe\">StreamSafe</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["unicode_normalization::stream_safe::StreamSafe"]}];
implementors["unicode_segmentation"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"unicode_segmentation/struct.GraphemeIndices.html\" title=\"struct unicode_segmentation::GraphemeIndices\">GraphemeIndices</a>&lt;'a&gt;","synthetic":true,"types":["unicode_segmentation::grapheme::GraphemeIndices"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"unicode_segmentation/struct.Graphemes.html\" title=\"struct unicode_segmentation::Graphemes\">Graphemes</a>&lt;'a&gt;","synthetic":true,"types":["unicode_segmentation::grapheme::Graphemes"]},{"text":"impl Freeze for <a class=\"struct\" href=\"unicode_segmentation/struct.GraphemeCursor.html\" title=\"struct unicode_segmentation::GraphemeCursor\">GraphemeCursor</a>","synthetic":true,"types":["unicode_segmentation::grapheme::GraphemeCursor"]},{"text":"impl Freeze for <a class=\"enum\" href=\"unicode_segmentation/enum.GraphemeIncomplete.html\" title=\"enum unicode_segmentation::GraphemeIncomplete\">GraphemeIncomplete</a>","synthetic":true,"types":["unicode_segmentation::grapheme::GraphemeIncomplete"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"unicode_segmentation/struct.UnicodeSentences.html\" title=\"struct unicode_segmentation::UnicodeSentences\">UnicodeSentences</a>&lt;'a&gt;","synthetic":true,"types":["unicode_segmentation::sentence::UnicodeSentences"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"unicode_segmentation/struct.USentenceBounds.html\" title=\"struct unicode_segmentation::USentenceBounds\">USentenceBounds</a>&lt;'a&gt;","synthetic":true,"types":["unicode_segmentation::sentence::USentenceBounds"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"unicode_segmentation/struct.USentenceBoundIndices.html\" title=\"struct unicode_segmentation::USentenceBoundIndices\">USentenceBoundIndices</a>&lt;'a&gt;","synthetic":true,"types":["unicode_segmentation::sentence::USentenceBoundIndices"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"unicode_segmentation/struct.UnicodeWords.html\" title=\"struct unicode_segmentation::UnicodeWords\">UnicodeWords</a>&lt;'a&gt;","synthetic":true,"types":["unicode_segmentation::word::UnicodeWords"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"unicode_segmentation/struct.UnicodeWordIndices.html\" title=\"struct unicode_segmentation::UnicodeWordIndices\">UnicodeWordIndices</a>&lt;'a&gt;","synthetic":true,"types":["unicode_segmentation::word::UnicodeWordIndices"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"unicode_segmentation/struct.UWordBounds.html\" title=\"struct unicode_segmentation::UWordBounds\">UWordBounds</a>&lt;'a&gt;","synthetic":true,"types":["unicode_segmentation::word::UWordBounds"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"unicode_segmentation/struct.UWordBoundIndices.html\" title=\"struct unicode_segmentation::UWordBoundIndices\">UWordBoundIndices</a>&lt;'a&gt;","synthetic":true,"types":["unicode_segmentation::word::UWordBoundIndices"]}];
implementors["universal_hash"] = [{"text":"impl&lt;U&gt; Freeze for <a class=\"struct\" href=\"universal_hash/struct.Output.html\" title=\"struct universal_hash::Output\">Output</a>&lt;U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;U as <a class=\"trait\" href=\"universal_hash/trait.UniversalHash.html\" title=\"trait universal_hash::UniversalHash\">UniversalHash</a>&gt;::<a class=\"associatedtype\" href=\"universal_hash/trait.UniversalHash.html#associatedtype.BlockSize\" title=\"type universal_hash::UniversalHash::BlockSize\">BlockSize</a> as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.61.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["universal_hash::Output"]},{"text":"impl Freeze for <a class=\"struct\" href=\"universal_hash/struct.Error.html\" title=\"struct universal_hash::Error\">Error</a>","synthetic":true,"types":["universal_hash::Error"]}];
implementors["untrusted"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"untrusted/struct.Input.html\" title=\"struct untrusted::Input\">Input</a>&lt;'a&gt;","synthetic":true,"types":["untrusted::Input"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"untrusted/struct.Reader.html\" title=\"struct untrusted::Reader\">Reader</a>&lt;'a&gt;","synthetic":true,"types":["untrusted::Reader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"untrusted/struct.Mark.html\" title=\"struct untrusted::Mark\">Mark</a>","synthetic":true,"types":["untrusted::Mark"]},{"text":"impl Freeze for <a class=\"struct\" href=\"untrusted/struct.EndOfInput.html\" title=\"struct untrusted::EndOfInput\">EndOfInput</a>","synthetic":true,"types":["untrusted::EndOfInput"]}];
implementors["url"] = [{"text":"impl&lt;S&gt; Freeze for <a class=\"enum\" href=\"url/enum.Host.html\" title=\"enum url::Host\">Host</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["url::host::Host"]},{"text":"impl Freeze for <a class=\"enum\" href=\"url/enum.Origin.html\" title=\"enum url::Origin\">Origin</a>","synthetic":true,"types":["url::origin::Origin"]},{"text":"impl Freeze for <a class=\"struct\" href=\"url/struct.OpaqueOrigin.html\" title=\"struct url::OpaqueOrigin\">OpaqueOrigin</a>","synthetic":true,"types":["url::origin::OpaqueOrigin"]},{"text":"impl Freeze for <a class=\"enum\" href=\"url/enum.ParseError.html\" title=\"enum url::ParseError\">ParseError</a>","synthetic":true,"types":["url::parser::ParseError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"url/enum.SyntaxViolation.html\" title=\"enum url::SyntaxViolation\">SyntaxViolation</a>","synthetic":true,"types":["url::parser::SyntaxViolation"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"url/struct.PathSegmentsMut.html\" title=\"struct url::PathSegmentsMut\">PathSegmentsMut</a>&lt;'a&gt;","synthetic":true,"types":["url::path_segments::PathSegmentsMut"]},{"text":"impl Freeze for <a class=\"enum\" href=\"url/enum.Position.html\" title=\"enum url::Position\">Position</a>","synthetic":true,"types":["url::slicing::Position"]},{"text":"impl Freeze for <a class=\"struct\" href=\"url/struct.Url.html\" title=\"struct url::Url\">Url</a>","synthetic":true,"types":["url::Url"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"url/struct.ParseOptions.html\" title=\"struct url::ParseOptions\">ParseOptions</a>&lt;'a&gt;","synthetic":true,"types":["url::ParseOptions"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"url/struct.UrlQuery.html\" title=\"struct url::UrlQuery\">UrlQuery</a>&lt;'a&gt;","synthetic":true,"types":["url::UrlQuery"]}];
implementors["utf8"] = [{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"utf8/struct.LossyDecoder.html\" title=\"struct utf8::LossyDecoder\">LossyDecoder</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["utf8::lossy::LossyDecoder"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"utf8/struct.BufReadDecoder.html\" title=\"struct utf8::BufReadDecoder\">BufReadDecoder</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["utf8::read::BufReadDecoder"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"utf8/enum.BufReadDecoderError.html\" title=\"enum utf8::BufReadDecoderError\">BufReadDecoderError</a>&lt;'a&gt;","synthetic":true,"types":["utf8::read::BufReadDecoderError"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"utf8/enum.DecodeError.html\" title=\"enum utf8::DecodeError\">DecodeError</a>&lt;'a&gt;","synthetic":true,"types":["utf8::DecodeError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"utf8/struct.Incomplete.html\" title=\"struct utf8::Incomplete\">Incomplete</a>","synthetic":true,"types":["utf8::Incomplete"]}];
implementors["walkdir"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"walkdir/struct.DirEntry.html\" title=\"struct walkdir::DirEntry\">DirEntry</a>","synthetic":true,"types":["walkdir::dent::DirEntry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"walkdir/struct.Error.html\" title=\"struct walkdir::Error\">Error</a>","synthetic":true,"types":["walkdir::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"walkdir/struct.WalkDir.html\" title=\"struct walkdir::WalkDir\">WalkDir</a>","synthetic":true,"types":["walkdir::WalkDir"]},{"text":"impl Freeze for <a class=\"struct\" href=\"walkdir/struct.IntoIter.html\" title=\"struct walkdir::IntoIter\">IntoIter</a>","synthetic":true,"types":["walkdir::IntoIter"]},{"text":"impl&lt;I, P&gt; Freeze for <a class=\"struct\" href=\"walkdir/struct.FilterEntry.html\" title=\"struct walkdir::FilterEntry\">FilterEntry</a>&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["walkdir::FilterEntry"]}];
implementors["want"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"want/struct.Giver.html\" title=\"struct want::Giver\">Giver</a>","synthetic":true,"types":["want::Giver"]},{"text":"impl Freeze for <a class=\"struct\" href=\"want/struct.Taker.html\" title=\"struct want::Taker\">Taker</a>","synthetic":true,"types":["want::Taker"]},{"text":"impl Freeze for <a class=\"struct\" href=\"want/struct.SharedGiver.html\" title=\"struct want::SharedGiver\">SharedGiver</a>","synthetic":true,"types":["want::SharedGiver"]},{"text":"impl Freeze for <a class=\"struct\" href=\"want/struct.Closed.html\" title=\"struct want::Closed\">Closed</a>","synthetic":true,"types":["want::Closed"]}];
implementors["warp"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"warp/struct.Error.html\" title=\"struct warp::Error\">Error</a>","synthetic":true,"types":["warp::error::Error"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"warp/filters/struct.BoxedFilter.html\" title=\"struct warp::filters::BoxedFilter\">BoxedFilter</a>&lt;T&gt;","synthetic":true,"types":["warp::filter::boxed::BoxedFilter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"warp/filters/body/struct.BodyDeserializeError.html\" title=\"struct warp::filters::body::BodyDeserializeError\">BodyDeserializeError</a>","synthetic":true,"types":["warp::filters::body::BodyDeserializeError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"warp/filters/cors/struct.Cors.html\" title=\"struct warp::filters::cors::Cors\">Cors</a>","synthetic":true,"types":["warp::filters::cors::Cors"]},{"text":"impl Freeze for <a class=\"struct\" href=\"warp/filters/cors/struct.Builder.html\" title=\"struct warp::filters::cors::Builder\">Builder</a>","synthetic":true,"types":["warp::filters::cors::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"warp/filters/cors/struct.CorsForbidden.html\" title=\"struct warp::filters::cors::CorsForbidden\">CorsForbidden</a>","synthetic":true,"types":["warp::filters::cors::CorsForbidden"]},{"text":"impl Freeze for <a class=\"struct\" href=\"warp/filters/ext/struct.MissingExtension.html\" title=\"struct warp::filters::ext::MissingExtension\">MissingExtension</a>","synthetic":true,"types":["warp::filters::ext::MissingExtension"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"warp/filters/fs/struct.File.html\" title=\"struct warp::filters::fs::File\">File</a>","synthetic":true,"types":["warp::filters::fs::File"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"warp/filters/log/struct.Log.html\" title=\"struct warp::filters::log::Log\">Log</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["warp::filters::log::Log"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"warp/filters/log/struct.Info.html\" title=\"struct warp::filters::log::Info\">Info</a>&lt;'a&gt;","synthetic":true,"types":["warp::filters::log::Info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"warp/filters/multipart/struct.FormOptions.html\" title=\"struct warp::filters::multipart::FormOptions\">FormOptions</a>","synthetic":true,"types":["warp::filters::multipart::FormOptions"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"warp/filters/multipart/struct.FormData.html\" title=\"struct warp::filters::multipart::FormData\">FormData</a>","synthetic":true,"types":["warp::filters::multipart::FormData"]},{"text":"impl Freeze for <a class=\"struct\" href=\"warp/filters/multipart/struct.Part.html\" title=\"struct warp::filters::multipart::Part\">Part</a>","synthetic":true,"types":["warp::filters::multipart::Part"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"warp/filters/path/struct.Exact.html\" title=\"struct warp::filters::path::Exact\">Exact</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["warp::filters::path::Exact"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"warp/filters/path/struct.Tail.html\" title=\"struct warp::filters::path::Tail\">Tail</a>","synthetic":true,"types":["warp::filters::path::Tail"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"warp/filters/path/struct.Peek.html\" title=\"struct warp::filters::path::Peek\">Peek</a>","synthetic":true,"types":["warp::filters::path::Peek"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"warp/filters/path/struct.FullPath.html\" title=\"struct warp::filters::path::FullPath\">FullPath</a>","synthetic":true,"types":["warp::filters::path::FullPath"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"warp/filters/reply/struct.WithHeader.html\" title=\"struct warp::filters::reply::WithHeader\">WithHeader</a>","synthetic":true,"types":["warp::filters::reply::WithHeader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"warp/filters/reply/struct.WithHeaders.html\" title=\"struct warp::filters::reply::WithHeaders\">WithHeaders</a>","synthetic":true,"types":["warp::filters::reply::WithHeaders"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"warp/filters/reply/struct.WithDefaultHeader.html\" title=\"struct warp::filters::reply::WithDefaultHeader\">WithDefaultHeader</a>","synthetic":true,"types":["warp::filters::reply::WithDefaultHeader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"warp/filters/sse/struct.Event.html\" title=\"struct warp::filters::sse::Event\">Event</a>","synthetic":true,"types":["warp::filters::sse::Event"]},{"text":"impl Freeze for <a class=\"struct\" href=\"warp/filters/sse/struct.KeepAlive.html\" title=\"struct warp::filters::sse::KeepAlive\">KeepAlive</a>","synthetic":true,"types":["warp::filters::sse::KeepAlive"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"warp/filters/trace/struct.Trace.html\" title=\"struct warp::filters::trace::Trace\">Trace</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["warp::filters::trace::Trace"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"warp/filters/trace/struct.Info.html\" title=\"struct warp::filters::trace::Info\">Info</a>&lt;'a&gt;","synthetic":true,"types":["warp::filters::trace::Info"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"warp/filters/ws/struct.Ws.html\" title=\"struct warp::filters::ws::Ws\">Ws</a>","synthetic":true,"types":["warp::filters::ws::Ws"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"warp/filters/ws/struct.WebSocket.html\" title=\"struct warp::filters::ws::WebSocket\">WebSocket</a>","synthetic":true,"types":["warp::filters::ws::WebSocket"]},{"text":"impl Freeze for <a class=\"struct\" href=\"warp/filters/ws/struct.Message.html\" title=\"struct warp::filters::ws::Message\">Message</a>","synthetic":true,"types":["warp::filters::ws::Message"]},{"text":"impl Freeze for <a class=\"struct\" href=\"warp/filters/ws/struct.MissingConnectionUpgrade.html\" title=\"struct warp::filters::ws::MissingConnectionUpgrade\">MissingConnectionUpgrade</a>","synthetic":true,"types":["warp::filters::ws::MissingConnectionUpgrade"]},{"text":"impl Freeze for <a class=\"struct\" href=\"warp/reject/struct.Rejection.html\" title=\"struct warp::reject::Rejection\">Rejection</a>","synthetic":true,"types":["warp::reject::Rejection"]},{"text":"impl Freeze for <a class=\"struct\" href=\"warp/reject/struct.InvalidQuery.html\" title=\"struct warp::reject::InvalidQuery\">InvalidQuery</a>","synthetic":true,"types":["warp::reject::InvalidQuery"]},{"text":"impl Freeze for <a class=\"struct\" href=\"warp/reject/struct.MethodNotAllowed.html\" title=\"struct warp::reject::MethodNotAllowed\">MethodNotAllowed</a>","synthetic":true,"types":["warp::reject::MethodNotAllowed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"warp/reject/struct.LengthRequired.html\" title=\"struct warp::reject::LengthRequired\">LengthRequired</a>","synthetic":true,"types":["warp::reject::LengthRequired"]},{"text":"impl Freeze for <a class=\"struct\" href=\"warp/reject/struct.PayloadTooLarge.html\" title=\"struct warp::reject::PayloadTooLarge\">PayloadTooLarge</a>","synthetic":true,"types":["warp::reject::PayloadTooLarge"]},{"text":"impl Freeze for <a class=\"struct\" href=\"warp/reject/struct.UnsupportedMediaType.html\" title=\"struct warp::reject::UnsupportedMediaType\">UnsupportedMediaType</a>","synthetic":true,"types":["warp::reject::UnsupportedMediaType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"warp/reject/struct.MissingHeader.html\" title=\"struct warp::reject::MissingHeader\">MissingHeader</a>","synthetic":true,"types":["warp::reject::MissingHeader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"warp/reject/struct.InvalidHeader.html\" title=\"struct warp::reject::InvalidHeader\">InvalidHeader</a>","synthetic":true,"types":["warp::reject::InvalidHeader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"warp/reject/struct.MissingCookie.html\" title=\"struct warp::reject::MissingCookie\">MissingCookie</a>","synthetic":true,"types":["warp::reject::MissingCookie"]},{"text":"impl Freeze for <a class=\"struct\" href=\"warp/reply/struct.Json.html\" title=\"struct warp::reply::Json\">Json</a>","synthetic":true,"types":["warp::reply::Json"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"warp/reply/struct.Html.html\" title=\"struct warp::reply::Html\">Html</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["warp::reply::Html"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"warp/reply/struct.WithStatus.html\" title=\"struct warp::reply::WithStatus\">WithStatus</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["warp::reply::WithStatus"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"warp/reply/struct.WithHeader.html\" title=\"struct warp::reply::WithHeader\">WithHeader</a>&lt;T&gt;","synthetic":true,"types":["warp::reply::WithHeader"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"warp/struct.Server.html\" title=\"struct warp::Server\">Server</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["warp::server::Server"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"warp/test/struct.RequestBuilder.html\" title=\"struct warp::test::RequestBuilder\">RequestBuilder</a>","synthetic":true,"types":["warp::test::RequestBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"warp/test/struct.WsBuilder.html\" title=\"struct warp::test::WsBuilder\">WsBuilder</a>","synthetic":true,"types":["warp::test::WsBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"warp/test/struct.WsClient.html\" title=\"struct warp::test::WsClient\">WsClient</a>","synthetic":true,"types":["warp::test::WsClient"]},{"text":"impl Freeze for <a class=\"struct\" href=\"warp/test/struct.WsError.html\" title=\"struct warp::test::WsError\">WsError</a>","synthetic":true,"types":["warp::test::WsError"]}];
implementors["x25519_dalek"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"x25519_dalek/struct.PublicKey.html\" title=\"struct x25519_dalek::PublicKey\">PublicKey</a>","synthetic":true,"types":["x25519_dalek::x25519::PublicKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"x25519_dalek/struct.EphemeralSecret.html\" title=\"struct x25519_dalek::EphemeralSecret\">EphemeralSecret</a>","synthetic":true,"types":["x25519_dalek::x25519::EphemeralSecret"]},{"text":"impl Freeze for <a class=\"struct\" href=\"x25519_dalek/struct.StaticSecret.html\" title=\"struct x25519_dalek::StaticSecret\">StaticSecret</a>","synthetic":true,"types":["x25519_dalek::x25519::StaticSecret"]},{"text":"impl Freeze for <a class=\"struct\" href=\"x25519_dalek/struct.SharedSecret.html\" title=\"struct x25519_dalek::SharedSecret\">SharedSecret</a>","synthetic":true,"types":["x25519_dalek::x25519::SharedSecret"]}];
implementors["yaml_rust"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"yaml_rust/emitter/enum.EmitError.html\" title=\"enum yaml_rust::emitter::EmitError\">EmitError</a>","synthetic":true,"types":["yaml_rust::emitter::EmitError"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"yaml_rust/emitter/struct.YamlEmitter.html\" title=\"struct yaml_rust::emitter::YamlEmitter\">YamlEmitter</a>&lt;'a&gt;","synthetic":true,"types":["yaml_rust::emitter::YamlEmitter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"yaml_rust/parser/enum.Event.html\" title=\"enum yaml_rust::parser::Event\">Event</a>","synthetic":true,"types":["yaml_rust::parser::Event"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"yaml_rust/parser/struct.Parser.html\" title=\"struct yaml_rust::parser::Parser\">Parser</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["yaml_rust::parser::Parser"]},{"text":"impl Freeze for <a class=\"enum\" href=\"yaml_rust/scanner/enum.TEncoding.html\" title=\"enum yaml_rust::scanner::TEncoding\">TEncoding</a>","synthetic":true,"types":["yaml_rust::scanner::TEncoding"]},{"text":"impl Freeze for <a class=\"enum\" href=\"yaml_rust/scanner/enum.TScalarStyle.html\" title=\"enum yaml_rust::scanner::TScalarStyle\">TScalarStyle</a>","synthetic":true,"types":["yaml_rust::scanner::TScalarStyle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"yaml_rust/scanner/struct.Marker.html\" title=\"struct yaml_rust::scanner::Marker\">Marker</a>","synthetic":true,"types":["yaml_rust::scanner::Marker"]},{"text":"impl Freeze for <a class=\"struct\" href=\"yaml_rust/scanner/struct.ScanError.html\" title=\"struct yaml_rust::scanner::ScanError\">ScanError</a>","synthetic":true,"types":["yaml_rust::scanner::ScanError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"yaml_rust/scanner/enum.TokenType.html\" title=\"enum yaml_rust::scanner::TokenType\">TokenType</a>","synthetic":true,"types":["yaml_rust::scanner::TokenType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"yaml_rust/scanner/struct.Token.html\" title=\"struct yaml_rust::scanner::Token\">Token</a>","synthetic":true,"types":["yaml_rust::scanner::Token"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"yaml_rust/scanner/struct.Scanner.html\" title=\"struct yaml_rust::scanner::Scanner\">Scanner</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["yaml_rust::scanner::Scanner"]},{"text":"impl Freeze for <a class=\"enum\" href=\"yaml_rust/yaml/enum.Yaml.html\" title=\"enum yaml_rust::yaml::Yaml\">Yaml</a>","synthetic":true,"types":["yaml_rust::yaml::Yaml"]},{"text":"impl Freeze for <a class=\"struct\" href=\"yaml_rust/yaml/struct.YamlLoader.html\" title=\"struct yaml_rust::yaml::YamlLoader\">YamlLoader</a>","synthetic":true,"types":["yaml_rust::yaml::YamlLoader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"yaml_rust/yaml/struct.YamlIter.html\" title=\"struct yaml_rust::yaml::YamlIter\">YamlIter</a>","synthetic":true,"types":["yaml_rust::yaml::YamlIter"]}];
implementors["zeroize"] = [{"text":"impl&lt;Z&gt; Freeze for <a class=\"struct\" href=\"zeroize/struct.Zeroizing.html\" title=\"struct zeroize::Zeroizing\">Zeroizing</a>&lt;Z&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Z: Freeze,&nbsp;</span>","synthetic":true,"types":["zeroize::Zeroizing"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()